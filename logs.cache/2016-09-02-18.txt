02.09 18:07:55 TIMER: Starting timer...
02.09 18:07:55 TIMER: Timer running...
02.09 18:07:55 DB: SELECT * FROM GameVars
02.09 18:07:55 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 18:07:55 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 18:07:55 DB: SELECT * FROM Shops WHERE ID = 1
02.09 18:07:55 TEMP: load ./tmp/quest_daily_ids
02.09 18:07:55 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
02.09 18:07:55 TEMP: save ./tmp/quest_daily_ids
02.09 18:07:55 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
02.09 18:07:55 QUEUE: vdl.0 (thread) response server.login
02.09 18:07:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
02.09 18:07:55 DB: SELECT * FROM LocalizationStrings
02.09 18:07:55 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:07:55 TIME: core/server.query : 6.54 ms
02.09 18:07:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
02.09 18:07:55 DB: SELECT * FROM GameVars
02.09 18:07:55 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:07:55 TIME: core/server.query : 0.63 ms
02.09 18:07:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
02.09 18:07:55 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
02.09 18:07:55 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:07:55 TIME: core/server.query : 0.95 ms
02.09 18:07:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
02.09 18:07:55 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
02.09 18:07:55 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:07:55 TIME: core/server.query : 0.56 ms
02.09 18:07:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
02.09 18:07:55 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
02.09 18:07:55 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:07:55 TIME: core/server.query : 0.92 ms
02.09 18:07:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
02.09 18:07:55 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
02.09 18:07:55 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:07:55 TIME: core/server.query : 1.26 ms
02.09 18:07:55 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
02.09 18:07:55 QUEUE: vdl.0 (thread) response core/quest.getDaily
02.09 18:07:55 TIME: core/quest.getDaily : 0.02 ms
02.09 18:07:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
02.09 18:07:55 DB: SELECT * FROM UserAttributeTypes
02.09 18:07:55 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:07:55 TIME: core/server.query : 0.61 ms
02.09 18:07:55 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
02.09 18:07:55 DB: SELECT * FROM UserVariableTypes
02.09 18:07:55 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:07:55 TIME: core/server.query : 0.95 ms
02.09 18:07:55 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
02.09 18:07:55 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i02.09 18:16:41 TIMER: Starting timer...
02.09 18:16:41 TIMER: Timer running...
02.09 18:16:41 DB: SELECT * FROM GameVars
02.09 18:16:41 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 18:16:41 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 18:16:41 DB: SELECT * FROM Shops WHERE ID = 1
02.09 18:16:41 TEMP: load ./tmp/quest_daily_ids
02.09 18:16:41 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
02.09 18:16:41 TEMP: save ./tmp/quest_daily_ids
02.09 18:16:41 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
02.09 18:16:41 QUEUE: vdl.0 (thread) response server.login
02.09 18:16:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
02.09 18:16:41 DB: SELECT * FROM LocalizationStrings
02.09 18:16:41 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:16:41 TIME: core/server.query : 5.76 ms
02.09 18:16:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
02.09 18:16:41 DB: SELECT * FROM GameVars
02.09 18:16:41 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:16:41 TIME: core/server.query : 0.78 ms
02.09 18:16:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
02.09 18:16:41 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
02.09 18:16:41 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:16:41 TIME: core/server.query : 0.73 ms
02.09 18:16:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
02.09 18:16:41 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
02.09 18:16:41 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:16:41 TIME: core/server.query : 0.36 ms
02.09 18:16:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
02.09 18:16:41 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
02.09 18:16:41 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:16:41 TIME: core/server.query : 0.46 ms
02.09 18:16:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
02.09 18:16:41 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
02.09 18:16:41 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:16:41 TIME: core/server.query : 0.81 ms
02.09 18:16:41 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
02.09 18:16:41 QUEUE: vdl.0 (thread) response core/quest.getDaily
02.09 18:16:41 TIME: core/quest.getDaily : 0.02 ms
02.09 18:16:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
02.09 18:16:41 DB: SELECT * FROM UserAttributeTypes
02.09 18:16:41 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:16:41 TIME: core/server.query : 0.32 ms
02.09 18:16:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
02.09 18:16:41 DB: SELECT * FROM UserVariableTypes
02.09 18:16:41 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:16:41 TIME: core/server.query : 0.47 ms
02.09 18:16:41 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
02.09 18:16:41 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
02.09 18:16:41 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:16:41 TIME: core/server.query : 0.99 ms
02.09 18:16:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
02.09 18:16:41 DB: SELECT * FROM ItemGroups
02.09 18:16:41 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:16:41 TIME: core/server.query : 0.4 ms
02.09 18:16:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
02.09 18:16:41 DB: SELECT * FROM Bundles ORDER BY ID
02.09 18:16:41 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:16:41 TIME: core/server.query : 0.44 ms
02.09 18:16:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
02.09 18:16:41 DB: SELECT * FROM BundleItems ORDER BY ID
02.09 18:16:41 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:16:41 TIME: core/server.query : 0.53 ms
02.09 18:16:41 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
02.09 18:16:41 QUEUE: vdl.0 (thread) response core/shop.getList
02.09 18:16:41 TIME: core/shop.getList : 0.02 ms
02.09 18:16:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
02.09 18:16:41 DB: SELECT * FROM EffectAttributeTypes
02.09 18:16:41 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:16:41 TIME: core/server.query : 0.3 ms
02.09 18:16:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
02.09 18:16:41 DB: SELECT * FROM Effects
02.09 18:16:41 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:16:41 TIME: core/server.query : 0.54 ms
02.09 18:16:41 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
02.09 18:16:41 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 18:16:41 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:16:41 TIME: core/server.query : 0.57 ms
02.09 18:16:41 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
02.09 18:16:41 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 18:16:41 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:16:41 TIME: core/server.query : 0.49 ms
02.09 18:16:41 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
02.09 18:16:41 DB: SELECT * FROM Badges
02.09 18:16:41 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:16:41 TIME: core/server.query : 0.39 ms
02.09 18:16:41 TIMER: Clans cache...
02.09 18:16:41 TIMER: Clans cache: 0ms
02.09 18:17:54 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
02.09 18:17:54 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
02.09 18:17:54 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:17:54 TIME: core/server.query : 2.96 ms
02.09 18:17:54 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
02.09 18:17:54 QUEUE: vdl.0 (thread) response core/user.isOnlineID
02.09 18:17:54 TIME: core/user.isOnlineID : 0.13 ms
02.09 18:17:54 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
02.09 18:17:54 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.09 18:17:54 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
02.09 18:17:54 STATS: cache [user], database [73 calls, 0 reads, 0 writes]
02.09 18:17:54 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
02.09 18:17:54 READDB: SELECT * FROM Users WHERE ID = 3
02.09 18:17:54 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.2 ms]
02.09 18:17:54 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
02.09 18:17:54 QUEUE: vdl.0 (thread) response core/cache.get
02.09 18:17:54 TIME: core/cache.get : 4.55 ms
02.09 18:17:54 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
02.09 18:17:54 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.09 18:17:54 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
02.09 18:17:54 STATS: cache [questdata], database [73 calls, 0 reads, 0 writes]
02.09 18:17:54 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
02.09 18:17:54 READDB: SELECT * FROM UserQuests WHERE ID = 3
02.09 18:17:54 QUEUE: vdl.0 (thread) response core/cache.get
02.09 18:17:54 TIME: core/cache.get : 1.64 ms
02.09 18:17:54 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
02.09 18:17:54 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.09 18:17:54 TIME: core/user.loginPost : 1.22 ms
02.09 18:17:54 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
02.09 18:17:54 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
02.09 18:17:54 DB: SELECT id, firstid FROM battle WHERE avaliable = true AND finished <> true
02.09 18:17:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => [{ id => 33, first => 2 }], count => 1, errorCode => ok, _type => vdl/cache.battle.find }
02.09 18:17:54 TIME: vdl/cache.battle.find : 3.12 ms
02.09 18:17:54 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => 33, selfId => 3, _type => vdl/cache.battle.join }
02.09 18:17:54 TRACE: vdl/cache.battle.join : Invalid field access : set
02.09 18:17:54 TRACE: vdl/cache.battle.join : 
Called from modules/VDLCache.hx line 173
Called from modules/VDLCache.hx line 102
Called from modules/VDLCache.hx line 57
Called from snipe/cache/CacheServer.hx line 487
02.09 18:17:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { errorCode => _requestException, _type => vdl/cache.battle.join }
02.09 18:18:02 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
02.09 18:18:02 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 18:18:02 TIME: core/cache.update : 0.17 ms
02.09 18:18:02 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472825979,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 3
02.09 18:19:19 TIMER: Starting timer...
02.09 18:19:19 TIMER: Timer running...
02.09 18:19:19 DB: SELECT * FROM GameVars
02.09 18:19:19 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 18:19:19 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 18:19:19 DB: SELECT * FROM Shops WHERE ID = 1
02.09 18:19:19 TEMP: load ./tmp/quest_daily_ids
02.09 18:19:19 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
02.09 18:19:19 TEMP: save ./tmp/quest_daily_ids
02.09 18:19:19 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
02.09 18:19:19 QUEUE: vdl.0 (thread) response server.login
02.09 18:19:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
02.09 18:19:19 DB: SELECT * FROM LocalizationStrings
02.09 18:19:19 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:19:19 TIME: core/server.query : 8.08 ms
02.09 18:19:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
02.09 18:19:19 DB: SELECT * FROM GameVars
02.09 18:19:19 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:19:19 TIME: core/server.query : 0.52 ms
02.09 18:19:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
02.09 18:19:19 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
02.09 18:19:19 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:19:19 TIME: core/server.query : 0.69 ms
02.09 18:19:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
02.09 18:19:19 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
02.09 18:19:19 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:19:19 TIME: core/server.query : 0.43 ms
02.09 18:19:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
02.09 18:19:19 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
02.09 18:19:19 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:19:19 TIME: core/server.query : 0.65 ms
02.09 18:19:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
02.09 18:19:19 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
02.09 18:19:19 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:19:19 TIME: core/server.query : 0.9 ms
02.09 18:19:19 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
02.09 18:19:19 QUEUE: vdl.0 (thread) response core/quest.getDaily
02.09 18:19:19 TIME: core/quest.getDaily : 0.02 ms
02.09 18:19:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
02.09 18:19:19 DB: SELECT * FROM UserAttributeTypes
02.09 18:19:19 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:19:19 TIME: core/server.query : 0.78 ms
02.09 18:19:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
02.09 18:19:19 DB: SELECT * FROM UserVariableTypes
02.09 18:19:19 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:19:19 TIME: core/server.query : 0.3 ms
02.09 18:19:19 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
02.09 18:19:19 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
02.09 18:19:19 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:19:19 TIME: core/server.query : 0.97 ms
02.09 18:19:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
02.09 18:19:19 DB: SELECT * FROM ItemGroups
02.09 18:19:19 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:19:19 TIME: core/server.query : 0.42 ms
02.09 18:19:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
02.09 18:19:19 DB: SELECT * FROM Bundles ORDER BY ID
02.09 18:19:19 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:19:19 TIME: core/server.query : 0.5 ms
02.09 18:19:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
02.09 18:19:19 DB: SELECT * FROM BundleItems ORDER BY ID
02.09 18:19:19 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:19:19 TIME: core/server.query : 0.55 ms
02.09 18:19:19 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
02.09 18:19:19 QUEUE: vdl.0 (thread) response core/shop.getList
02.09 18:19:19 TIME: core/shop.getList : 0.02 ms
02.09 18:19:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
02.09 18:19:19 DB: SELECT * FROM EffectAttributeTypes
02.09 18:19:19 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:19:19 TIME: core/server.query : 0.47 ms
02.09 18:19:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
02.09 18:19:19 DB: SELECT * FROM Effects
02.09 18:19:19 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:19:19 TIME: core/server.query : 0.47 ms
02.09 18:19:19 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
02.09 18:19:19 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 18:19:19 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:19:19 TIME: core/server.query : 0.62 ms
02.09 18:19:19 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
02.09 18:19:19 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 18:19:19 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:19:19 TIME: core/server.query : 0.58 ms
02.09 18:19:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
02.09 18:19:19 DB: SELECT * FROM Badges
02.09 18:19:19 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:19:19 TIME: core/server.query : 0.42 ms
02.09 18:20:08 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
02.09 18:20:08 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
02.09 18:20:08 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:20:08 TIME: core/server.query : 3.13 ms
02.09 18:20:08 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
02.09 18:20:08 QUEUE: vdl.0 (thread) response core/user.isOnlineID
02.09 18:20:08 TIME: core/user.isOnlineID : 0.11 ms
02.09 18:20:08 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
02.09 18:20:08 READDB: SELECT * FROM Users WHERE ID = 2
02.09 18:20:08 QUEUE: vdl.0 (thread) response core/cache.get
02.09 18:20:08 TIME: core/cache.get : 3.81 ms
02.09 18:20:08 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
02.09 18:20:08 READDB: SELECT * FROM UserQuests WHERE ID = 2
02.09 18:20:08 QUEUE: vdl.0 (thread) response core/cache.get
02.09 18:20:08 TIME: core/cache.get : 1.69 ms
02.09 18:20:08 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
02.09 18:20:08 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.09 18:20:08 TIME: core/user.loginPost : 0.15 ms
02.09 18:20:08 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
02.09 18:20:08 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
02.09 18:20:08 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
02.09 18:20:08 TIME: vdl/cache.battle.find : 2.08 ms
02.09 18:20:08 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
02.09 18:20:08 DB: SELECT nextval('Battle_id_seq') AS id
02.09 18:20:08 READDB: SELECT ID FROM Battle WHERE ID = 34
02.09 18:20:08 READDB: INSERT INTO Battle (ID) VALUES (34)
02.09 18:20:08 READDB: SELECT * FROM Battle WHERE ID = 34
02.09 18:20:08 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { room => 34, errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
02.09 18:20:08 TIME: vdl/cache.battle.create : 40.35 ms
02.09 18:20:14 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'true' WHERE ID = 34
02.09 18:20:14 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1472829608 } }}, type => user, unlock => false, id => 2, _type => core/cache.update }
02.09 18:20:14 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 18:20:14 TIME: core/cache.update : 0.2 ms
02.09 18:20:15 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472829608,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 2
02.09 18:20:19 TIMER: Clans cache...
02.09 18:20:19 TIMER: Clans cache: 0ms
02.09 18:20:59 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
02.09 18:20:59 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
02.09 18:20:59 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2, networkid => , isbanned => false, id => 3 }}, errorCode => ok, _type => core/server.query }
02.09 18:20:59 TIME: core/server.query : 2.09 ms
02.09 18:20:59 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
02.09 18:20:59 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
02.09 18:20:59 TIME: core/user.isOnlineID : 0.08 ms
02.09 18:20:59 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
02.09 18:20:59 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
02.09 18:20:59 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
02.09 18:20:59 STATS: cache [user], database [101 calls, 1 reads, 1 writes]
02.09 18:20:59 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
02.09 18:20:59 READDB: SELECT * FROM Users WHERE ID = 3
02.09 18:20:59 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.15 ms]
02.09 18:20:59 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.08 ms]
02.09 18:20:59 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test2, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:48:03.859813+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472825979, lastLoginDate => 246, lastLoadDate => 903 }, effects => { list => [] } }}, version => 0, id => 3 } }
02.09 18:20:59 TIME: core/cache.get : 1.49 ms
02.09 18:20:59 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
02.09 18:20:59 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
02.09 18:20:59 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
02.09 18:20:59 STATS: cache [questdata], database [101 calls, 1 reads, 0 writes]
02.09 18:20:59 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
02.09 18:20:59 READDB: SELECT * FROM UserQuests WHERE ID = 3
02.09 18:20:59 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 3 } }
02.09 18:20:59 TIME: core/cache.get : 0.74 ms
02.09 18:20:59 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
02.09 18:20:59 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.09 18:20:59 TIME: core/user.loginPost : 0.06 ms
02.09 18:21:00 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
02.09 18:21:00 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
02.09 18:21:00 DB: SELECT id, firstid FROM battle WHERE avaliable = true AND finished <> true
02.09 18:21:00 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => [{ id => 34, first => 2 }], count => 1, errorCode => ok, _type => vdl/cache.battle.find }
02.09 18:21:00 TIME: vdl/cache.battle.find : 3.04 ms
02.09 18:21:00 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => 34, selfId => 3, _type => vdl/cache.battle.join }
02.09 18:21:00 STATS: cache [battle], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
02.09 18:21:00 STATS: cache [battle], segments [4 calls, 1 hits, 2 misses]
02.09 18:21:00 STATS: cache [battle], database [102 calls, 1 reads, 1 writes]
02.09 18:21:00 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
02.09 18:21:00 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { room => 34, errorCode => true, _type => vdl/cache.battle.join, player => 2 }
02.09 18:21:00 TIME: vdl/cache.battle.join : 0.42 ms
02.09 18:21:00 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=3, _type => core/server.query }
02.09 18:21:00 DB: SELECT name FROM users WHERE id=3
02.09 18:21:00 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2 }}, errorCode => ok, _type => core/server.query }
02.09 18:21:00 TIME: core/server.query : 2.74 ms
02.09 18:21:00 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=2, _type => core/server.query }
02.09 18:21:00 DB: SELECT name FROM users WHERE id=2
02.09 18:21:00 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1 }}, errorCode => ok, _type => core/server.query }
02.09 18:21:00 TIME: core/server.query : 0.84 ms
02.09 18:21:01 WRITEDB: UPDATE Battle SET secondid = E'3', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'false' WHERE ID = 34
02.09 18:21:04 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
02.09 18:21:04 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 18:21:04 TIME: core/cache.update : 0.16 ms
02.09 18:21:04 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472825979,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 3
02.09 18:21:19 TIMER: Clans cache...
02.09 18:21:19 TIMER: Clans cache: 0ms
02.09 18:21:19 TIMER: Clans cache...
02.09 18:21:19 TIMER: Clans cache: 0ms
02.09 18:22:27 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
02.09 18:22:27 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
02.09 18:22:27 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 34 }}, errorCode => ok, _type => core/server.query }
02.09 18:22:27 TIME: core/server.query : 1.19 ms
02.09 18:22:27 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 34, _type => vdl/cache.battle.deleteRoom }
02.09 18:22:27 ROOM: deleted room 34
02.09 18:22:27 STATS: cache [battle], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
02.09 18:22:27 STATS: cache [battle], segments [5 calls, 2 hits, 2 misses]
02.09 18:22:27 STATS: cache [battle], database [189 calls, 1 reads, 2 writes]
02.09 18:22:27 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
02.09 18:22:27 DB: DELETE FROM Battle WHERE ID = 34
02.09 18:22:28 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => true, _type => vdl/cache.battle.deleteRoom }
02.09 18:22:28 TIME: vdl/cache.battle.deleteRoom : 29.74 ms
02.09 18:22:28 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
02.09 18:22:28 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
02.09 18:22:28 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
02.09 18:22:28 STATS: cache [user], database [189 calls, 2 reads, 2 writes]
02.09 18:22:28 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
02.09 18:22:28 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.78 ms]
02.09 18:22:28 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.15 ms]
02.09 18:22:28 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
02.09 18:22:28 TIME: core/cache.update : 0.52 ms
02.09 18:22:28 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
02.09 18:22:28 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
02.09 18:22:28 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
02.09 18:22:28 STATS: cache [questdata], database [189 calls, 2 reads, 0 writes]
02.09 18:22:28 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
02.09 18:22:28 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 18:22:28 TIME: core/cache.update : 0.38 ms
02.09 18:22:28 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
02.09 18:22:28 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
02.09 18:22:28 TIME: core/user.logoutPost : 0.11 ms
02.09 18:22:28 BLOCKREMOVE: battle 34 removed
02.09 18:22:28 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472829608,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 2
02.09 18:22:28 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
02.09 18:22:38 BLOCKREMOVE: user 2 removed
02.09 18:22:38 BLOCKREMOVE: questdata 2 removed
02.09 18:23:19 TIMER: Clans cache...
02.09 18:23:19 TIMER: Clans cache: 0ms
02.09 18:23:19 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true, _type => core/server.query }
02.09 18:23:19 DB: SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true
02.09 18:23:19 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
02.09 18:23:19 TIME: core/server.query : 1.9 ms
02.09 18:23:19 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 0, _type => vdl/cache.battle.deleteRoom }
02.09 18:23:19 ROOM: deleted room 0
02.09 18:23:19 STATS: cache [battle], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
02.09 18:23:19 STATS: cache [battle], segments [6 calls, 3 hits, 2 misses]
02.09 18:23:19 STATS: cache [battle], database [300 calls, 1 reads, 2 writes]
02.09 18:23:19 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
02.09 18:23:19 DB: DELETE FROM Battle WHERE ID = 0
02.09 18:23:19 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => true, _type => vdl/cache.battle.deleteRoom }
02.09 18:23:19 TIME: vdl/cache.battle.deleteRoom : 1.62 ms
02.09 18:23:19 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
02.09 18:23:19 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
02.09 18:23:19 STATS: cache [user], segments [9 calls, 4 hits, 4 misses]
02.09 18:23:19 STATS: cache [user], database [300 calls, 2 reads, 3 writes]
02.09 18:23:19 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
02.09 18:23:19 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.78 ms]
02.09 18:23:19 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.2 ms]
02.09 18:23:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
02.09 18:23:19 TIME: core/cache.update : 0.51 ms
02.09 18:23:19 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
02.09 18:23:19 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
02.09 18:23:19 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
02.09 18:23:19 STATS: cache [questdata], database [300 calls, 2 reads, 1 writes]
02.09 18:23:19 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
02.09 18:23:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 18:23:19 TIME: core/cache.update : 0.42 ms
02.09 18:23:19 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
02.09 18:23:19 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
02.09 18:23:19 TIME: core/user.logoutPost : 0.1 ms
02.09 18:23:19 TIMER: Clans cache...
02.09 18:23:19 TIMER: Clans cache: 0ms
02.09 18:23:19 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472825979,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 3
02.09 18:23:19 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
02.09 18:24:29 BLOCKREMOVE: user 3 removed
02.09 18:24:29 BLOCKREMOVE: questdata 3 removed
02.09 18:25:19 TIMER: Clans cache...
02.09 18:25:19 TIMER: Clans cache: 0ms
02.09 18:25:19 TIMER: Clans cache...
02.09 18:25:19 TIMER: Clans cache: 0ms
02.09 18:25:19 TIMER: Clans cache...
02.09 18:25:19 TIMER: Clans cache: 0ms
02.09 18:25:19 TIMER: Clans cache...
02.09 18:25:19 TIMER: Clans cache: 0ms
02.09 18:25:19 TIMER: Clans cache...
02.09 18:25:19 TIMER: Clans cache: 0ms
02.09 18:25:19 TIMER: Clans cache...
02.09 18:25:19 TIMER: Clans cache: 0ms
02.09 18:25:19 TIMER: Clans cache...
02.09 18:25:19 TIMER: Clans cache: 0ms
02.09 18:25:19 TIMER: Clans cache...
02.09 18:25:19 TIMER: Clans cache: 0ms
02.09 18:25:19 TIMER: Clans cache...
02.09 18:25:19 TIMER: Clans cache: 0ms
02.09 18:25:19 TIMER: Clans cache...
02.09 18:25:19 TIMER: Clans cache: 0ms
02.09 18:25:19 TIMER: Clans cache...
02.09 18:25:19 TIMER: Clans cache: 0ms
02.09 18:25:19 TIMER: Clans cache...
02.09 18:25:19 TIMER: Clans cache: 0ms
02.09 18:36:39 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
02.09 18:36:39 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
02.09 18:36:39 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
02.09 18:36:39 TIME: core/server.query : 1.65 ms
02.09 18:36:39 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
02.09 18:36:39 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
02.09 18:36:39 TIME: core/user.isOnlineID : 0.11 ms
02.09 18:36:39 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
02.09 18:36:39 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
02.09 18:36:39 STATS: cache [user], segments [11 calls, 6 hits, 4 misses]
02.09 18:36:39 STATS: cache [user], database [1040 calls, 2 reads, 4 writes]
02.09 18:36:39 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
02.09 18:36:39 READDB: SELECT * FROM Users WHERE ID = 2
02.09 18:36:39 STATS: cache manager [1], get [5 calls, total 0.01 sec spent, avg 1.86 ms]
02.09 18:36:39 STATS: cache manager [1], update [6 calls, total 0 sec spent, avg 0.21 ms]
02.09 18:36:39 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472829608, lastLoginDate => 246, lastLoadDate => 903 }, effects => { list => [] } }}, version => 0, id => 2 } }
02.09 18:36:39 TIME: core/cache.get : 2.76 ms
02.09 18:36:39 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
02.09 18:36:39 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
02.09 18:36:39 STATS: cache [questdata], segments [9 calls, 4 hits, 4 misses]
02.09 18:36:39 STATS: cache [questdata], database [1040 calls, 2 reads, 2 writes]
02.09 18:36:39 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
02.09 18:36:39 READDB: SELECT * FROM UserQuests WHERE ID = 2
02.09 18:36:39 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
02.09 18:36:39 TIME: core/cache.get : 1.52 ms
02.09 18:36:39 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
02.09 18:36:39 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.09 18:36:39 TIME: core/user.loginPost : 0.12 ms
02.09 18:36:40 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
02.09 18:36:40 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
02.09 18:36:40 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
02.09 18:36:40 TIME: vdl/cache.battle.find : 1.4 ms
02.09 18:36:40 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
02.09 18:36:40 DB: SELECT nextval('Battle_id_seq') AS id
02.09 18:36:40 READDB: SELECT ID FROM Battle WHERE ID = 35
02.09 18:36:40 READDB: INSERT INTO Battle (ID) VALUES (35)
02.09 18:36:40 STATS: cache [battle], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
02.09 18:36:40 STATS: cache [battle], segments [7 calls, 3 hits, 3 misses]
02.09 18:36:40 STATS: cache [battle], database [1042 calls, 1 reads, 2 writes]
02.09 18:36:40 STATS: cache [battle], lock [2 calls, 2 attempts, 0 failures]
02.09 18:36:40 READDB: SELECT * FROM Battle WHERE ID = 35
02.09 18:36:40 STATS: cache manager [0], get [2 calls, total 0 sec spent, avg 0.98 ms]
02.09 18:36:40 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
02.09 18:36:40 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { room => 35, errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
02.09 18:36:40 TIME: vdl/cache.battle.create : 37.16 ms
02.09 18:36:44 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
02.09 18:36:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 18:36:44 TIME: core/cache.update : 0.17 ms
02.09 18:36:44 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472829608,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 2
02.09 18:36:46 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'true' WHERE ID = 35
02.09 18:36:55 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
02.09 18:36:55 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
02.09 18:36:55 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2, networkid => , isbanned => false, id => 3 }}, errorCode => ok, _type => core/server.query }
02.09 18:36:55 TIME: core/server.query : 1.58 ms
02.09 18:36:55 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
02.09 18:36:55 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
02.09 18:36:55 TIME: core/user.isOnlineID : 0.11 ms
02.09 18:36:55 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
02.09 18:36:55 READDB: SELECT * FROM Users WHERE ID = 3
02.09 18:36:55 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test2, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:48:03.859813+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472825979, lastLoginDate => 246, lastLoadDate => 903 }, effects => { list => [] } }}, version => 0, id => 3 } }
02.09 18:36:55 TIME: core/cache.get : 1.59 ms
02.09 18:36:55 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
02.09 18:36:55 READDB: SELECT * FROM UserQuests WHERE ID = 3
02.09 18:36:55 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 3 } }
02.09 18:36:55 TIME: core/cache.get : 1.07 ms
02.09 18:36:55 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
02.09 18:36:55 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.09 18:36:55 TIME: core/user.loginPost : 0.13 ms
02.09 18:36:55 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
02.09 18:36:55 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
02.09 18:36:55 DB: SELECT id, firstid FROM battle WHERE avaliable = true AND finished <> true
02.09 18:36:55 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => [{ id => 35, first => 2 }], count => 1, errorCode => ok, _type => vdl/cache.battle.find }
02.09 18:36:55 TIME: vdl/cache.battle.find : 1.29 ms
02.09 18:36:55 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => 35, selfId => 3, _type => vdl/cache.battle.join }
02.09 18:36:55 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { room => 35, errorCode => true, _type => vdl/cache.battle.join, player => 2 }
02.09 18:36:55 TIME: vdl/cache.battle.join : 0.07 ms
02.09 18:36:55 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=3, _type => core/server.query }
02.09 18:36:55 DB: SELECT name FROM users WHERE id=3
02.09 18:36:55 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2 }}, errorCode => ok, _type => core/server.query }
02.09 18:36:55 TIME: core/server.query : 0.66 ms
02.09 18:36:55 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=2, _type => core/server.query }
02.09 18:36:55 DB: SELECT name FROM users WHERE id=2
02.09 18:36:55 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1 }}, errorCode => ok, _type => core/server.query }
02.09 18:36:55 TIME: core/server.query : 0.99 ms
02.09 18:36:55 WRITEDB: UPDATE Battle SET secondid = E'3', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'false' WHERE ID = 35
02.09 18:37:04 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
02.09 18:37:04 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 18:37:04 TIME: core/cache.update : 0.17 ms
02.09 18:37:04 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472825979,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 3
02.09 18:37:19 TIMER: Clans cache...
02.09 18:37:19 TIMER: Clans cache: 0ms
02.09 18:37:29 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 35, _type => vdl/cache.battle.infoRoom }
02.09 18:37:29 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 3, firstId => 2, _type => vdl/cache.battle.infoRoom, turnId => 2 }
02.09 18:37:29 TIME: vdl/cache.battle.infoRoom : 0.07 ms
02.09 18:38:19 TIMER: Clans cache...
02.09 18:38:19 TIMER: Clans cache: 0ms
02.09 18:38:19 TIMER: Clans cache...
02.09 18:38:19 TIMER: Clans cache: 0ms
02.09 18:38:19 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true, _type => core/server.query }
02.09 18:38:19 DB: SELECT id FROM battle WHERE firstid=3 OR secondid=3 AND finished <> true
02.09 18:38:19 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 35 }}, errorCode => ok, _type => core/server.query }
02.09 18:38:19 TIME: core/server.query : 1.09 ms
02.09 18:38:19 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 35, _type => vdl/cache.battle.deleteRoom }
02.09 18:38:19 ROOM: deleted room 35
02.09 18:38:19 STATS: cache [battle], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
02.09 18:38:19 STATS: cache [battle], segments [12 calls, 6 hits, 5 misses]
02.09 18:38:19 STATS: cache [battle], database [1260 calls, 2 reads, 4 writes]
02.09 18:38:19 STATS: cache [battle], lock [2 calls, 2 attempts, 0 failures]
02.09 18:38:19 DB: DELETE FROM Battle WHERE ID = 35
02.09 18:38:19 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => true, _type => vdl/cache.battle.deleteRoom }
02.09 18:38:19 TIME: vdl/cache.battle.deleteRoom : 24.96 ms
02.09 18:38:19 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
02.09 18:38:19 STATS: cache [user], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
02.09 18:38:19 STATS: cache [user], segments [17 calls, 8 hits, 8 misses]
02.09 18:38:19 STATS: cache [user], database [1260 calls, 4 reads, 6 writes]
02.09 18:38:19 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
02.09 18:38:19 STATS: cache manager [1], get [8 calls, total 0.01 sec spent, avg 1.6 ms]
02.09 18:38:19 STATS: cache manager [1], update [9 calls, total 0 sec spent, avg 0.17 ms]
02.09 18:38:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
02.09 18:38:19 TIME: core/cache.update : 0.26 ms
02.09 18:38:19 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
02.09 18:38:19 STATS: cache [questdata], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
02.09 18:38:19 STATS: cache [questdata], segments [13 calls, 4 hits, 8 misses]
02.09 18:38:19 STATS: cache [questdata], database [1260 calls, 4 reads, 2 writes]
02.09 18:38:19 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
02.09 18:38:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 18:38:19 TIME: core/cache.update : 0.17 ms
02.09 18:38:19 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
02.09 18:38:19 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
02.09 18:38:19 TIME: core/user.logoutPost : 0.06 ms
02.09 18:38:19 TIMER: Clans cache...
02.09 18:38:19 TIMER: Clans cache: 0ms
02.09 18:38:19 BLOCKREMOVE: battle 35 removed
02.09 18:38:19 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472825979,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 3
02.09 18:38:19 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
02.09 18:40:29 BLOCKREMOVE: user 3 removed
02.09 18:40:29 BLOCKREMOVE: questdata 3 removed
02.09 18:41:19 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true, _type => core/server.query }
02.09 18:41:19 DB: SELECT id FROM battle WHERE firstid=2 OR secondid=2 AND finished <> true
02.09 18:41:19 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
02.09 18:41:19 TIME: core/server.query : 1.06 ms
02.09 18:41:19 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 0, _type => vdl/cache.battle.deleteRoom }
02.09 18:41:19 ROOM: deleted room 0
02.09 18:41:19 STATS: cache [battle], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
02.09 18:41:19 STATS: cache [battle], segments [13 calls, 7 hits, 5 misses]
02.09 18:41:19 STATS: cache [battle], database [1320 calls, 2 reads, 4 writes]
02.09 18:41:19 STATS: cache [battle], lock [2 calls, 2 attempts, 0 failures]
02.09 18:41:19 DB: DELETE FROM Battle WHERE ID = 0
02.09 18:41:19 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => true, _type => vdl/cache.battle.deleteRoom }
02.09 18:41:19 TIME: vdl/cache.battle.deleteRoom : 1.16 ms
02.09 18:41:19 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
02.09 18:41:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
02.09 18:41:19 TIME: core/cache.update : 0.25 ms
02.09 18:41:19 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
02.09 18:41:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 18:41:19 TIME: core/cache.update : 0.2 ms
02.09 18:41:19 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
02.09 18:41:19 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
02.09 18:41:19 TIME: core/user.logoutPost : 0.12 ms
02.09 18:41:19 TIMER: Clans cache...
02.09 18:41:19 TIMER: Clans cache: 0ms
02.09 18:41:19 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472829608,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 2
02.09 18:41:19 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
02.09 18:41:29 BLOCKREMOVE: user 2 removed
02.09 18:41:29 BLOCKREMOVE: questdata 2 removed
02.09 18:47:57 TIMER: Starting timer...
02.09 18:47:57 TIMER: Timer running...
02.09 18:47:57 DB: SELECT * FROM GameVars
02.09 18:47:57 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 18:47:57 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 18:47:57 DB: SELECT * FROM Shops WHERE ID = 1
02.09 18:47:57 TEMP: load ./tmp/quest_daily_ids
02.09 18:47:57 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
02.09 18:47:57 TEMP: save ./tmp/quest_daily_ids
02.09 18:47:57 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
02.09 18:47:57 QUEUE: vdl.0 (thread) response server.login
02.09 18:47:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
02.09 18:47:57 DB: SELECT * FROM LocalizationStrings
02.09 18:47:57 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:47:57 TIME: core/server.query : 14.53 ms
02.09 18:47:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
02.09 18:47:57 DB: SELECT * FROM GameVars
02.09 18:47:57 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:47:57 TIME: core/server.query : 1.47 ms
02.09 18:47:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
02.09 18:47:57 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
02.09 18:47:57 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:47:57 TIME: core/server.query : 1.45 ms
02.09 18:47:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
02.09 18:47:57 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
02.09 18:47:57 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:47:57 TIME: core/server.query : 0.75 ms
02.09 18:47:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
02.09 18:47:57 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
02.09 18:47:57 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:47:57 TIME: core/server.query : 1.02 ms
02.09 18:47:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
02.09 18:47:57 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
02.09 18:47:57 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:47:57 TIME: core/server.query : 1.42 ms
02.09 18:47:57 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
02.09 18:47:57 QUEUE: vdl.0 (thread) response core/quest.getDaily
02.09 18:47:57 TIME: core/quest.getDaily : 0.05 ms
02.09 18:47:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
02.09 18:47:57 DB: SELECT * FROM UserAttributeTypes
02.09 18:47:57 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:47:57 TIME: core/server.query : 0.81 ms
02.09 18:47:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
02.09 18:47:57 DB: SELECT * FROM UserVariableTypes
02.09 18:47:57 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:47:57 TIME: core/server.query : 0.63 ms
02.09 18:47:57 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
02.09 18:47:57 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
02.09 18:47:57 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:47:57 TIME: core/server.query : 1.8 ms
02.09 18:47:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
02.09 18:47:57 DB: SELECT * FROM ItemGroups
02.09 18:47:57 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:47:57 TIME: core/server.query : 0.56 ms
02.09 18:47:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
02.09 18:47:57 DB: SELECT * FROM Bundles ORDER BY ID
02.09 18:47:57 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:47:57 TIME: core/server.query : 0.63 ms
02.09 18:47:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
02.09 18:47:57 DB: SELECT * FROM BundleItems ORDER BY ID
02.09 18:47:57 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:47:57 TIME: core/server.query : 0.64 ms
02.09 18:47:57 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
02.09 18:47:57 QUEUE: vdl.0 (thread) response core/shop.getList
02.09 18:47:57 TIME: core/shop.getList : 0.04 ms
02.09 18:47:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
02.09 18:47:57 DB: SELECT * FROM EffectAttributeTypes
02.09 18:47:57 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:47:57 TIME: core/server.query : 0.51 ms
02.09 18:47:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
02.09 18:47:57 DB: SELECT * FROM Effects
02.09 18:47:57 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:47:57 TIME: core/server.query : 0.46 ms
02.09 18:47:57 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
02.09 18:47:57 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
02.09 18:47:57 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:47:57 TIME: core/server.query : 1.01 ms
02.09 18:47:57 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
02.09 18:47:57 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
02.09 18:47:57 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:47:57 TIME: core/server.query : 0.82 ms
02.09 18:47:57 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
02.09 18:47:57 DB: SELECT * FROM Badges
02.09 18:47:57 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:47:57 TIME: core/server.query : 0.47 ms
02.09 18:47:57 TIMER: Clans cache...
02.09 18:47:57 TIMER: Clans cache: 0ms
02.09 18:47:57 TIMER: Clans cache...
02.09 18:47:57 TIMER: Clans cache: 0ms
02.09 18:47:57 TIMER: Clans cache...
02.09 18:47:57 TIMER: Clans cache: 0ms
02.09 18:47:57 TIMER: Clans cache...
02.09 18:47:57 TIMER: Clans cache: 0ms
02.09 18:47:57 TIMER: Clans cache...
02.09 18:47:57 TIMER: Clans cache: 0ms
02.09 18:47:57 TIMER: Clans cache...
02.09 18:47:57 TIMER: Clans cache: 0ms
02.09 18:47:57 TIMER: Clans cache...
02.09 18:47:57 TIMER: Clans cache: 0ms
02.09 18:47:57 TIMER: Clans cache...
02.09 18:47:57 TIMER: Clans cache: 0ms
02.09 18:47:57 TIMER: Clans cache...
02.09 18:47:57 TIMER: Clans cache: 0ms
02.09 18:47:57 TIMER: Clans cache...
02.09 18:47:57 TIMER: Clans cache: 0ms
02.09 18:58:17 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
02.09 18:58:17 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
02.09 18:58:17 QUEUE: vdl.0 (thread) response core/server.query
02.09 18:58:17 TIME: core/server.query : 2.42 ms
02.09 18:58:17 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
02.09 18:58:17 QUEUE: vdl.0 (thread) response core/user.isOnlineID
02.09 18:58:17 TIME: core/user.isOnlineID : 0.09 ms
02.09 18:58:17 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
02.09 18:58:17 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.09 18:58:17 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
02.09 18:58:17 STATS: cache [user], database [620 calls, 0 reads, 0 writes]
02.09 18:58:17 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
02.09 18:58:17 READDB: SELECT * FROM Users WHERE ID = 3
02.09 18:58:17 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.09 ms]
02.09 18:58:17 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
02.09 18:58:17 QUEUE: vdl.0 (thread) response core/cache.get
02.09 18:58:17 TIME: core/cache.get : 4.35 ms
02.09 18:58:17 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
02.09 18:58:17 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.09 18:58:17 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
02.09 18:58:17 STATS: cache [questdata], database [620 calls, 0 reads, 0 writes]
02.09 18:58:17 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
02.09 18:58:17 READDB: SELECT * FROM UserQuests WHERE ID = 3
02.09 18:58:17 QUEUE: vdl.0 (thread) response core/cache.get
02.09 18:58:17 TIME: core/cache.get : 1.74 ms
02.09 18:58:17 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
02.09 18:58:17 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.09 18:58:17 TIME: core/user.loginPost : 0.32 ms
02.09 18:58:17 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
02.09 18:58:17 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
02.09 18:58:17 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
02.09 18:58:17 TIME: vdl/cache.battle.find : 2.34 ms
02.09 18:58:17 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 3, _type => vdl/cache.battle.create }
02.09 18:58:17 DB: SELECT nextval('Battle_id_seq') AS id
02.09 18:58:17 READDB: SELECT ID FROM Battle WHERE ID = 36
02.09 18:58:17 READDB: INSERT INTO Battle (ID) VALUES (36)
02.09 18:58:17 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
02.09 18:58:17 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
02.09 18:58:17 STATS: cache [battle], database [620 calls, 0 reads, 0 writes]
02.09 18:58:17 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
02.09 18:58:17 READDB: SELECT * FROM Battle WHERE ID = 36
02.09 18:58:17 STATS: cache manager [0], get [1 calls, total 0.01 sec spent, avg 5.22 ms]
02.09 18:58:17 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
02.09 18:58:17 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { room => 36, errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
02.09 18:58:17 TIME: vdl/cache.battle.create : 41.87 ms
02.09 18:58:22 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'true' WHERE ID = 36
02.09 18:58:22 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
02.09 18:58:22 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 18:58:22 TIME: core/cache.update : 0.17 ms
02.09 18:58:23 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472825979,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 3
02.09 18:58:43 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
02.09 18:58:43 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
02.09 18:58:43 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
02.09 18:58:43 TIME: core/server.query : 2.87 ms
02.09 18:58:43 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
02.09 18:58:43 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
02.09 18:58:43 TIME: core/user.isOnlineID : 0.09 ms
02.09 18:58:43 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
02.09 18:58:43 READDB: SELECT * FROM Users WHERE ID = 2
02.09 18:58:43 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472829608, lastLoginDate => 246, lastLoadDate => 903 }, effects => { list => [] } }}, version => 0, id => 2 } }
02.09 18:58:43 TIME: core/cache.get : 1.7 ms
02.09 18:58:43 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
02.09 18:58:43 READDB: SELECT * FROM UserQuests WHERE ID = 2
02.09 18:58:43 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
02.09 18:58:43 TIME: core/cache.get : 0.98 ms
02.09 18:58:43 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
02.09 18:58:43 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
02.09 18:58:43 TIME: core/user.loginPost : 0.1 ms
02.09 18:58:44 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
02.09 18:58:44 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
02.09 18:58:44 DB: SELECT id, firstid FROM battle WHERE avaliable = true AND finished <> true
02.09 18:58:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => [{ id => 36, first => 3 }], count => 1, errorCode => ok, _type => vdl/cache.battle.find }
02.09 18:58:44 TIME: vdl/cache.battle.find : 2.8 ms
02.09 18:58:44 NET: vdl.0 (thread) request vdl/cache.battle.join { roomId => 36, selfId => 2, _type => vdl/cache.battle.join }
02.09 18:58:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.join { room => 36, errorCode => true, _type => vdl/cache.battle.join, player => 2 }
02.09 18:58:44 TIME: vdl/cache.battle.join : 0.14 ms
02.09 18:58:44 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=2, _type => core/server.query }
02.09 18:58:44 DB: SELECT name FROM users WHERE id=2
02.09 18:58:44 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1 }}, errorCode => ok, _type => core/server.query }
02.09 18:58:44 TIME: core/server.query : 2.23 ms
02.09 18:58:44 NET: vdl.0 (thread) request core/server.query { q => SELECT name FROM users WHERE id=3, _type => core/server.query }
02.09 18:58:44 DB: SELECT name FROM users WHERE id=3
02.09 18:58:44 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2 }}, errorCode => ok, _type => core/server.query }
02.09 18:58:44 TIME: core/server.query : 0.89 ms
02.09 18:58:44 WRITEDB: UPDATE Battle SET secondid = E'2', turnid = E'3', finished = E'false', firstid = E'3', params = E'{}', avaliable = E'false' WHERE ID = 36
02.09 18:58:50 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 36, _type => vdl/cache.battle.infoRoom }
02.09 18:58:50 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 2, firstId => 3, _type => vdl/cache.battle.infoRoom, turnId => 3 }
02.09 18:58:50 TIME: vdl/cache.battle.infoRoom : 0.18 ms
02.09 18:58:52 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
02.09 18:58:52 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
02.09 18:58:52 TIME: core/cache.update : 0.17 ms
02.09 18:58:53 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472829608,"lastLoginDate":246,"lastLoadDate":903},"effects":{"list":[]}}' WHERE ID = 2
