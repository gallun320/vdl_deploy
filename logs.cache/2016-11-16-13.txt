16.11 13:47:36 TIMER: Starting timer...
16.11 13:47:36 TIMER: Timer running...
16.11 13:47:36 DB: SELECT * FROM GameVars
16.11 13:47:36 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
16.11 13:47:36 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
16.11 13:47:36 DB: SELECT * FROM Shops WHERE ID = 1
16.11 13:47:36 TEMP: load ./tmp/quest_daily_ids
16.11 13:47:36 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
16.11 13:47:36 TEMP: save ./tmp/quest_daily_ids
16.11 13:47:36 NET: ??? request core/server.login { host => 172.16.30.23, name => vdl.0, port => 2030, type => game, _type => core/server.login, externalHost => 172.16.30.23, externalPort => 2030 }
16.11 13:47:36 QUEUE: vdl.0 (thread) response server.login
16.11 13:47:36 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
16.11 13:47:36 DB: SELECT * FROM LocalizationStrings
16.11 13:47:36 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:47:36 TIME: core/server.query : 98.29 ms
16.11 13:47:36 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
16.11 13:47:36 DB: SELECT * FROM GameVars
16.11 13:47:36 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:47:36 TIME: core/server.query : 1.44 ms
16.11 13:47:36 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
16.11 13:47:36 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
16.11 13:47:36 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:47:36 TIME: core/server.query : 1.75 ms
16.11 13:47:36 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
16.11 13:47:36 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
16.11 13:47:36 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:47:36 TIME: core/server.query : 1.32 ms
16.11 13:47:36 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
16.11 13:47:36 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
16.11 13:47:36 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:47:36 TIME: core/server.query : 1.06 ms
16.11 13:47:36 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
16.11 13:47:36 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
16.11 13:47:36 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:47:36 TIME: core/server.query : 3 ms
16.11 13:47:36 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
16.11 13:47:36 QUEUE: vdl.0 (thread) response core/quest.getDaily
16.11 13:47:36 TIME: core/quest.getDaily : 0.05 ms
16.11 13:47:36 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
16.11 13:47:36 DB: SELECT * FROM UserAttributeTypes
16.11 13:47:36 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:47:36 TIME: core/server.query : 37.74 ms
16.11 13:47:36 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
16.11 13:47:36 DB: SELECT * FROM UserVariableTypes
16.11 13:47:36 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:47:36 TIME: core/server.query : 1.59 ms
16.11 13:47:36 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
16.11 13:47:36 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
16.11 13:47:36 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:47:36 TIME: core/server.query : 10.02 ms
16.11 13:47:36 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
16.11 13:47:36 DB: SELECT * FROM ItemGroups
16.11 13:47:36 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:47:36 TIME: core/server.query : 0.82 ms
16.11 13:47:36 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
16.11 13:47:36 DB: SELECT * FROM Bundles ORDER BY ID
16.11 13:47:36 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:47:36 TIME: core/server.query : 33.09 ms
16.11 13:47:36 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
16.11 13:47:36 DB: SELECT * FROM BundleItems ORDER BY ID
16.11 13:47:36 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:47:36 TIME: core/server.query : 23.54 ms
16.11 13:47:36 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
16.11 13:47:36 QUEUE: vdl.0 (thread) response core/shop.getList
16.11 13:47:36 TIME: core/shop.getList : 0.52 ms
16.11 13:47:36 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
16.11 13:47:36 DB: SELECT * FROM EffectAttributeTypes
16.11 13:47:36 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:47:36 TIME: core/server.query : 1.44 ms
16.11 13:47:36 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
16.11 13:47:36 DB: SELECT * FROM Effects
16.11 13:47:36 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:47:36 TIME: core/server.query : 1.21 ms
16.11 13:47:36 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
16.11 13:47:36 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
16.11 13:47:36 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:47:36 TIME: core/server.query : 2.15 ms
16.11 13:47:36 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
16.11 13:47:36 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
16.11 13:47:36 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:47:36 TIME: core/server.query : 1.58 ms
16.11 13:47:36 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
16.11 13:47:36 DB: SELECT * FROM Badges
16.11 13:47:36 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:47:36 TIME: core/server.query : 9.43 ms
16.11 13:48:43 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid12' AND Password = E'uid12', _type => core/server.query }
16.11 13:48:43 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid12' AND Password = E'uid12'
16.11 13:48:43 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:48:43 TIME: core/server.query : 217.65 ms
16.11 13:48:43 NET: vdl.0 (thread) request core/user.isOnlineID { id => 12, _type => core/user.isOnlineID }
16.11 13:48:43 QUEUE: vdl.0 (thread) response core/user.isOnlineID
16.11 13:48:43 TIME: core/user.isOnlineID : 0.05 ms
16.11 13:48:43 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 12, _type => core/cache.get }
16.11 13:48:43 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
16.11 13:48:43 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
16.11 13:48:43 STATS: cache [user], database [67 calls, 0 reads, 0 writes]
16.11 13:48:43 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
16.11 13:48:43 READDB: SELECT * FROM Users WHERE ID = 12
16.11 13:48:43 STATS: cache manager [1], get [1 calls, total 0.07 sec spent, avg 71.38 ms]
16.11 13:48:43 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
16.11 13:48:43 QUEUE: vdl.0 (thread) response core/cache.get
16.11 13:48:43 TIME: core/cache.get : 71.51 ms
16.11 13:48:43 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 12, _type => core/cache.get }
16.11 13:48:43 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
16.11 13:48:43 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
16.11 13:48:43 STATS: cache [questdata], database [67 calls, 0 reads, 0 writes]
16.11 13:48:43 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
16.11 13:48:43 READDB: SELECT * FROM UserQuests WHERE ID = 12
16.11 13:48:43 QUEUE: vdl.0 (thread) response core/cache.get
16.11 13:48:43 TIME: core/cache.get : 98.21 ms
16.11 13:48:43 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 12, _type => core/user.loginPost, ipAddr => 172.16.30.15 }
16.11 13:48:43 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
16.11 13:48:43 TIME: core/user.loginPost : 0.07 ms
16.11 13:48:43 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 12 AND Date = 'today'::timestamp, _type => core/server.query }
16.11 13:48:43 DB: SELECT ID FROM TempUserLogins WHERE UserID = 12 AND Date = 'today'::timestamp
16.11 13:48:43 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
16.11 13:48:43 TIME: core/server.query : 120.71 ms
16.11 13:48:43 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (12, 'today'::timestamp)
16.11 13:48:52 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { lastLoginDate => 321, lastLoadDate => 1117 } }}, type => user, unlock => false, id => 12, _type => core/cache.update }
16.11 13:48:52 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
16.11 13:48:52 TIME: core/cache.update : 0.28 ms
16.11 13:48:52 WRITEDB: UPDATE Users SET name = E'uid12', deleted = E'false', email = E'', networktype = E'  ', password = E'uid12', isbanned = E'false', regdate = E'2016-10-12 12:47:26.670465+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1479221495,"lastLoginDate":321,"lastLoadDate":1117},"effects":{"list":[]}}' WHERE ID = 12
16.11 13:50:32 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=12 OR secondid=12 AND finished <> true, _type => core/server.query }
16.11 13:50:32 DB: SELECT id FROM battle WHERE firstid=12 OR secondid=12 AND finished <> true
16.11 13:50:32 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
16.11 13:50:32 TIME: core/server.query : 70.97 ms
16.11 13:50:32 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
16.11 13:50:32 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
16.11 13:50:32 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
16.11 13:50:32 STATS: cache [battle], database [177 calls, 0 reads, 0 writes]
16.11 13:50:32 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
16.11 13:50:32 READDB: SELECT * FROM Battle WHERE ID = 0
16.11 13:50:32 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
16.11 13:50:32 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 212
Called from modules/VDLCache.hx line 205
Called from modules/VDLCache.hx line 144
Called from snipe/cache/CacheServer.hx line 487
16.11 13:50:32 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
16.11 13:50:32 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 12, _type => core/cache.update }
16.11 13:50:32 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
16.11 13:50:32 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
16.11 13:50:32 STATS: cache [user], database [177 calls, 1 reads, 1 writes]
16.11 13:50:32 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
16.11 13:50:32 STATS: cache manager [1], get [2 calls, total 0.17 sec spent, avg 84.75 ms]
16.11 13:50:32 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.19 ms]
16.11 13:50:32 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
16.11 13:50:32 TIME: core/cache.update : 0.43 ms
16.11 13:50:32 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 12, _type => core/cache.update }
16.11 13:50:32 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
16.11 13:50:32 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
16.11 13:50:32 STATS: cache [questdata], database [177 calls, 1 reads, 0 writes]
16.11 13:50:32 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
16.11 13:50:32 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
16.11 13:50:32 TIME: core/cache.update : 0.3 ms
16.11 13:50:32 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 12, _type => core/user.logoutPost }
16.11 13:50:32 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
16.11 13:50:32 TIME: core/user.logoutPost : 0.1 ms
16.11 13:50:33 WRITEDB: UPDATE Users SET name = E'uid12', deleted = E'false', email = E'', networktype = E'  ', password = E'uid12', isbanned = E'false', regdate = E'2016-10-12 12:47:26.670465+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1479221495,"lastLoginDate":321,"lastLoadDate":1117},"effects":{"list":[]}}' WHERE ID = 12
16.11 13:50:33 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 12
16.11 13:50:43 BLOCKREMOVE: user 12 removed
16.11 13:50:43 BLOCKREMOVE: questdata 12 removed
16.11 13:51:04 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid12' AND Password = E'uid12', _type => core/server.query }
16.11 13:51:04 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid12' AND Password = E'uid12'
16.11 13:51:04 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid12, networkid => , isbanned => false, id => 12 }}, errorCode => ok, _type => core/server.query }
16.11 13:51:04 TIME: core/server.query : 1.58 ms
16.11 13:51:04 NET: vdl.0 (thread) request core/user.isOnlineID { id => 12, _type => core/user.isOnlineID }
16.11 13:51:04 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
16.11 13:51:04 TIME: core/user.isOnlineID : 0.05 ms
16.11 13:51:04 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 12, _type => core/cache.get }
16.11 13:51:04 READDB: SELECT * FROM Users WHERE ID = 12
16.11 13:51:04 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid12, deleted => false, email => , networktype =>   , password => uid12, isbanned => false, regdate => 2016-10-12 12:47:26.670465+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479221495, lastLoginDate => 321, lastLoadDate => 1117 }, effects => { list => [] } }}, version => 0, id => 12 } }
16.11 13:51:04 TIME: core/cache.get : 0.86 ms
16.11 13:51:04 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 12, _type => core/cache.get }
16.11 13:51:04 READDB: SELECT * FROM UserQuests WHERE ID = 12
16.11 13:51:04 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 12 } }
16.11 13:51:04 TIME: core/cache.get : 0.54 ms
16.11 13:51:04 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 12, _type => core/user.loginPost, ipAddr => 172.16.30.15 }
16.11 13:51:04 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
16.11 13:51:04 TIME: core/user.loginPost : 0.05 ms
16.11 13:51:12 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 12, _type => core/cache.update }
16.11 13:51:12 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
16.11 13:51:12 TIME: core/cache.update : 0.25 ms
16.11 13:51:12 WRITEDB: UPDATE Users SET name = E'uid12', deleted = E'false', email = E'', networktype = E'  ', password = E'uid12', isbanned = E'false', regdate = E'2016-10-12 12:47:26.670465+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1479221495,"lastLoginDate":321,"lastLoadDate":1117},"effects":{"list":[]}}' WHERE ID = 12
16.11 13:51:24 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 12 }, _type => vdl/cache.battle.findRandom }
16.11 13:51:24 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
16.11 13:51:24 TIME: vdl/cache.battle.findRandom : 0.12 ms
16.11 13:51:35 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
16.11 13:51:35 STATS: cache [battle], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 1 not found]
16.11 13:51:35 STATS: cache [battle], segments [2 calls, 0 hits, 1 misses]
16.11 13:51:35 STATS: cache [battle], database [239 calls, 1 reads, 0 writes]
16.11 13:51:35 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
16.11 13:51:35 READDB: SELECT * FROM Battle WHERE ID = 0
16.11 13:51:35 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
16.11 13:51:35 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 212
Called from modules/VDLCache.hx line 205
Called from modules/VDLCache.hx line 144
Called from snipe/cache/CacheServer.hx line 487
16.11 13:51:35 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
16.11 13:51:47 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=12 OR secondid=12 AND finished <> true, _type => core/server.query }
16.11 13:51:47 DB: SELECT id FROM battle WHERE firstid=12 OR secondid=12 AND finished <> true
16.11 13:51:47 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
16.11 13:51:47 TIME: core/server.query : 1.86 ms
16.11 13:51:47 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
16.11 13:51:47 READDB: SELECT * FROM Battle WHERE ID = 0
16.11 13:51:47 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
16.11 13:51:47 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 212
Called from modules/VDLCache.hx line 205
Called from modules/VDLCache.hx line 144
Called from snipe/cache/CacheServer.hx line 487
16.11 13:51:47 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
16.11 13:51:47 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 12, _type => core/cache.update }
16.11 13:51:47 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
16.11 13:51:47 STATS: cache [user], segments [9 calls, 4 hits, 4 misses]
16.11 13:51:47 STATS: cache [user], database [251 calls, 2 reads, 3 writes]
16.11 13:51:47 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
16.11 13:51:47 STATS: cache manager [1], get [4 calls, total 0.17 sec spent, avg 42.66 ms]
16.11 13:51:47 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.18 ms]
16.11 13:51:47 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
16.11 13:51:47 TIME: core/cache.update : 0.46 ms
16.11 13:51:47 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 12, _type => core/cache.update }
16.11 13:51:47 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
16.11 13:51:47 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
16.11 13:51:47 STATS: cache [questdata], database [251 calls, 2 reads, 1 writes]
16.11 13:51:47 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
16.11 13:51:47 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
16.11 13:51:47 TIME: core/cache.update : 0.35 ms
16.11 13:51:47 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 12, _type => core/user.logoutPost }
16.11 13:51:47 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
16.11 13:51:47 TIME: core/user.logoutPost : 0.13 ms
16.11 13:51:47 WRITEDB: UPDATE Users SET name = E'uid12', deleted = E'false', email = E'', networktype = E'  ', password = E'uid12', isbanned = E'false', regdate = E'2016-10-12 12:47:26.670465+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1479221495,"lastLoginDate":321,"lastLoadDate":1117},"effects":{"list":[]}}' WHERE ID = 12
16.11 13:51:47 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 12
16.11 13:54:08 TIMER: Starting timer...
16.11 13:54:08 TIMER: Timer running...
16.11 13:54:08 DB: SELECT * FROM GameVars
16.11 13:54:08 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
16.11 13:54:08 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
16.11 13:54:08 DB: SELECT * FROM Shops WHERE ID = 1
16.11 13:54:08 TEMP: load ./tmp/quest_daily_ids
16.11 13:54:08 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
16.11 13:54:08 TEMP: save ./tmp/quest_daily_ids
16.11 13:54:08 NET: ??? request core/server.login { host => 172.16.30.23, name => vdl.0, port => 2030, type => game, _type => core/server.login, externalHost => 172.16.30.23, externalPort => 2030 }
16.11 13:54:08 QUEUE: vdl.0 (thread) response server.login
16.11 13:54:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
16.11 13:54:08 DB: SELECT * FROM LocalizationStrings
16.11 13:54:08 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:54:08 TIME: core/server.query : 7.21 ms
16.11 13:54:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
16.11 13:54:08 DB: SELECT * FROM GameVars
16.11 13:54:08 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:54:08 TIME: core/server.query : 0.74 ms
16.11 13:54:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
16.11 13:54:08 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
16.11 13:54:08 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:54:08 TIME: core/server.query : 0.68 ms
16.11 13:54:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
16.11 13:54:08 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
16.11 13:54:08 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:54:08 TIME: core/server.query : 0.6 ms
16.11 13:54:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
16.11 13:54:08 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
16.11 13:54:08 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:54:08 TIME: core/server.query : 0.71 ms
16.11 13:54:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
16.11 13:54:08 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
16.11 13:54:08 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:54:08 TIME: core/server.query : 1.27 ms
16.11 13:54:08 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
16.11 13:54:08 QUEUE: vdl.0 (thread) response core/quest.getDaily
16.11 13:54:08 TIME: core/quest.getDaily : 0.02 ms
16.11 13:54:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
16.11 13:54:08 DB: SELECT * FROM UserAttributeTypes
16.11 13:54:08 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:54:08 TIME: core/server.query : 0.77 ms
16.11 13:54:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
16.11 13:54:08 DB: SELECT * FROM UserVariableTypes
16.11 13:54:08 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:54:08 TIME: core/server.query : 0.44 ms
16.11 13:54:08 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
16.11 13:54:08 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
16.11 13:54:08 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:54:08 TIME: core/server.query : 1.61 ms
16.11 13:54:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
16.11 13:54:08 DB: SELECT * FROM ItemGroups
16.11 13:54:08 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:54:08 TIME: core/server.query : 1.65 ms
16.11 13:54:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
16.11 13:54:08 DB: SELECT * FROM Bundles ORDER BY ID
16.11 13:54:08 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:54:08 TIME: core/server.query : 3.76 ms
16.11 13:54:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
16.11 13:54:08 DB: SELECT * FROM BundleItems ORDER BY ID
16.11 13:54:08 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:54:08 TIME: core/server.query : 1.1 ms
16.11 13:54:08 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
16.11 13:54:08 QUEUE: vdl.0 (thread) response core/shop.getList
16.11 13:54:08 TIME: core/shop.getList : 0.03 ms
16.11 13:54:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
16.11 13:54:08 DB: SELECT * FROM EffectAttributeTypes
16.11 13:54:08 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:54:08 TIME: core/server.query : 0.56 ms
16.11 13:54:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
16.11 13:54:08 DB: SELECT * FROM Effects
16.11 13:54:08 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:54:08 TIME: core/server.query : 0.46 ms
16.11 13:54:08 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
16.11 13:54:08 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
16.11 13:54:08 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:54:08 TIME: core/server.query : 0.98 ms
16.11 13:54:08 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
16.11 13:54:08 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
16.11 13:54:08 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:54:08 TIME: core/server.query : 1.03 ms
16.11 13:54:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
16.11 13:54:08 DB: SELECT * FROM Badges
16.11 13:54:08 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:54:08 TIME: core/server.query : 0.51 ms
16.11 13:54:13 TIMER: Check step...
16.11 13:54:13 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:54:13 TIMER: Check step: 44ms
16.11 13:54:17 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid12' AND Password = E'uid12', _type => core/server.query }
16.11 13:54:17 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid12' AND Password = E'uid12'
16.11 13:54:17 QUEUE: vdl.0 (thread) response core/server.query
16.11 13:54:17 TIME: core/server.query : 2.92 ms
16.11 13:54:17 NET: vdl.0 (thread) request core/user.isOnlineID { id => 12, _type => core/user.isOnlineID }
16.11 13:54:17 QUEUE: vdl.0 (thread) response core/user.isOnlineID
16.11 13:54:17 TIME: core/user.isOnlineID : 0.1 ms
16.11 13:54:17 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 12, _type => core/cache.get }
16.11 13:54:17 READDB: SELECT * FROM Users WHERE ID = 12
16.11 13:54:17 QUEUE: vdl.0 (thread) response core/cache.get
16.11 13:54:17 TIME: core/cache.get : 3.43 ms
16.11 13:54:17 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 12, _type => core/cache.get }
16.11 13:54:17 READDB: SELECT * FROM UserQuests WHERE ID = 12
16.11 13:54:17 QUEUE: vdl.0 (thread) response core/cache.get
16.11 13:54:17 TIME: core/cache.get : 1.29 ms
16.11 13:54:17 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 12, _type => core/user.loginPost, ipAddr => 172.16.30.15 }
16.11 13:54:17 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
16.11 13:54:17 TIME: core/user.loginPost : 0.16 ms
16.11 13:54:18 TIMER: Check step...
16.11 13:54:18 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:54:18 TIMER: Check step: 3ms
16.11 13:54:23 TIMER: Check step...
16.11 13:54:23 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:54:23 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 12, _type => core/cache.update }
16.11 13:54:23 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
16.11 13:54:23 TIME: core/cache.update : 0.25 ms
16.11 13:54:23 TIMER: Check step: 3ms
16.11 13:54:24 WRITEDB: UPDATE Users SET name = E'uid12', deleted = E'false', email = E'', networktype = E'  ', password = E'uid12', isbanned = E'false', regdate = E'2016-10-12 12:47:26.670465+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1479221495,"lastLoginDate":321,"lastLoadDate":1117},"effects":{"list":[]}}' WHERE ID = 12
16.11 13:54:25 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 12 }, _type => vdl/cache.battle.findRandom }
16.11 13:54:25 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
16.11 13:54:25 TIME: vdl/cache.battle.findRandom : 0.1 ms
16.11 13:54:28 TIMER: Check step...
16.11 13:54:28 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:54:28 TIMER: Check step: 1ms
16.11 13:54:31 NET: vdl.0 (thread) request vdl/cache.battle.closeFind { userId => 12, _type => vdl/cache.battle.closeFind }
16.11 13:54:31 QUEUE: vdl.0 (thread) response vdl/cache.battle.closeFind { errorCode => ok, _type => vdl/cache.battle.closeFind }
16.11 13:54:31 TIME: vdl/cache.battle.closeFind : 0.07 ms
16.11 13:54:33 TIMER: Check step...
16.11 13:54:33 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:54:33 TIMER: Check step: 3ms
16.11 13:54:38 TIMER: Check step...
16.11 13:54:38 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:54:38 TIMER: Check step: 0ms
16.11 13:54:43 TIMER: Check step...
16.11 13:54:43 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:54:43 TIMER: Check step: 0ms
16.11 13:54:48 TIMER: Check step...
16.11 13:54:48 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:54:48 TIMER: Check step: 0ms
16.11 13:54:53 TIMER: Check step...
16.11 13:54:53 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:54:53 TIMER: Check step: 1ms
16.11 13:54:58 TIMER: Check step...
16.11 13:54:58 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:54:58 TIMER: Check step: 1ms
16.11 13:55:03 TIMER: Check step...
16.11 13:55:03 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:55:03 TIMER: Check step: 0ms
16.11 13:55:08 TIMER: Clans cache...
16.11 13:55:08 TIMER: Clans cache: 0ms
16.11 13:55:08 TIMER: Check step...
16.11 13:55:08 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:55:08 TIMER: Check step: 1ms
16.11 13:55:08 TIMER: Check round...
16.11 13:55:08 DB: SELECT * FROM tournament WHERE startdate = '2016-16-11 16:55' OR rounddate = '2016-16-11 16:55' AND status <> 'finished'
16.11 13:55:08 DB: SELECT * FROM battle WHERE endtime >= '1479293.70871835' AND avaliable = true AND finished <> true
16.11 13:55:08 TIMER: Check round: 32ms
16.11 13:55:13 TIMER: Check step...
16.11 13:55:13 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:55:13 TIMER: Check step: 0ms
16.11 13:55:18 TIMER: Check step...
16.11 13:55:18 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:55:18 TIMER: Check step: 0ms
16.11 13:55:23 TIMER: Check step...
16.11 13:55:23 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:55:23 TIMER: Check step: 1ms
16.11 13:55:28 TIMER: Check step...
16.11 13:55:28 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:55:28 TIMER: Check step: 3ms
16.11 13:55:33 TIMER: Check step...
16.11 13:55:33 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:55:33 TIMER: Check step: 0ms
16.11 13:55:38 TIMER: Check step...
16.11 13:55:38 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:55:38 TIMER: Check step: 0ms
16.11 13:55:43 TIMER: Check step...
16.11 13:55:43 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:55:43 TIMER: Check step: 0ms
16.11 13:55:48 TIMER: Check step...
16.11 13:55:48 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:55:48 TIMER: Check step: 1ms
16.11 13:55:53 TIMER: Check step...
16.11 13:55:53 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:55:53 TIMER: Check step: 1ms
16.11 13:55:58 TIMER: Check step...
16.11 13:55:58 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:55:58 TIMER: Check step: 1ms
16.11 13:56:03 TIMER: Check step...
16.11 13:56:03 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:56:03 TIMER: Check step: 0ms
16.11 13:56:08 TIMER: Clans cache...
16.11 13:56:08 TIMER: Clans cache: 0ms
16.11 13:56:08 TIMER: Check step...
16.11 13:56:08 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:56:08 TIMER: Check step: 0ms
16.11 13:56:08 TIMER: Check round...
16.11 13:56:08 DB: SELECT * FROM tournament WHERE startdate = '2016-16-11 16:56' OR rounddate = '2016-16-11 16:56' AND status <> 'finished'
16.11 13:56:08 DB: SELECT * FROM battle WHERE endtime >= '1479293.76876176' AND avaliable = true AND finished <> true
16.11 13:56:08 TIMER: Check round: 3ms
16.11 13:56:13 TIMER: Check step...
16.11 13:56:13 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:56:13 TIMER: Check step: 1ms
16.11 13:56:18 TIMER: Check step...
16.11 13:56:18 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:56:18 TIMER: Check step: 1ms
16.11 13:56:23 TIMER: Check step...
16.11 13:56:23 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:56:23 TIMER: Check step: 1ms
16.11 13:56:28 TIMER: Check step...
16.11 13:56:28 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:56:28 TIMER: Check step: 0ms
16.11 13:56:33 TIMER: Check step...
16.11 13:56:33 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:56:33 TIMER: Check step: 0ms
16.11 13:56:38 TIMER: Check step...
16.11 13:56:38 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:56:38 TIMER: Check step: 1ms
16.11 13:56:43 TIMER: Check step...
16.11 13:56:43 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:56:43 TIMER: Check step: 1ms
16.11 13:56:48 TIMER: Check step...
16.11 13:56:48 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:56:48 TIMER: Check step: 0ms
16.11 13:56:53 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=12 OR secondid=12 AND finished <> true, _type => core/server.query }
16.11 13:56:53 DB: SELECT id FROM battle WHERE firstid=12 OR secondid=12 AND finished <> true
16.11 13:56:53 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
16.11 13:56:53 TIME: core/server.query : 1.15 ms
16.11 13:56:53 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
16.11 13:56:53 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
16.11 13:56:53 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
16.11 13:56:53 STATS: cache [battle], database [166 calls, 0 reads, 0 writes]
16.11 13:56:53 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
16.11 13:56:53 READDB: SELECT * FROM Battle WHERE ID = 0
16.11 13:56:53 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
16.11 13:56:53 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 212
Called from modules/VDLCache.hx line 205
Called from modules/VDLCache.hx line 144
Called from snipe/cache/CacheServer.hx line 487
16.11 13:56:53 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
16.11 13:56:53 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 12, _type => core/cache.update }
16.11 13:56:53 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
16.11 13:56:53 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
16.11 13:56:53 STATS: cache [user], database [166 calls, 1 reads, 1 writes]
16.11 13:56:53 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
16.11 13:56:53 STATS: cache manager [1], get [2 calls, total 0 sec spent, avg 2.26 ms]
16.11 13:56:53 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.18 ms]
16.11 13:56:53 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
16.11 13:56:53 TIME: core/cache.update : 0.6 ms
16.11 13:56:53 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 12, _type => core/cache.update }
16.11 13:56:53 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
16.11 13:56:53 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
16.11 13:56:53 STATS: cache [questdata], database [166 calls, 1 reads, 0 writes]
16.11 13:56:53 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
16.11 13:56:53 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
16.11 13:56:53 TIME: core/cache.update : 0.35 ms
16.11 13:56:53 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 12, _type => core/user.logoutPost }
16.11 13:56:53 TIMER: Check step...
16.11 13:56:53 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
16.11 13:56:53 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:56:53 TIME: core/user.logoutPost : 0.13 ms
16.11 13:56:53 TIMER: Check step: 0ms
16.11 13:56:54 WRITEDB: UPDATE Users SET name = E'uid12', deleted = E'false', email = E'', networktype = E'  ', password = E'uid12', isbanned = E'false', regdate = E'2016-10-12 12:47:26.670465+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1479221495,"lastLoginDate":321,"lastLoadDate":1117},"effects":{"list":[]}}' WHERE ID = 12
16.11 13:56:54 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 12
16.11 13:56:57 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid12' AND Password = E'uid12', _type => core/server.query }
16.11 13:56:57 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid12' AND Password = E'uid12'
16.11 13:56:57 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid12, networkid => , isbanned => false, id => 12 }}, errorCode => ok, _type => core/server.query }
16.11 13:56:57 TIME: core/server.query : 2.35 ms
16.11 13:56:57 NET: vdl.0 (thread) request core/user.isOnlineID { id => 12, _type => core/user.isOnlineID }
16.11 13:56:57 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
16.11 13:56:57 TIME: core/user.isOnlineID : 0.09 ms
16.11 13:56:57 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 12, _type => core/cache.get }
16.11 13:56:57 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid12, deleted => false, email => , networktype =>   , password => uid12, isbanned => false, regdate => 2016-10-12 12:47:26.670465+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1479221495, lastLoginDate => 321, lastLoadDate => 1117 }, effects => { list => [] } }}, version => 2, id => 12 } }
16.11 13:56:57 TIME: core/cache.get : 0.29 ms
16.11 13:56:57 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 12, _type => core/cache.get }
16.11 13:56:57 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 12 } }
16.11 13:56:57 TIME: core/cache.get : 0.16 ms
16.11 13:56:57 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 12, _type => core/user.loginPost, ipAddr => 172.16.30.15 }
16.11 13:56:57 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
16.11 13:56:57 TIME: core/user.loginPost : 0.15 ms
16.11 13:56:58 TIMER: Check step...
16.11 13:56:58 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:56:58 TIMER: Check step: 0ms
16.11 13:57:03 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 12, _type => core/cache.update }
16.11 13:57:03 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
16.11 13:57:03 TIME: core/cache.update : 0.15 ms
16.11 13:57:03 WRITEDB: UPDATE Users SET name = E'uid12', deleted = E'false', email = E'', networktype = E'  ', password = E'uid12', isbanned = E'false', regdate = E'2016-10-12 12:47:26.670465+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1479221495,"lastLoginDate":321,"lastLoadDate":1117},"effects":{"list":[]}}' WHERE ID = 12
16.11 13:57:03 TIMER: Check step...
16.11 13:57:03 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:57:03 TIMER: Check step: 0ms
16.11 13:57:08 TIMER: Clans cache...
16.11 13:57:08 TIMER: Clans cache: 0ms
16.11 13:57:08 TIMER: Check step...
16.11 13:57:08 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:57:08 TIMER: Check step: 1ms
16.11 13:57:08 TIMER: Check round...
16.11 13:57:08 DB: SELECT * FROM tournament WHERE startdate = '2016-16-11 16:57' OR rounddate = '2016-16-11 16:57' AND status <> 'finished'
16.11 13:57:08 DB: SELECT * FROM battle WHERE endtime >= '1479293.82878757' AND avaliable = true AND finished <> true
16.11 13:57:08 TIMER: Check round: 2ms
16.11 13:57:13 TIMER: Check step...
16.11 13:57:13 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:57:13 TIMER: Check step: 1ms
16.11 13:57:18 TIMER: Check step...
16.11 13:57:18 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:57:18 TIMER: Check step: 0ms
16.11 13:57:23 TIMER: Check step...
16.11 13:57:23 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:57:23 TIMER: Check step: 1ms
16.11 13:57:28 TIMER: Check step...
16.11 13:57:28 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:57:28 TIMER: Check step: 0ms
16.11 13:57:33 TIMER: Check step...
16.11 13:57:33 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:57:33 TIMER: Check step: 0ms
16.11 13:57:38 TIMER: Check step...
16.11 13:57:38 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:57:38 TIMER: Check step: 1ms
16.11 13:57:43 NET: vdl.0 (thread) request vdl/cache.battle.findRandom { user => { time => 60, player => 12 }, _type => vdl/cache.battle.findRandom }
16.11 13:57:43 QUEUE: vdl.0 (thread) response vdl/cache.battle.findRandom { errorCode => ok, _type => vdl/cache.battle.findRandom }
16.11 13:57:43 TIME: vdl/cache.battle.findRandom : 0.09 ms
16.11 13:57:43 TIMER: Check step...
16.11 13:57:43 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:57:43 TIMER: Check step: 1ms
16.11 13:57:46 NET: vdl.0 (thread) request vdl/cache.battle.closeFind { userId => 12, _type => vdl/cache.battle.closeFind }
16.11 13:57:46 QUEUE: vdl.0 (thread) response vdl/cache.battle.closeFind { errorCode => ok, _type => vdl/cache.battle.closeFind }
16.11 13:57:46 TIME: vdl/cache.battle.closeFind : 0.12 ms
16.11 13:57:48 TIMER: Check step...
16.11 13:57:48 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:57:48 TIMER: Check step: 0ms
16.11 13:57:53 TIMER: Check step...
16.11 13:57:53 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:57:53 TIMER: Check step: 1ms
16.11 13:57:58 TIMER: Check step...
16.11 13:57:58 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:57:58 TIMER: Check step: 0ms
16.11 13:58:03 TIMER: Check step...
16.11 13:58:03 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:58:03 TIMER: Check step: 1ms
16.11 13:58:08 TIMER: Clans cache...
16.11 13:58:08 TIMER: Clans cache: 0ms
16.11 13:58:08 TIMER: Check step...
16.11 13:58:08 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:58:08 TIMER: Check step: 0ms
16.11 13:58:08 TIMER: Check round...
16.11 13:58:08 DB: SELECT * FROM tournament WHERE startdate = '2016-16-11 16:58' OR rounddate = '2016-16-11 16:58' AND status <> 'finished'
16.11 13:58:08 DB: SELECT * FROM battle WHERE endtime >= '1479293.88881521' AND avaliable = true AND finished <> true
16.11 13:58:08 TIMER: Check round: 0ms
16.11 13:58:13 TIMER: Check step...
16.11 13:58:13 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:58:13 TIMER: Check step: 0ms
16.11 13:58:18 TIMER: Check step...
16.11 13:58:18 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:58:18 TIMER: Check step: 0ms
16.11 13:58:23 TIMER: Check step...
16.11 13:58:23 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:58:23 TIMER: Check step: 1ms
16.11 13:58:28 TIMER: Check step...
16.11 13:58:28 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:58:28 TIMER: Check step: 0ms
16.11 13:58:33 TIMER: Check step...
16.11 13:58:33 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:58:33 TIMER: Check step: 0ms
16.11 13:58:38 TIMER: Check step...
16.11 13:58:38 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:58:38 TIMER: Check step: 0ms
16.11 13:58:43 TIMER: Check step...
16.11 13:58:43 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:58:43 TIMER: Check step: 0ms
16.11 13:58:48 TIMER: Check step...
16.11 13:58:48 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:58:48 TIMER: Check step: 1ms
16.11 13:58:53 TIMER: Check step...
16.11 13:58:53 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:58:53 TIMER: Check step: 0ms
16.11 13:58:58 TIMER: Check step...
16.11 13:58:58 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:58:58 TIMER: Check step: 0ms
16.11 13:59:03 TIMER: Check step...
16.11 13:59:03 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:59:03 TIMER: Check step: 0ms
16.11 13:59:08 TIMER: Clans cache...
16.11 13:59:08 TIMER: Clans cache: 0ms
16.11 13:59:08 TIMER: Check step...
16.11 13:59:08 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:59:08 TIMER: Check step: 1ms
16.11 13:59:08 TIMER: Check round...
16.11 13:59:08 DB: SELECT * FROM tournament WHERE startdate = '2016-16-11 16:59' OR rounddate = '2016-16-11 16:59' AND status <> 'finished'
16.11 13:59:08 DB: SELECT * FROM battle WHERE endtime >= '1479293.94883806' AND avaliable = true AND finished <> true
16.11 13:59:08 TIMER: Check round: 2ms
16.11 13:59:13 TIMER: Check step...
16.11 13:59:13 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:59:13 TIMER: Check step: 0ms
16.11 13:59:18 TIMER: Check step...
16.11 13:59:18 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:59:18 TIMER: Check step: 0ms
16.11 13:59:23 TIMER: Check step...
16.11 13:59:23 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:59:23 TIMER: Check step: 0ms
16.11 13:59:28 TIMER: Check step...
16.11 13:59:28 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:59:28 TIMER: Check step: 1ms
16.11 13:59:33 TIMER: Check step...
16.11 13:59:33 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:59:33 TIMER: Check step: 0ms
16.11 13:59:38 TIMER: Check step...
16.11 13:59:38 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:59:38 TIMER: Check step: 1ms
16.11 13:59:43 TIMER: Check step...
16.11 13:59:43 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:59:43 TIMER: Check step: 0ms
16.11 13:59:48 TIMER: Check step...
16.11 13:59:48 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:59:48 TIMER: Check step: 1ms
16.11 13:59:53 TIMER: Check step...
16.11 13:59:53 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:59:53 TIMER: Check step: 1ms
16.11 13:59:58 TIMER: Check step...
16.11 13:59:58 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true AND steptime <> -1
16.11 13:59:58 TIMER: Check step: 0ms
