12.10 19:00:53 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33', _type => core/server.query }
12.10 19:00:53 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33'
12.10 19:00:53 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid33, networkid => , isbanned => false, id => 33 }}, errorCode => ok, _type => core/server.query }
12.10 19:00:53 TIME: core/server.query : 2.23 ms
12.10 19:00:53 NET: vdl.0 (thread) request core/user.isOnlineID { id => 33, _type => core/user.isOnlineID }
12.10 19:00:53 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
12.10 19:00:53 TIME: core/user.isOnlineID : 0.07 ms
12.10 19:00:53 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 33, _type => core/cache.get }
12.10 19:00:53 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
12.10 19:00:53 STATS: cache [user], segments [6 calls, 3 hits, 2 misses]
12.10 19:00:53 STATS: cache [user], database [774 calls, 1 reads, 2 writes]
12.10 19:00:53 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
12.10 19:00:53 READDB: SELECT * FROM Users WHERE ID = 33
12.10 19:00:53 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.39 ms]
12.10 19:00:53 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.33 ms]
12.10 19:00:53 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid33, deleted => false, email => , networktype =>   , password => uid33, isbanned => false, regdate => 2016-10-12 14:35:09.155569+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476272110, lastLoginDate => 286, lastLoadDate => 1013 }, effects => { list => [] } }}, version => 0, id => 33 } }
12.10 19:00:53 TIME: core/cache.get : 1.85 ms
12.10 19:00:53 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 33, _type => core/cache.get }
12.10 19:00:53 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
12.10 19:00:53 STATS: cache [questdata], segments [5 calls, 2 hits, 2 misses]
12.10 19:00:53 STATS: cache [questdata], database [774 calls, 1 reads, 1 writes]
12.10 19:00:53 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
12.10 19:00:53 READDB: SELECT * FROM UserQuests WHERE ID = 33
12.10 19:00:53 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 33 } }
12.10 19:00:53 TIME: core/cache.get : 1.45 ms
12.10 19:00:53 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 33, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
12.10 19:00:53 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
12.10 19:00:53 TIME: core/user.loginPost : 0.11 ms
12.10 19:01:00 TIMER: Clans cache...
12.10 19:01:00 TIMER: Clans cache: 0ms
12.10 19:01:00 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 33, _type => core/cache.update }
12.10 19:01:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
12.10 19:01:00 TIME: core/cache.update : 0.11 ms
12.10 19:01:01 WRITEDB: UPDATE Users SET name = E'uid33', deleted = E'false', email = E'', networktype = E'  ', password = E'uid33', isbanned = E'false', regdate = E'2016-10-12 14:35:09.155569+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}' WHERE ID = 33
12.10 19:01:01 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
12.10 19:01:01 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
12.10 19:01:01 READDB: SELECT ID FROM Tournament WHERE ID = 1
12.10 19:01:01 STATS: cache [tournament], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
12.10 19:01:01 STATS: cache [tournament], segments [3 calls, 0 hits, 2 misses]
12.10 19:01:01 STATS: cache [tournament], database [782 calls, 1 reads, 0 writes]
12.10 19:01:01 STATS: cache [tournament], lock [2 calls, 2 attempts, 0 failures]
12.10 19:01:01 CACHE: cache block locked: tournament.1
12.10 19:01:01 TRACE: vdl/cache.tournament.getAvailableTournament : Invalid field access : get
12.10 19:01:01 TRACE: vdl/cache.tournament.getAvailableTournament : 
Called from modules/VDLCache.hx line 173
Called from modules/VDLCache.hx line 78
Called from snipe/cache/CacheServer.hx line 487
12.10 19:01:01 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { errorCode => _requestException, _type => vdl/cache.tournament.getAvailableTournament }
12.10 19:02:37 TIMER: Starting timer...
12.10 19:02:37 TIMER: Timer running...
12.10 19:02:37 DB: SELECT * FROM GameVars
12.10 19:02:37 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
12.10 19:02:37 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
12.10 19:02:37 DB: SELECT * FROM Shops WHERE ID = 1
12.10 19:02:37 TEMP: load ./tmp/quest_daily_ids
12.10 19:02:37 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
12.10 19:02:37 TEMP: save ./tmp/quest_daily_ids
12.10 19:02:37 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
12.10 19:02:37 QUEUE: vdl.0 (thread) response server.login
12.10 19:02:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
12.10 19:02:37 DB: SELECT * FROM LocalizationStrings
12.10 19:02:37 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:02:37 TIME: core/server.query : 44.53 ms
12.10 19:02:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
12.10 19:02:37 DB: SELECT * FROM GameVars
12.10 19:02:37 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:02:37 TIME: core/server.query : 1.28 ms
12.10 19:02:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
12.10 19:02:37 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
12.10 19:02:37 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:02:37 TIME: core/server.query : 1.05 ms
12.10 19:02:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
12.10 19:02:37 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
12.10 19:02:37 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:02:37 TIME: core/server.query : 0.75 ms
12.10 19:02:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
12.10 19:02:37 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
12.10 19:02:37 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:02:37 TIME: core/server.query : 0.92 ms
12.10 19:02:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
12.10 19:02:37 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
12.10 19:02:37 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:02:37 TIME: core/server.query : 1.55 ms
12.10 19:02:37 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
12.10 19:02:37 QUEUE: vdl.0 (thread) response core/quest.getDaily
12.10 19:02:37 TIME: core/quest.getDaily : 0.04 ms
12.10 19:02:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
12.10 19:02:37 DB: SELECT * FROM UserAttributeTypes
12.10 19:02:37 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:02:37 TIME: core/server.query : 0.64 ms
12.10 19:02:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
12.10 19:02:37 DB: SELECT * FROM UserVariableTypes
12.10 19:02:37 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:02:37 TIME: core/server.query : 0.63 ms
12.10 19:02:37 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
12.10 19:02:37 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
12.10 19:02:37 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:02:37 TIME: core/server.query : 1.61 ms
12.10 19:02:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
12.10 19:02:37 DB: SELECT * FROM ItemGroups
12.10 19:02:37 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:02:37 TIME: core/server.query : 0.49 ms
12.10 19:02:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
12.10 19:02:37 DB: SELECT * FROM Bundles ORDER BY ID
12.10 19:02:37 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:02:37 TIME: core/server.query : 0.84 ms
12.10 19:02:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
12.10 19:02:37 DB: SELECT * FROM BundleItems ORDER BY ID
12.10 19:02:37 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:02:37 TIME: core/server.query : 0.68 ms
12.10 19:02:37 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
12.10 19:02:37 QUEUE: vdl.0 (thread) response core/shop.getList
12.10 19:02:37 TIME: core/shop.getList : 0.05 ms
12.10 19:02:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
12.10 19:02:37 DB: SELECT * FROM EffectAttributeTypes
12.10 19:02:37 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:02:37 TIME: core/server.query : 0.63 ms
12.10 19:02:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
12.10 19:02:37 DB: SELECT * FROM Effects
12.10 19:02:37 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:02:37 TIME: core/server.query : 0.62 ms
12.10 19:02:37 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
12.10 19:02:37 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
12.10 19:02:37 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:02:37 TIME: core/server.query : 1.17 ms
12.10 19:02:37 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
12.10 19:02:37 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
12.10 19:02:37 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:02:37 TIME: core/server.query : 1.11 ms
12.10 19:02:37 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
12.10 19:02:37 DB: SELECT * FROM Badges
12.10 19:02:37 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:02:37 TIME: core/server.query : 0.75 ms
12.10 19:03:23 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33', _type => core/server.query }
12.10 19:03:23 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33'
12.10 19:03:23 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:03:23 TIME: core/server.query : 1.59 ms
12.10 19:03:23 NET: vdl.0 (thread) request core/user.isOnlineID { id => 33, _type => core/user.isOnlineID }
12.10 19:03:23 QUEUE: vdl.0 (thread) response core/user.isOnlineID
12.10 19:03:23 TIME: core/user.isOnlineID : 0.05 ms
12.10 19:03:23 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 33, _type => core/cache.get }
12.10 19:03:23 READDB: SELECT * FROM Users WHERE ID = 33
12.10 19:03:23 QUEUE: vdl.0 (thread) response core/cache.get
12.10 19:03:23 TIME: core/cache.get : 2.41 ms
12.10 19:03:23 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 33, _type => core/cache.get }
12.10 19:03:23 READDB: SELECT * FROM UserQuests WHERE ID = 33
12.10 19:03:23 QUEUE: vdl.0 (thread) response core/cache.get
12.10 19:03:23 TIME: core/cache.get : 0.95 ms
12.10 19:03:23 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 33, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
12.10 19:03:23 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
12.10 19:03:23 TIME: core/user.loginPost : 0.06 ms
12.10 19:03:32 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 33, _type => core/cache.update }
12.10 19:03:32 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
12.10 19:03:32 TIME: core/cache.update : 0.08 ms
12.10 19:03:33 WRITEDB: UPDATE Users SET name = E'uid33', deleted = E'false', email = E'', networktype = E'  ', password = E'uid33', isbanned = E'false', regdate = E'2016-10-12 14:35:09.155569+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}' WHERE ID = 33
12.10 19:03:37 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
12.10 19:03:37 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
12.10 19:03:37 READDB: SELECT * FROM Tournament WHERE ID = 1
12.10 19:03:37 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid33, id => 33 }], battleActive => null, startdate => 1476144000 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
12.10 19:03:37 TIME: vdl/cache.tournament.getAvailableTournament : 2.02 ms
12.10 19:03:37 TIMER: Clans cache...
12.10 19:03:37 TIMER: Clans cache: 0ms
12.10 19:03:37 TIMER: Clans cache...
12.10 19:03:37 TIMER: Clans cache: 0ms
12.10 19:03:37 TIMER: Clans cache...
12.10 19:03:37 TIMER: Clans cache: 0ms
12.10 19:05:44 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=33 OR secondid=33 AND finished <> true, _type => core/server.query }
12.10 19:05:44 DB: SELECT id FROM battle WHERE firstid=33 OR secondid=33 AND finished <> true
12.10 19:05:44 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
12.10 19:05:44 TIME: core/server.query : 0.98 ms
12.10 19:05:44 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
12.10 19:05:44 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
12.10 19:05:44 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
12.10 19:05:44 STATS: cache [battle], database [188 calls, 0 reads, 0 writes]
12.10 19:05:44 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
12.10 19:05:44 READDB: SELECT * FROM Battle WHERE ID = 0
12.10 19:05:44 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
12.10 19:05:44 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 110
Called from modules/VDLCache.hx line 103
Called from modules/VDLCache.hx line 72
Called from snipe/cache/CacheServer.hx line 487
12.10 19:05:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
12.10 19:05:44 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 33, _type => core/cache.update }
12.10 19:05:44 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
12.10 19:05:44 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
12.10 19:05:44 STATS: cache [user], database [188 calls, 1 reads, 1 writes]
12.10 19:05:44 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
12.10 19:05:44 STATS: cache manager [1], get [2 calls, total 0 sec spent, avg 1.62 ms]
12.10 19:05:44 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.07 ms]
12.10 19:05:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
12.10 19:05:44 TIME: core/cache.update : 0.23 ms
12.10 19:05:44 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 33, _type => core/cache.update }
12.10 19:05:44 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
12.10 19:05:44 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
12.10 19:05:44 STATS: cache [questdata], database [188 calls, 1 reads, 0 writes]
12.10 19:05:44 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
12.10 19:05:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
12.10 19:05:44 TIME: core/cache.update : 0.18 ms
12.10 19:05:44 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 33, _type => core/user.logoutPost }
12.10 19:05:44 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
12.10 19:05:44 TIME: core/user.logoutPost : 0.07 ms
12.10 19:05:45 WRITEDB: UPDATE Users SET name = E'uid33', deleted = E'false', email = E'', networktype = E'  ', password = E'uid33', isbanned = E'false', regdate = E'2016-10-12 14:35:09.155569+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}' WHERE ID = 33
12.10 19:05:45 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 33
12.10 19:05:53 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33', _type => core/server.query }
12.10 19:05:53 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33'
12.10 19:05:53 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid33, networkid => , isbanned => false, id => 33 }}, errorCode => ok, _type => core/server.query }
12.10 19:05:53 TIME: core/server.query : 1.67 ms
12.10 19:05:53 NET: vdl.0 (thread) request core/user.isOnlineID { id => 33, _type => core/user.isOnlineID }
12.10 19:05:53 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
12.10 19:05:53 TIME: core/user.isOnlineID : 0.06 ms
12.10 19:05:53 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 33, _type => core/cache.get }
12.10 19:05:53 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid33, deleted => false, email => , networktype =>   , password => uid33, isbanned => false, regdate => 2016-10-12 14:35:09.155569+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476272110, lastLoginDate => 286, lastLoadDate => 1013 }, effects => { list => [] } }}, version => 2, id => 33 } }
12.10 19:05:53 TIME: core/cache.get : 0.25 ms
12.10 19:05:53 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 33, _type => core/cache.get }
12.10 19:05:53 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 33 } }
12.10 19:05:53 TIME: core/cache.get : 0.11 ms
12.10 19:05:53 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 33, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
12.10 19:05:53 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
12.10 19:05:53 TIME: core/user.loginPost : 0.07 ms
12.10 19:05:59 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
12.10 19:05:59 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
12.10 19:05:59 STATS: cache [tournament], get [3 calls, 1 cache hits, 1 cache misses, 0 same version, 0 not found]
12.10 19:05:59 STATS: cache [tournament], segments [4 calls, 2 hits, 1 misses]
12.10 19:05:59 STATS: cache [tournament], database [203 calls, 1 reads, 0 writes]
12.10 19:05:59 STATS: cache [tournament], lock [1 calls, 1 attempts, 0 failures]
12.10 19:05:59 CACHE: cache block locked: tournament.1
12.10 19:05:59 TRACE: vdl/cache.tournament.getAvailableTournament : Invalid field access : get
12.10 19:05:59 TRACE: vdl/cache.tournament.getAvailableTournament : 
Called from modules/VDLCache.hx line 173
Called from modules/VDLCache.hx line 78
Called from snipe/cache/CacheServer.hx line 487
12.10 19:05:59 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { errorCode => _requestException, _type => vdl/cache.tournament.getAvailableTournament }
12.10 19:06:02 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 33, _type => core/cache.update }
12.10 19:06:02 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
12.10 19:06:02 TIME: core/cache.update : 0.12 ms
12.10 19:06:03 WRITEDB: UPDATE Users SET name = E'uid33', deleted = E'false', email = E'', networktype = E'  ', password = E'uid33', isbanned = E'false', regdate = E'2016-10-12 14:35:09.155569+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}' WHERE ID = 33
12.10 19:07:33 TIMER: Starting timer...
12.10 19:07:33 TIMER: Timer running...
12.10 19:07:33 DB: SELECT * FROM GameVars
12.10 19:07:33 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
12.10 19:07:33 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
12.10 19:07:33 DB: SELECT * FROM Shops WHERE ID = 1
12.10 19:07:33 TEMP: load ./tmp/quest_daily_ids
12.10 19:07:33 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
12.10 19:07:33 TEMP: save ./tmp/quest_daily_ids
12.10 19:07:33 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
12.10 19:07:33 QUEUE: vdl.0 (thread) response server.login
12.10 19:07:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
12.10 19:07:33 DB: SELECT * FROM LocalizationStrings
12.10 19:07:33 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:07:33 TIME: core/server.query : 14.29 ms
12.10 19:07:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
12.10 19:07:33 DB: SELECT * FROM GameVars
12.10 19:07:33 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:07:33 TIME: core/server.query : 1.13 ms
12.10 19:07:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
12.10 19:07:33 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
12.10 19:07:33 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:07:33 TIME: core/server.query : 1 ms
12.10 19:07:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
12.10 19:07:33 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
12.10 19:07:33 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:07:33 TIME: core/server.query : 0.83 ms
12.10 19:07:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
12.10 19:07:33 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
12.10 19:07:33 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:07:33 TIME: core/server.query : 1.04 ms
12.10 19:07:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
12.10 19:07:33 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
12.10 19:07:33 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:07:33 TIME: core/server.query : 2.19 ms
12.10 19:07:33 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
12.10 19:07:33 QUEUE: vdl.0 (thread) response core/quest.getDaily
12.10 19:07:33 TIME: core/quest.getDaily : 0.04 ms
12.10 19:07:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
12.10 19:07:33 DB: SELECT * FROM UserAttributeTypes
12.10 19:07:33 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:07:33 TIME: core/server.query : 0.78 ms
12.10 19:07:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
12.10 19:07:33 DB: SELECT * FROM UserVariableTypes
12.10 19:07:33 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:07:33 TIME: core/server.query : 0.75 ms
12.10 19:07:33 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
12.10 19:07:33 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
12.10 19:07:33 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:07:33 TIME: core/server.query : 2.51 ms
12.10 19:07:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
12.10 19:07:33 DB: SELECT * FROM ItemGroups
12.10 19:07:33 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:07:33 TIME: core/server.query : 1.44 ms
12.10 19:07:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
12.10 19:07:33 DB: SELECT * FROM Bundles ORDER BY ID
12.10 19:07:33 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:07:33 TIME: core/server.query : 0.58 ms
12.10 19:07:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
12.10 19:07:33 DB: SELECT * FROM BundleItems ORDER BY ID
12.10 19:07:33 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:07:33 TIME: core/server.query : 0.74 ms
12.10 19:07:33 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
12.10 19:07:33 QUEUE: vdl.0 (thread) response core/shop.getList
12.10 19:07:33 TIME: core/shop.getList : 0.03 ms
12.10 19:07:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
12.10 19:07:33 DB: SELECT * FROM EffectAttributeTypes
12.10 19:07:33 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:07:33 TIME: core/server.query : 0.44 ms
12.10 19:07:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
12.10 19:07:33 DB: SELECT * FROM Effects
12.10 19:07:33 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:07:33 TIME: core/server.query : 1.06 ms
12.10 19:07:33 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
12.10 19:07:33 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
12.10 19:07:33 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:07:33 TIME: core/server.query : 1.04 ms
12.10 19:07:33 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
12.10 19:07:33 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
12.10 19:07:33 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:07:33 TIME: core/server.query : 1.05 ms
12.10 19:07:33 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
12.10 19:07:33 DB: SELECT * FROM Badges
12.10 19:07:33 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:07:33 TIME: core/server.query : 0.42 ms
12.10 19:08:10 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33', _type => core/server.query }
12.10 19:08:10 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33'
12.10 19:08:10 QUEUE: vdl.0 (thread) response core/server.query
12.10 19:08:10 TIME: core/server.query : 1.78 ms
12.10 19:08:10 NET: vdl.0 (thread) request core/user.isOnlineID { id => 33, _type => core/user.isOnlineID }
12.10 19:08:10 QUEUE: vdl.0 (thread) response core/user.isOnlineID
12.10 19:08:10 TIME: core/user.isOnlineID : 0.05 ms
12.10 19:08:10 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 33, _type => core/cache.get }
12.10 19:08:10 READDB: SELECT * FROM Users WHERE ID = 33
12.10 19:08:10 QUEUE: vdl.0 (thread) response core/cache.get
12.10 19:08:10 TIME: core/cache.get : 2.79 ms
12.10 19:08:10 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 33, _type => core/cache.get }
12.10 19:08:10 READDB: SELECT * FROM UserQuests WHERE ID = 33
12.10 19:08:10 QUEUE: vdl.0 (thread) response core/cache.get
12.10 19:08:10 TIME: core/cache.get : 0.94 ms
12.10 19:08:10 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 33, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
12.10 19:08:10 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
12.10 19:08:10 TIME: core/user.loginPost : 0.06 ms
12.10 19:08:17 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
12.10 19:08:17 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
12.10 19:08:17 READDB: SELECT * FROM Tournament WHERE ID = 1
12.10 19:08:17 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid33, id => 33 }], battleActive => null, startdate => 1476144000 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
12.10 19:08:17 TIME: vdl/cache.tournament.getAvailableTournament : 2.11 ms
12.10 19:08:19 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 33, _type => core/cache.update }
12.10 19:08:19 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
12.10 19:08:19 TIME: core/cache.update : 0.1 ms
12.10 19:08:19 WRITEDB: UPDATE Users SET name = E'uid33', deleted = E'false', email = E'', networktype = E'  ', password = E'uid33', isbanned = E'false', regdate = E'2016-10-12 14:35:09.155569+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}' WHERE ID = 33
12.10 19:08:27 BLOCKREMOVE: tournament 1 removed
12.10 19:08:28 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
12.10 19:08:28 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
12.10 19:08:28 READDB: SELECT * FROM Tournament WHERE ID = 1
12.10 19:08:28 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid33, id => 33 }], battleActive => null, startdate => 1476144000 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
12.10 19:08:28 TIME: vdl/cache.tournament.getAvailableTournament : 1.52 ms
12.10 19:08:33 TIMER: Clans cache...
12.10 19:08:33 TIMER: Clans cache: 0ms
12.10 19:08:35 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=33 OR secondid=33 AND finished <> true, _type => core/server.query }
12.10 19:08:35 DB: SELECT id FROM battle WHERE firstid=33 OR secondid=33 AND finished <> true
12.10 19:08:35 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
12.10 19:08:35 TIME: core/server.query : 2.43 ms
12.10 19:08:35 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
12.10 19:08:35 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
12.10 19:08:35 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
12.10 19:08:35 STATS: cache [battle], database [63 calls, 0 reads, 0 writes]
12.10 19:08:35 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
12.10 19:08:35 READDB: SELECT * FROM Battle WHERE ID = 0
12.10 19:08:35 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
12.10 19:08:35 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 110
Called from modules/VDLCache.hx line 103
Called from modules/VDLCache.hx line 72
Called from snipe/cache/CacheServer.hx line 487
12.10 19:08:35 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
12.10 19:08:35 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 33, _type => core/cache.update }
12.10 19:08:35 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
12.10 19:08:35 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
12.10 19:08:35 STATS: cache [user], database [63 calls, 1 reads, 1 writes]
12.10 19:08:35 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
12.10 19:08:35 STATS: cache manager [1], get [2 calls, total 0 sec spent, avg 1.81 ms]
12.10 19:08:35 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.1 ms]
12.10 19:08:35 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
12.10 19:08:35 TIME: core/cache.update : 0.3 ms
12.10 19:08:35 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 33, _type => core/cache.update }
12.10 19:08:35 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
12.10 19:08:35 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
12.10 19:08:35 STATS: cache [questdata], database [63 calls, 1 reads, 0 writes]
12.10 19:08:35 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
12.10 19:08:35 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
12.10 19:08:35 TIME: core/cache.update : 0.22 ms
12.10 19:08:35 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 33, _type => core/user.logoutPost }
12.10 19:08:35 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
12.10 19:08:35 TIME: core/user.logoutPost : 0.07 ms
12.10 19:08:36 WRITEDB: UPDATE Users SET name = E'uid33', deleted = E'false', email = E'', networktype = E'  ', password = E'uid33', isbanned = E'false', regdate = E'2016-10-12 14:35:09.155569+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}' WHERE ID = 33
12.10 19:08:36 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 33
12.10 19:08:38 BLOCKREMOVE: tournament 1 removed
12.10 19:08:41 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33', _type => core/server.query }
12.10 19:08:41 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33'
12.10 19:08:41 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid33, networkid => , isbanned => false, id => 33 }}, errorCode => ok, _type => core/server.query }
12.10 19:08:41 TIME: core/server.query : 0.63 ms
12.10 19:08:41 NET: vdl.0 (thread) request core/user.isOnlineID { id => 33, _type => core/user.isOnlineID }
12.10 19:08:41 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
12.10 19:08:41 TIME: core/user.isOnlineID : 0.07 ms
12.10 19:08:41 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 33, _type => core/cache.get }
12.10 19:08:41 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid33, deleted => false, email => , networktype =>   , password => uid33, isbanned => false, regdate => 2016-10-12 14:35:09.155569+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476272110, lastLoginDate => 286, lastLoadDate => 1013 }, effects => { list => [] } }}, version => 2, id => 33 } }
12.10 19:08:41 TIME: core/cache.get : 0.23 ms
12.10 19:08:41 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 33, _type => core/cache.get }
12.10 19:08:41 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 33 } }
12.10 19:08:41 TIME: core/cache.get : 0.12 ms
12.10 19:08:41 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 33, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
12.10 19:08:41 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
12.10 19:08:41 TIME: core/user.loginPost : 0.07 ms
12.10 19:08:46 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
12.10 19:08:46 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
12.10 19:08:46 STATS: cache [tournament], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
12.10 19:08:46 STATS: cache [tournament], segments [3 calls, 0 hits, 2 misses]
12.10 19:08:46 STATS: cache [tournament], database [73 calls, 2 reads, 0 writes]
12.10 19:08:46 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
12.10 19:08:46 READDB: SELECT * FROM Tournament WHERE ID = 1
12.10 19:08:46 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid33, id => 33 }], battleActive => null, startdate => 1476144000 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
12.10 19:08:46 TIME: vdl/cache.tournament.getAvailableTournament : 1.39 ms
12.10 19:08:49 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 33, _type => core/cache.update }
12.10 19:08:49 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
12.10 19:08:49 TIME: core/cache.update : 0.08 ms
12.10 19:08:49 WRITEDB: UPDATE Users SET name = E'uid33', deleted = E'false', email = E'', networktype = E'  ', password = E'uid33', isbanned = E'false', regdate = E'2016-10-12 14:35:09.155569+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}' WHERE ID = 33
12.10 19:08:56 BLOCKREMOVE: tournament 1 removed
12.10 19:09:33 TIMER: Clans cache...
12.10 19:09:33 TIMER: Clans cache: 0ms
12.10 19:09:33 TIMER: Clans cache...
12.10 19:09:33 TIMER: Clans cache: 0ms
12.10 19:11:03 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
12.10 19:11:03 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
12.10 19:11:03 STATS: cache [tournament], get [4 calls, 0 cache hits, 3 cache misses, 0 same version, 0 not found]
12.10 19:11:03 STATS: cache [tournament], segments [4 calls, 0 hits, 3 misses]
12.10 19:11:03 STATS: cache [tournament], database [210 calls, 3 reads, 0 writes]
12.10 19:11:03 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
12.10 19:11:03 READDB: SELECT * FROM Tournament WHERE ID = 1
12.10 19:11:03 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid33, id => 33 }], battleActive => null, startdate => 1476144000 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
12.10 19:11:03 TIME: vdl/cache.tournament.getAvailableTournament : 1.32 ms
12.10 19:11:14 BLOCKREMOVE: tournament 1 removed
12.10 19:11:33 TIMER: Clans cache...
12.10 19:11:33 TIMER: Clans cache: 0ms
12.10 19:11:33 TIMER: Clans cache...
12.10 19:11:33 TIMER: Clans cache: 0ms
12.10 19:12:42 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 33, tournament => 1, _type => vdl/cache.tournament.addUsers }
12.10 19:12:42 STATS: cache [tournament], get [5 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
12.10 19:12:42 STATS: cache [tournament], segments [5 calls, 0 hits, 4 misses]
12.10 19:12:42 STATS: cache [tournament], database [309 calls, 4 reads, 0 writes]
12.10 19:12:42 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
12.10 19:12:42 READDB: SELECT * FROM Tournament WHERE ID = 1
12.10 19:12:42 DB: SELECT name FROM users WHERE id = 33
12.10 19:12:42 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => userExist, _type => vdl/cache.tournament.addUsers }
12.10 19:12:42 TIME: vdl/cache.tournament.addUsers : 2 ms
12.10 19:12:53 BLOCKREMOVE: tournament 1 removed
12.10 19:13:33 TIMER: Clans cache...
12.10 19:13:33 TIMER: Clans cache: 0ms
12.10 19:13:33 TIMER: Clans cache...
12.10 19:13:33 TIMER: Clans cache: 0ms
12.10 19:13:33 TIMER: Clans cache...
12.10 19:13:33 TIMER: Clans cache: 0ms
12.10 19:13:33 TIMER: Clans cache...
12.10 19:13:33 TIMER: Clans cache: 0ms
12.10 19:13:33 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=33 OR secondid=33 AND finished <> true, _type => core/server.query }
12.10 19:13:33 DB: SELECT id FROM battle WHERE firstid=33 OR secondid=33 AND finished <> true
12.10 19:13:33 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
12.10 19:13:33 TIME: core/server.query : 1.06 ms
12.10 19:13:33 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
12.10 19:13:33 STATS: cache [battle], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 1 not found]
12.10 19:13:33 STATS: cache [battle], segments [2 calls, 0 hits, 1 misses]
12.10 19:13:33 STATS: cache [battle], database [540 calls, 1 reads, 0 writes]
12.10 19:13:33 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
12.10 19:13:33 READDB: SELECT * FROM Battle WHERE ID = 0
12.10 19:13:33 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
12.10 19:13:33 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 110
Called from modules/VDLCache.hx line 103
Called from modules/VDLCache.hx line 72
Called from snipe/cache/CacheServer.hx line 487
12.10 19:13:33 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
12.10 19:13:33 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 33, _type => core/cache.update }
12.10 19:13:33 STATS: cache [user], get [2 calls, 1 cache hits, 1 cache misses, 0 same version, 0 not found]
12.10 19:13:33 STATS: cache [user], segments [9 calls, 6 hits, 2 misses]
12.10 19:13:33 STATS: cache [user], database [540 calls, 1 reads, 3 writes]
12.10 19:13:33 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
12.10 19:13:33 STATS: cache manager [1], get [4 calls, total 0 sec spent, avg 0.92 ms]
12.10 19:13:33 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.11 ms]
12.10 19:13:33 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
12.10 19:13:33 TIME: core/cache.update : 0.31 ms
12.10 19:13:33 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 33, _type => core/cache.update }
12.10 19:13:33 STATS: cache [questdata], get [2 calls, 1 cache hits, 1 cache misses, 0 same version, 0 not found]
12.10 19:13:33 STATS: cache [questdata], segments [7 calls, 4 hits, 2 misses]
12.10 19:13:33 STATS: cache [questdata], database [540 calls, 1 reads, 1 writes]
12.10 19:13:33 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
12.10 19:13:33 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
12.10 19:13:33 TIME: core/cache.update : 0.22 ms
12.10 19:13:33 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 33, _type => core/user.logoutPost }
12.10 19:13:33 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
12.10 19:13:33 TIME: core/user.logoutPost : 0.07 ms
12.10 19:16:34 WRITEDB: UPDATE Users SET name = E'uid33', deleted = E'false', email = E'', networktype = E'  ', password = E'uid33', isbanned = E'false', regdate = E'2016-10-12 14:35:09.155569+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}' WHERE ID = 33
12.10 19:16:34 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 33
12.10 19:16:44 BLOCKREMOVE: user 33 removed
12.10 19:16:44 BLOCKREMOVE: questdata 33 removed
12.10 19:17:33 TIMER: Clans cache...
12.10 19:17:33 TIMER: Clans cache: 0ms
12.10 19:17:33 TIMER: Clans cache...
12.10 19:17:33 TIMER: Clans cache: 0ms
12.10 19:17:33 TIMER: Clans cache...
12.10 19:17:33 TIMER: Clans cache: 0ms
12.10 19:20:21 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33', _type => core/server.query }
12.10 19:20:21 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid33' AND Password = E'uid33'
12.10 19:20:21 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid33, networkid => , isbanned => false, id => 33 }}, errorCode => ok, _type => core/server.query }
12.10 19:20:21 TIME: core/server.query : 2.1 ms
12.10 19:20:21 NET: vdl.0 (thread) request core/user.isOnlineID { id => 33, _type => core/user.isOnlineID }
12.10 19:20:21 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
12.10 19:20:21 TIME: core/user.isOnlineID : 0.07 ms
12.10 19:20:21 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 33, _type => core/cache.get }
12.10 19:20:21 STATS: cache [user], get [2 calls, 1 cache hits, 1 cache misses, 0 same version, 0 not found]
12.10 19:20:21 STATS: cache [user], segments [11 calls, 8 hits, 2 misses]
12.10 19:20:21 STATS: cache [user], database [768 calls, 1 reads, 4 writes]
12.10 19:20:21 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
12.10 19:20:21 READDB: SELECT * FROM Users WHERE ID = 33
12.10 19:20:21 STATS: cache manager [1], get [5 calls, total 0 sec spent, avg 0.99 ms]
12.10 19:20:21 STATS: cache manager [1], update [6 calls, total 0 sec spent, avg 0.12 ms]
12.10 19:20:21 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid33, deleted => false, email => , networktype =>   , password => uid33, isbanned => false, regdate => 2016-10-12 14:35:09.155569+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476272110, lastLoginDate => 286, lastLoadDate => 1013 }, effects => { list => [] } }}, version => 0, id => 33 } }
12.10 19:20:21 TIME: core/cache.get : 1.54 ms
12.10 19:20:21 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 33, _type => core/cache.get }
12.10 19:20:21 STATS: cache [questdata], get [2 calls, 1 cache hits, 1 cache misses, 0 same version, 0 not found]
12.10 19:20:21 STATS: cache [questdata], segments [9 calls, 6 hits, 2 misses]
12.10 19:20:21 STATS: cache [questdata], database [768 calls, 1 reads, 2 writes]
12.10 19:20:21 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
12.10 19:20:21 READDB: SELECT * FROM UserQuests WHERE ID = 33
12.10 19:20:21 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 33 } }
12.10 19:20:21 TIME: core/cache.get : 0.67 ms
12.10 19:20:21 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 33, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
12.10 19:20:21 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
12.10 19:20:21 TIME: core/user.loginPost : 0.08 ms
12.10 19:20:28 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
12.10 19:20:28 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
12.10 19:20:28 STATS: cache [tournament], get [6 calls, 0 cache hits, 5 cache misses, 0 same version, 0 not found]
12.10 19:20:28 STATS: cache [tournament], segments [6 calls, 0 hits, 5 misses]
12.10 19:20:28 STATS: cache [tournament], database [775 calls, 5 reads, 0 writes]
12.10 19:20:28 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
12.10 19:20:28 READDB: SELECT * FROM Tournament WHERE ID = 1
12.10 19:20:28 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid33, id => 33 }], battleActive => null, startdate => 1476144000 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
12.10 19:20:28 TIME: vdl/cache.tournament.getAvailableTournament : 1.64 ms
12.10 19:20:29 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 33, _type => core/cache.update }
12.10 19:20:29 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
12.10 19:20:29 TIME: core/cache.update : 0.15 ms
12.10 19:20:30 WRITEDB: UPDATE Users SET name = E'uid33', deleted = E'false', email = E'', networktype = E'  ', password = E'uid33', isbanned = E'false', regdate = E'2016-10-12 14:35:09.155569+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}' WHERE ID = 33
12.10 19:20:34 TIMER: Clans cache...
12.10 19:20:34 TIMER: Clans cache: 0ms
12.10 19:20:36 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
12.10 19:20:36 DB: SELECT * FROM tournament WHERE winner = -1 AND status = 'starting'
12.10 19:20:36 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid33, id => 33 }], battleActive => null, startdate => 1476144000 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
12.10 19:20:36 TIME: vdl/cache.tournament.getAvailableTournament : 1.45 ms
12.10 19:20:47 BLOCKREMOVE: tournament 1 removed
12.10 19:21:34 TIMER: Clans cache...
12.10 19:21:34 TIMER: Clans cache: 0ms
12.10 19:21:34 TIMER: Clans cache...
12.10 19:21:34 TIMER: Clans cache: 0ms
12.10 19:21:34 TIMER: Clans cache...
12.10 19:21:34 TIMER: Clans cache: 0ms
12.10 19:24:33 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=33 OR secondid=33 AND finished <> true, _type => core/server.query }
12.10 19:24:33 DB: SELECT id FROM battle WHERE firstid=33 OR secondid=33 AND finished <> true
12.10 19:24:33 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
12.10 19:24:33 TIME: core/server.query : 0.76 ms
12.10 19:24:33 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
12.10 19:24:33 STATS: cache [battle], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 2 not found]
12.10 19:24:33 STATS: cache [battle], segments [3 calls, 0 hits, 2 misses]
12.10 19:24:33 STATS: cache [battle], database [1020 calls, 2 reads, 0 writes]
12.10 19:24:33 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
12.10 19:24:33 READDB: SELECT * FROM Battle WHERE ID = 0
12.10 19:24:33 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
12.10 19:24:33 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 110
Called from modules/VDLCache.hx line 103
Called from modules/VDLCache.hx line 72
Called from snipe/cache/CacheServer.hx line 487
12.10 19:24:33 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
12.10 19:24:33 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 33, _type => core/cache.update }
12.10 19:24:33 STATS: cache [user], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
12.10 19:24:33 STATS: cache [user], segments [14 calls, 9 hits, 4 misses]
12.10 19:24:33 STATS: cache [user], database [1020 calls, 2 reads, 5 writes]
12.10 19:24:33 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
12.10 19:24:33 STATS: cache manager [1], get [6 calls, total 0.01 sec spent, avg 0.92 ms]
12.10 19:24:33 STATS: cache manager [1], update [8 calls, total 0 sec spent, avg 0.12 ms]
12.10 19:24:33 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
12.10 19:24:33 TIME: core/cache.update : 0.32 ms
12.10 19:24:33 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 33, _type => core/cache.update }
12.10 19:24:33 STATS: cache [questdata], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
12.10 19:24:33 STATS: cache [questdata], segments [11 calls, 6 hits, 4 misses]
12.10 19:24:33 STATS: cache [questdata], database [1020 calls, 2 reads, 2 writes]
12.10 19:24:33 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
12.10 19:24:33 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
12.10 19:24:33 TIME: core/cache.update : 0.22 ms
12.10 19:24:33 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 33, _type => core/user.logoutPost }
12.10 19:24:33 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
12.10 19:24:33 TIME: core/user.logoutPost : 0.07 ms
12.10 19:24:34 TIMER: Clans cache...
12.10 19:24:34 TIMER: Clans cache: 0ms
12.10 19:24:34 WRITEDB: UPDATE Users SET name = E'uid33', deleted = E'false', email = E'', networktype = E'  ', password = E'uid33', isbanned = E'false', regdate = E'2016-10-12 14:35:09.155569+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}' WHERE ID = 33
12.10 19:24:34 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 33
12.10 19:24:44 BLOCKREMOVE: user 33 removed
12.10 19:24:44 BLOCKREMOVE: questdata 33 removed
