31.08 14:04:03 TIMER: Clans cache...
31.08 14:04:03 TIMER: Clans cache: 0ms
31.08 14:04:03 TIMER: Clans cache...
31.08 14:04:03 TIMER: Clans cache: 0ms
31.08 14:04:03 TIMER: Clans cache...
31.08 14:04:03 TIMER: Clans cache: 0ms
31.08 14:04:03 TIMER: Clans cache...
31.08 14:04:03 TIMER: Clans cache: 0ms
31.08 14:04:03 TIMER: Clans cache...
31.08 14:04:03 TIMER: Clans cache: 0ms
31.08 14:04:03 TIMER: Clans cache...
31.08 14:04:03 TIMER: Clans cache: 0ms
31.08 14:04:03 TIMER: Clans cache...
31.08 14:04:03 TIMER: Clans cache: 0ms
31.08 14:04:03 TIMER: Clans cache...
31.08 14:04:03 TIMER: Clans cache: 0ms
31.08 14:04:03 TIMER: Clans cache...
31.08 14:04:03 TIMER: Clans cache: 0ms
31.08 14:04:03 TIMER: Clans cache...
31.08 14:04:03 TIMER: Clans cache: 0ms
31.08 14:04:03 TIMER: Clans cache...
31.08 14:04:03 TIMER: Clans cache: 0ms
31.08 14:04:03 TIMER: Clans cache...
31.08 14:04:03 TIMER: Clans cache: 0ms
31.08 14:04:03 TIMER: Clans cache...
31.08 14:04:03 TIMER: Clans cache: 0ms
31.08 14:04:03 TIMER: Clans cache...
31.08 14:04:03 TIMER: Clans cache: 0ms
31.08 14:04:03 TIMER: Clans cache...
31.08 14:04:03 TIMER: Clans cache: 0ms
31.08 14:04:03 TIMER: Clans cache...
31.08 14:04:03 TIMER: Clans cache: 0ms
31.08 14:19:53 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 14:19:53 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 14:19:53 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:19:53 TIME: core/server.query : 64.21 ms
31.08 14:19:53 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 14:19:53 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 14:19:53 TIME: core/user.isOnlineID : 0.06 ms
31.08 14:19:53 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 14:19:53 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 14:19:53 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
31.08 14:19:53 STATS: cache [user], database [1493 calls, 0 reads, 0 writes]
31.08 14:19:53 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
31.08 14:19:53 READDB: SELECT * FROM Users WHERE ID = 2
31.08 14:19:53 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 1.94 ms]
31.08 14:19:53 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
31.08 14:19:53 QUEUE: vdl.0 (thread) response core/cache.get
31.08 14:19:53 TIME: core/cache.get : 2.03 ms
31.08 14:19:53 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 14:19:53 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 14:19:53 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
31.08 14:19:53 STATS: cache [questdata], database [1493 calls, 0 reads, 0 writes]
31.08 14:19:53 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
31.08 14:19:53 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 14:19:53 QUEUE: vdl.0 (thread) response core/cache.get
31.08 14:19:53 TIME: core/cache.get : 19.74 ms
31.08 14:19:53 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 14:19:53 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 14:19:53 TIME: core/user.loginPost : 0.05 ms
31.08 14:19:53 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 2 AND Date = 'today'::timestamp, _type => core/server.query }
31.08 14:19:53 DB: SELECT ID FROM TempUserLogins WHERE UserID = 2 AND Date = 'today'::timestamp
31.08 14:19:53 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
31.08 14:19:53 TIME: core/server.query : 49.73 ms
31.08 14:19:53 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (2, 'today'::timestamp), _type => core/server.pending }} }
31.08 14:19:53 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 14:19:53 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (2, 'today'::timestamp)
31.08 14:19:53 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => not, _type => vdl/cache.battle.find }
31.08 14:19:53 TIME: vdl/cache.battle.find : 12.12 ms
31.08 14:19:53 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
31.08 14:19:53 DB: SELECT nextval('Battle_id_seq') AS id
31.08 14:19:54 TRACE: vdl/cache.battle.create : Invalid field access : id
31.08 14:19:54 TRACE: vdl/cache.battle.create : 
Called from modules/VDLCache.hx line 175
Called from modules/VDLCache.hx line 92
Called from modules/VDLCache.hx line 66
Called from modules/VDLCache.hx line 55
Called from snipe/cache/CacheServer.hx line 487
31.08 14:19:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => _requestException, _type => vdl/cache.battle.create }
31.08 14:20:03 TIMER: Clans cache...
31.08 14:20:03 TIMER: Clans cache: 0ms
31.08 14:20:03 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { lastLoginDate => 244, lastLoadDate => 832 } }}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 14:20:03 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 14:20:03 TIME: core/cache.update : 0.19 ms
31.08 14:20:04 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 14:21:03 TIMER: Clans cache...
31.08 14:21:03 TIMER: Clans cache: 0ms
31.08 14:21:03 TIMER: Clans cache...
31.08 14:21:03 TIMER: Clans cache: 0ms
31.08 14:22:40 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
31.08 14:22:40 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
31.08 14:22:40 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
31.08 14:22:40 STATS: cache [user], database [1659 calls, 1 reads, 1 writes]
31.08 14:22:40 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
31.08 14:22:40 STATS: cache manager [1], get [2 calls, total 0.02 sec spent, avg 10.82 ms]
31.08 14:22:40 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.17 ms]
31.08 14:22:40 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
31.08 14:22:40 TIME: core/cache.update : 0.46 ms
31.08 14:22:40 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
31.08 14:22:40 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
31.08 14:22:40 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
31.08 14:22:40 STATS: cache [questdata], database [1659 calls, 1 reads, 0 writes]
31.08 14:22:40 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
31.08 14:22:40 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 14:22:40 TIME: core/cache.update : 0.39 ms
31.08 14:22:40 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
31.08 14:22:40 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
31.08 14:22:40 TIME: core/user.logoutPost : 0.14 ms
31.08 14:22:40 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 14:22:40 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
31.08 14:22:50 BLOCKREMOVE: user 2 removed
31.08 14:22:50 BLOCKREMOVE: questdata 2 removed
31.08 14:22:52 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 14:22:52 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 14:22:52 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
31.08 14:22:52 TIME: core/server.query : 1.47 ms
31.08 14:22:52 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 14:22:52 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
31.08 14:22:52 TIME: core/user.isOnlineID : 0.12 ms
31.08 14:22:52 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 14:22:52 READDB: SELECT * FROM Users WHERE ID = 2
31.08 14:22:52 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472567681, lastLoginDate => 244, lastLoadDate => 832 }, effects => { list => [] } }}, version => 0, id => 2 } }
31.08 14:22:52 TIME: core/cache.get : 1.83 ms
31.08 14:22:52 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 14:22:52 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 14:22:52 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
31.08 14:22:52 TIME: core/cache.get : 1.13 ms
31.08 14:22:52 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 14:22:52 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 14:22:52 TIME: core/user.loginPost : 0.25 ms
31.08 14:22:52 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 14:22:52 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 14:22:52 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => not, _type => vdl/cache.battle.find }
31.08 14:22:52 TIME: vdl/cache.battle.find : 4.42 ms
31.08 14:22:52 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
31.08 14:22:52 DB: SELECT nextval('Battle_id_seq') AS id
31.08 14:22:52 TRACE: vdl/cache.battle.create : Invalid field access : id
31.08 14:22:52 TRACE: vdl/cache.battle.create : 
Called from modules/VDLCache.hx line 175
Called from modules/VDLCache.hx line 92
Called from modules/VDLCache.hx line 66
Called from modules/VDLCache.hx line 55
Called from snipe/cache/CacheServer.hx line 487
31.08 14:22:52 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => _requestException, _type => vdl/cache.battle.create }
31.08 14:22:58 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 14:22:58 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 14:22:58 TIME: core/cache.update : 0.18 ms
31.08 14:22:59 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 14:24:05 TIMER: Starting timer...
31.08 14:24:05 TIMER: Timer running...
31.08 14:24:05 DB: SELECT * FROM GameVars
31.08 14:24:05 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 14:24:05 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 14:24:06 DB: SELECT * FROM Shops WHERE ID = 1
31.08 14:24:06 TEMP: load ./tmp/quest_daily_ids
31.08 14:24:06 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 14:24:06 TEMP: save ./tmp/quest_daily_ids
31.08 14:24:06 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 14:24:06 QUEUE: vdl.0 (thread) response server.login
31.08 14:24:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 14:24:06 DB: SELECT * FROM LocalizationStrings
31.08 14:24:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:24:06 TIME: core/server.query : 5.89 ms
31.08 14:24:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 14:24:06 DB: SELECT * FROM GameVars
31.08 14:24:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:24:06 TIME: core/server.query : 0.52 ms
31.08 14:24:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 14:24:06 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 14:24:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:24:06 TIME: core/server.query : 0.63 ms
31.08 14:24:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 14:24:06 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 14:24:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:24:06 TIME: core/server.query : 0.44 ms
31.08 14:24:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 14:24:06 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 14:24:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:24:06 TIME: core/server.query : 0.51 ms
31.08 14:24:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 14:24:06 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 14:24:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:24:06 TIME: core/server.query : 0.89 ms
31.08 14:24:06 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 14:24:06 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 14:24:06 TIME: core/quest.getDaily : 0.02 ms
31.08 14:24:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 14:24:06 DB: SELECT * FROM UserAttributeTypes
31.08 14:24:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:24:06 TIME: core/server.query : 0.58 ms
31.08 14:24:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 14:24:06 DB: SELECT * FROM UserVariableTypes
31.08 14:24:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:24:06 TIME: core/server.query : 0.33 ms
31.08 14:24:06 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 14:24:06 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 14:24:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:24:06 TIME: core/server.query : 1.07 ms
31.08 14:24:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 14:24:06 DB: SELECT * FROM ItemGroups
31.08 14:24:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:24:06 TIME: core/server.query : 0.36 ms
31.08 14:24:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 14:24:06 DB: SELECT * FROM Bundles ORDER BY ID
31.08 14:24:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:24:06 TIME: core/server.query : 0.42 ms
31.08 14:24:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 14:24:06 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 14:24:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:24:06 TIME: core/server.query : 0.47 ms
31.08 14:24:06 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 14:24:06 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 14:24:06 TIME: core/shop.getList : 0.03 ms
31.08 14:24:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 14:24:06 DB: SELECT * FROM EffectAttributeTypes
31.08 14:24:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:24:06 TIME: core/server.query : 0.29 ms
31.08 14:24:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 14:24:06 DB: SELECT * FROM Effects
31.08 14:24:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:24:06 TIME: core/server.query : 0.43 ms
31.08 14:24:06 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 14:24:06 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 14:24:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:24:06 TIME: core/server.query : 0.75 ms
31.08 14:24:06 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 14:24:06 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 14:24:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:24:06 TIME: core/server.query : 0.53 ms
31.08 14:24:06 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 14:24:06 DB: SELECT * FROM Badges
31.08 14:24:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:24:06 TIME: core/server.query : 0.32 ms
31.08 14:24:55 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 14:24:55 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 14:24:55 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:24:55 TIME: core/server.query : 1.84 ms
31.08 14:24:55 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 14:24:55 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 14:24:55 TIME: core/user.isOnlineID : 0.03 ms
31.08 14:24:55 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 14:24:55 READDB: SELECT * FROM Users WHERE ID = 2
31.08 14:24:55 QUEUE: vdl.0 (thread) response core/cache.get
31.08 14:24:55 TIME: core/cache.get : 2.79 ms
31.08 14:24:55 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 14:24:55 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 14:24:55 QUEUE: vdl.0 (thread) response core/cache.get
31.08 14:24:55 TIME: core/cache.get : 1.25 ms
31.08 14:24:55 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 14:24:55 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 14:24:55 TIME: core/user.loginPost : 0.07 ms
31.08 14:24:55 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 14:24:55 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 14:24:55 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => not, _type => vdl/cache.battle.find }
31.08 14:24:55 TIME: vdl/cache.battle.find : 1.74 ms
31.08 14:24:55 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
31.08 14:24:55 DB: SELECT nextval('Battle_id_seq') AS id
31.08 14:24:55 TRACE: vdl/cache.battle.create : Invalid field access : id
31.08 14:24:55 TRACE: vdl/cache.battle.create : 
Called from modules/VDLCache.hx line 175
Called from modules/VDLCache.hx line 92
Called from modules/VDLCache.hx line 66
Called from modules/VDLCache.hx line 55
Called from snipe/cache/CacheServer.hx line 487
31.08 14:24:55 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => _requestException, _type => vdl/cache.battle.create }
31.08 14:25:01 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 14:25:01 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 14:25:01 TIME: core/cache.update : 0.15 ms
31.08 14:25:02 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 14:27:11 TIMER: Starting timer...
31.08 14:27:11 TIMER: Timer running...
31.08 14:27:11 DB: SELECT * FROM GameVars
31.08 14:27:11 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 14:27:11 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 14:27:11 DB: SELECT * FROM Shops WHERE ID = 1
31.08 14:27:11 TEMP: load ./tmp/quest_daily_ids
31.08 14:27:11 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 14:27:11 TEMP: save ./tmp/quest_daily_ids
31.08 14:27:11 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 14:27:11 QUEUE: vdl.0 (thread) response server.login
31.08 14:27:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 14:27:11 DB: SELECT * FROM LocalizationStrings
31.08 14:27:11 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:27:11 TIME: core/server.query : 6.09 ms
31.08 14:27:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 14:27:11 DB: SELECT * FROM GameVars
31.08 14:27:11 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:27:11 TIME: core/server.query : 0.55 ms
31.08 14:27:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 14:27:11 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 14:27:11 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:27:11 TIME: core/server.query : 0.67 ms
31.08 14:27:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 14:27:11 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 14:27:11 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:27:11 TIME: core/server.query : 0.38 ms
31.08 14:27:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 14:27:11 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 14:27:11 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:27:11 TIME: core/server.query : 0.51 ms
31.08 14:27:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 14:27:11 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 14:27:11 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:27:11 TIME: core/server.query : 0.77 ms
31.08 14:27:11 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 14:27:11 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 14:27:11 TIME: core/quest.getDaily : 0.03 ms
31.08 14:27:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 14:27:11 DB: SELECT * FROM UserAttributeTypes
31.08 14:27:11 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:27:11 TIME: core/server.query : 0.33 ms
31.08 14:27:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 14:27:11 DB: SELECT * FROM UserVariableTypes
31.08 14:27:11 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:27:11 TIME: core/server.query : 0.36 ms
31.08 14:27:11 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 14:27:11 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 14:27:11 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:27:11 TIME: core/server.query : 1.37 ms
31.08 14:27:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 14:27:11 DB: SELECT * FROM ItemGroups
31.08 14:27:11 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:27:11 TIME: core/server.query : 0.47 ms
31.08 14:27:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 14:27:11 DB: SELECT * FROM Bundles ORDER BY ID
31.08 14:27:11 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:27:11 TIME: core/server.query : 0.83 ms
31.08 14:27:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 14:27:11 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 14:27:11 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:27:11 TIME: core/server.query : 0.54 ms
31.08 14:27:11 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 14:27:11 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 14:27:11 TIME: core/shop.getList : 0.02 ms
31.08 14:27:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 14:27:11 DB: SELECT * FROM EffectAttributeTypes
31.08 14:27:11 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:27:11 TIME: core/server.query : 0.47 ms
31.08 14:27:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 14:27:11 DB: SELECT * FROM Effects
31.08 14:27:11 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:27:11 TIME: core/server.query : 0.33 ms
31.08 14:27:11 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 14:27:11 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 14:27:11 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:27:11 TIME: core/server.query : 0.73 ms
31.08 14:27:11 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 14:27:11 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 14:27:11 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:27:11 TIME: core/server.query : 0.59 ms
31.08 14:27:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 14:27:11 DB: SELECT * FROM Badges
31.08 14:27:11 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:27:11 TIME: core/server.query : 0.39 ms
31.08 14:27:38 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 14:27:38 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 14:27:38 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:27:38 TIME: core/server.query : 2.86 ms
31.08 14:27:38 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 14:27:38 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 14:27:38 TIME: core/user.isOnlineID : 0.11 ms
31.08 14:27:38 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 14:27:38 READDB: SELECT * FROM Users WHERE ID = 2
31.08 14:27:38 QUEUE: vdl.0 (thread) response core/cache.get
31.08 14:27:38 TIME: core/cache.get : 3.44 ms
31.08 14:27:38 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 14:27:38 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 14:27:38 QUEUE: vdl.0 (thread) response core/cache.get
31.08 14:27:38 TIME: core/cache.get : 1.44 ms
31.08 14:27:38 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 14:27:38 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 14:27:38 TIME: core/user.loginPost : 0.14 ms
31.08 14:27:38 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 14:27:38 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 14:27:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => not, _type => vdl/cache.battle.find }
31.08 14:27:38 TIME: vdl/cache.battle.find : 2.06 ms
31.08 14:27:38 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
31.08 14:27:38 DB: SELECT nextval('Battle_id_seq') AS id
31.08 14:27:38 TRACE: vdl/cache.battle.create : Invalid field access : id
31.08 14:27:38 TRACE: vdl/cache.battle.create : 
Called from modules/VDLCache.hx line 175
Called from modules/VDLCache.hx line 92
Called from modules/VDLCache.hx line 66
Called from modules/VDLCache.hx line 55
Called from snipe/cache/CacheServer.hx line 487
31.08 14:27:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => _requestException, _type => vdl/cache.battle.create }
31.08 14:27:46 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 14:27:46 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 14:27:46 TIME: core/cache.update : 0.2 ms
31.08 14:27:47 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 14:30:21 TIMER: Starting timer...
31.08 14:30:21 TIMER: Timer running...
31.08 14:30:21 DB: SELECT * FROM GameVars
31.08 14:30:21 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 14:30:21 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 14:30:21 DB: SELECT * FROM Shops WHERE ID = 1
31.08 14:30:21 TEMP: load ./tmp/quest_daily_ids
31.08 14:30:21 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 14:30:21 TEMP: save ./tmp/quest_daily_ids
31.08 14:30:21 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 14:30:21 QUEUE: vdl.0 (thread) response server.login
31.08 14:30:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 14:30:21 DB: SELECT * FROM LocalizationStrings
31.08 14:30:21 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:30:21 TIME: core/server.query : 7.15 ms
31.08 14:30:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 14:30:21 DB: SELECT * FROM GameVars
31.08 14:30:21 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:30:21 TIME: core/server.query : 0.58 ms
31.08 14:30:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 14:30:21 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 14:30:21 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:30:21 TIME: core/server.query : 0.75 ms
31.08 14:30:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 14:30:21 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 14:30:21 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:30:21 TIME: core/server.query : 0.51 ms
31.08 14:30:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 14:30:21 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 14:30:21 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:30:21 TIME: core/server.query : 0.78 ms
31.08 14:30:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 14:30:21 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 14:30:21 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:30:21 TIME: core/server.query : 0.92 ms
31.08 14:30:21 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 14:30:21 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 14:30:21 TIME: core/quest.getDaily : 0.03 ms
31.08 14:30:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 14:30:21 DB: SELECT * FROM UserAttributeTypes
31.08 14:30:21 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:30:21 TIME: core/server.query : 0.46 ms
31.08 14:30:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 14:30:21 DB: SELECT * FROM UserVariableTypes
31.08 14:30:21 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:30:21 TIME: core/server.query : 0.39 ms
31.08 14:30:21 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 14:30:21 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 14:30:21 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:30:21 TIME: core/server.query : 1.46 ms
31.08 14:30:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 14:30:21 DB: SELECT * FROM ItemGroups
31.08 14:30:21 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:30:21 TIME: core/server.query : 0.42 ms
31.08 14:30:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 14:30:21 DB: SELECT * FROM Bundles ORDER BY ID
31.08 14:30:21 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:30:21 TIME: core/server.query : 0.69 ms
31.08 14:30:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 14:30:21 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 14:30:21 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:30:21 TIME: core/server.query : 0.43 ms
31.08 14:30:21 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 14:30:21 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 14:30:21 TIME: core/shop.getList : 0.06 ms
31.08 14:30:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 14:30:21 DB: SELECT * FROM EffectAttributeTypes
31.08 14:30:21 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:30:21 TIME: core/server.query : 0.42 ms
31.08 14:30:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 14:30:21 DB: SELECT * FROM Effects
31.08 14:30:21 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:30:21 TIME: core/server.query : 0.49 ms
31.08 14:30:21 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 14:30:21 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 14:30:21 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:30:21 TIME: core/server.query : 0.89 ms
31.08 14:30:21 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 14:30:21 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 14:30:21 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:30:21 TIME: core/server.query : 0.64 ms
31.08 14:30:21 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 14:30:21 DB: SELECT * FROM Badges
31.08 14:30:21 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:30:21 TIME: core/server.query : 0.37 ms
31.08 14:30:59 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 14:30:59 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 14:30:59 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:30:59 TIME: core/server.query : 2.9 ms
31.08 14:30:59 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 14:30:59 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 14:30:59 TIME: core/user.isOnlineID : 0.1 ms
31.08 14:30:59 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 14:30:59 READDB: SELECT * FROM Users WHERE ID = 2
31.08 14:30:59 QUEUE: vdl.0 (thread) response core/cache.get
31.08 14:30:59 TIME: core/cache.get : 3.69 ms
31.08 14:30:59 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 14:30:59 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 14:30:59 QUEUE: vdl.0 (thread) response core/cache.get
31.08 14:30:59 TIME: core/cache.get : 1.45 ms
31.08 14:30:59 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 14:30:59 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 14:30:59 TIME: core/user.loginPost : 0.17 ms
31.08 14:30:59 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 14:30:59 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 14:30:59 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => not, _type => vdl/cache.battle.find }
31.08 14:30:59 TIME: vdl/cache.battle.find : 2.42 ms
31.08 14:30:59 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
31.08 14:30:59 DB: SELECT nextval('Battle_id_seq') AS id
31.08 14:30:59 TRACE: vdl/cache.battle.create : Invalid field access : id
31.08 14:30:59 TRACE: vdl/cache.battle.create : 
Called from modules/VDLCache.hx line 175
Called from modules/VDLCache.hx line 92
Called from modules/VDLCache.hx line 66
Called from modules/VDLCache.hx line 55
Called from snipe/cache/CacheServer.hx line 487
31.08 14:30:59 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => _requestException, _type => vdl/cache.battle.create }
31.08 14:31:06 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 14:31:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 14:31:06 TIME: core/cache.update : 0.19 ms
31.08 14:31:07 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 14:31:21 TIMER: Clans cache...
31.08 14:31:21 TIMER: Clans cache: 0ms
31.08 14:31:21 TIMER: Clans cache...
31.08 14:31:21 TIMER: Clans cache: 0ms
31.08 14:31:21 TIMER: Clans cache...
31.08 14:31:21 TIMER: Clans cache: 0ms
31.08 14:31:21 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
31.08 14:31:21 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
31.08 14:31:21 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
31.08 14:31:21 STATS: cache [user], database [240 calls, 1 reads, 1 writes]
31.08 14:31:21 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
31.08 14:31:21 STATS: cache manager [1], get [2 calls, total 0 sec spent, avg 2.47 ms]
31.08 14:31:21 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.14 ms]
31.08 14:31:21 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
31.08 14:31:21 TIME: core/cache.update : 0.38 ms
31.08 14:31:21 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
31.08 14:31:21 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
31.08 14:31:21 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
31.08 14:31:21 STATS: cache [questdata], database [240 calls, 1 reads, 0 writes]
31.08 14:31:21 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
31.08 14:31:21 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 14:31:21 TIME: core/cache.update : 0.27 ms
31.08 14:31:21 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
31.08 14:31:21 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
31.08 14:31:21 TIME: core/user.logoutPost : 0.08 ms
31.08 14:31:21 TIMER: Clans cache...
31.08 14:31:21 TIMER: Clans cache: 0ms
31.08 14:31:21 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 14:31:21 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
31.08 14:34:31 BLOCKREMOVE: user 2 removed
31.08 14:34:31 BLOCKREMOVE: questdata 2 removed
31.08 14:36:09 TIMER: Starting timer...
31.08 14:36:09 TIMER: Timer running...
31.08 14:36:09 DB: SELECT * FROM GameVars
31.08 14:36:09 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 14:36:09 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 14:36:09 DB: SELECT * FROM Shops WHERE ID = 1
31.08 14:36:09 TEMP: load ./tmp/quest_daily_ids
31.08 14:36:09 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 14:36:09 TEMP: save ./tmp/quest_daily_ids
31.08 14:36:09 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 14:36:09 QUEUE: vdl.0 (thread) response server.login
31.08 14:36:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 14:36:09 DB: SELECT * FROM LocalizationStrings
31.08 14:36:09 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:36:09 TIME: core/server.query : 5.6 ms
31.08 14:36:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 14:36:09 DB: SELECT * FROM GameVars
31.08 14:36:09 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:36:09 TIME: core/server.query : 0.53 ms
31.08 14:36:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 14:36:09 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 14:36:09 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:36:09 TIME: core/server.query : 0.62 ms
31.08 14:36:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 14:36:09 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 14:36:09 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:36:09 TIME: core/server.query : 0.41 ms
31.08 14:36:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 14:36:09 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 14:36:09 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:36:09 TIME: core/server.query : 0.55 ms
31.08 14:36:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 14:36:09 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 14:36:09 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:36:09 TIME: core/server.query : 0.92 ms
31.08 14:36:09 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 14:36:09 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 14:36:09 TIME: core/quest.getDaily : 0.02 ms
31.08 14:36:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 14:36:09 DB: SELECT * FROM UserAttributeTypes
31.08 14:36:09 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:36:09 TIME: core/server.query : 0.33 ms
31.08 14:36:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 14:36:09 DB: SELECT * FROM UserVariableTypes
31.08 14:36:09 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:36:09 TIME: core/server.query : 0.43 ms
31.08 14:36:09 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 14:36:09 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 14:36:09 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:36:09 TIME: core/server.query : 1.54 ms
31.08 14:36:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 14:36:09 DB: SELECT * FROM ItemGroups
31.08 14:36:09 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:36:09 TIME: core/server.query : 0.84 ms
31.08 14:36:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 14:36:09 DB: SELECT * FROM Bundles ORDER BY ID
31.08 14:36:09 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:36:09 TIME: core/server.query : 0.71 ms
31.08 14:36:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 14:36:09 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 14:36:09 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:36:09 TIME: core/server.query : 0.42 ms
31.08 14:36:09 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 14:36:09 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 14:36:09 TIME: core/shop.getList : 0.02 ms
31.08 14:36:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 14:36:09 DB: SELECT * FROM EffectAttributeTypes
31.08 14:36:09 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:36:09 TIME: core/server.query : 0.47 ms
31.08 14:36:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 14:36:09 DB: SELECT * FROM Effects
31.08 14:36:09 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:36:09 TIME: core/server.query : 0.34 ms
31.08 14:36:09 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 14:36:09 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 14:36:09 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:36:09 TIME: core/server.query : 0.75 ms
31.08 14:36:09 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 14:36:09 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 14:36:09 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:36:09 TIME: core/server.query : 0.52 ms
31.08 14:36:09 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 14:36:09 DB: SELECT * FROM Badges
31.08 14:36:09 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:36:09 TIME: core/server.query : 0.32 ms
31.08 14:36:09 TIMER: Clans cache...
31.08 14:36:09 TIMER: Clans cache: 0ms
31.08 14:36:09 TIMER: Clans cache...
31.08 14:36:09 TIMER: Clans cache: 0ms
31.08 14:38:41 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 14:38:41 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 14:38:41 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:38:41 TIME: core/server.query : 1.85 ms
31.08 14:38:41 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 14:38:41 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 14:38:41 TIME: core/user.isOnlineID : 0.06 ms
31.08 14:38:41 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 14:38:41 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 14:38:41 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
31.08 14:38:41 STATS: cache [user], database [153 calls, 0 reads, 0 writes]
31.08 14:38:41 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
31.08 14:38:41 READDB: SELECT * FROM Users WHERE ID = 2
31.08 14:38:41 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 2.57 ms]
31.08 14:38:41 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
31.08 14:38:41 QUEUE: vdl.0 (thread) response core/cache.get
31.08 14:38:41 TIME: core/cache.get : 2.7 ms
31.08 14:38:41 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 14:38:41 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 14:38:41 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
31.08 14:38:41 STATS: cache [questdata], database [153 calls, 0 reads, 0 writes]
31.08 14:38:41 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
31.08 14:38:41 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 14:38:41 QUEUE: vdl.0 (thread) response core/cache.get
31.08 14:38:41 TIME: core/cache.get : 1 ms
31.08 14:38:41 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 14:38:41 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 14:38:41 TIME: core/user.loginPost : 0.08 ms
31.08 14:38:41 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 14:38:41 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 14:38:41 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => not, _type => vdl/cache.battle.find }
31.08 14:38:41 TIME: vdl/cache.battle.find : 1.14 ms
31.08 14:38:41 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
31.08 14:38:41 DB: SELECT nextval('Battle_id_seq') AS id
31.08 14:38:41 READDB: SELECT ID FROM Battle WHERE ID = 6
31.08 14:38:41 READDB: INSERT INTO Battle (ID) VALUES (6)
31.08 14:38:41 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 14:38:41 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
31.08 14:38:41 STATS: cache [battle], database [153 calls, 0 reads, 0 writes]
31.08 14:38:41 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
31.08 14:38:41 READDB: SELECT * FROM Battle WHERE ID = 6
31.08 14:38:41 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 0.61 ms]
31.08 14:38:41 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
31.08 14:38:41 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create }
31.08 14:38:41 TIME: vdl/cache.battle.create : 57.78 ms
31.08 14:38:49 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 14:38:49 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 14:38:49 TIME: core/cache.update : 0.18 ms
31.08 14:38:50 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 14:39:09 TIMER: Clans cache...
31.08 14:39:09 TIMER: Clans cache: 0ms
31.08 14:39:09 TIMER: Clans cache...
31.08 14:39:09 TIMER: Clans cache: 0ms
31.08 14:40:43 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
31.08 14:40:43 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
31.08 14:40:43 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
31.08 14:40:43 STATS: cache [user], database [275 calls, 1 reads, 1 writes]
31.08 14:40:43 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
31.08 14:40:43 STATS: cache manager [1], get [2 calls, total 0 sec spent, avg 1.76 ms]
31.08 14:40:43 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.16 ms]
31.08 14:40:43 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
31.08 14:40:43 TIME: core/cache.update : 0.53 ms
31.08 14:40:43 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
31.08 14:40:43 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
31.08 14:40:43 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
31.08 14:40:43 STATS: cache [questdata], database [275 calls, 1 reads, 0 writes]
31.08 14:40:43 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
31.08 14:40:43 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 14:40:43 TIME: core/cache.update : 0.49 ms
31.08 14:40:43 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
31.08 14:40:43 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
31.08 14:40:43 TIME: core/user.logoutPost : 0.11 ms
31.08 14:40:43 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 14:40:43 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
31.08 14:40:54 BLOCKREMOVE: user 2 removed
31.08 14:40:54 BLOCKREMOVE: questdata 2 removed
31.08 14:41:09 TIMER: Clans cache...
31.08 14:41:09 TIMER: Clans cache: 0ms
31.08 14:42:10 TIMER: Clans cache...
31.08 14:42:10 TIMER: Clans cache: 0ms
31.08 14:42:10 TIMER: Clans cache...
31.08 14:42:10 TIMER: Clans cache: 0ms
31.08 14:42:10 TIMER: Clans cache...
31.08 14:42:10 TIMER: Clans cache: 0ms
31.08 14:59:39 TIMER: Starting timer...
31.08 14:59:39 TIMER: Timer running...
31.08 14:59:39 DB: SELECT * FROM GameVars
31.08 14:59:39 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 14:59:39 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 14:59:39 DB: SELECT * FROM Shops WHERE ID = 1
31.08 14:59:39 TEMP: load ./tmp/quest_daily_ids
31.08 14:59:39 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 14:59:39 TEMP: save ./tmp/quest_daily_ids
31.08 14:59:39 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 14:59:39 QUEUE: vdl.0 (thread) response server.login
31.08 14:59:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 14:59:39 DB: SELECT * FROM LocalizationStrings
31.08 14:59:39 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:59:39 TIME: core/server.query : 5.38 ms
31.08 14:59:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 14:59:39 DB: SELECT * FROM GameVars
31.08 14:59:39 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:59:39 TIME: core/server.query : 0.51 ms
31.08 14:59:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 14:59:39 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 14:59:39 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:59:39 TIME: core/server.query : 0.65 ms
31.08 14:59:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 14:59:39 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 14:59:39 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:59:39 TIME: core/server.query : 0.5 ms
31.08 14:59:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 14:59:39 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 14:59:39 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:59:39 TIME: core/server.query : 0.56 ms
31.08 14:59:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 14:59:39 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 14:59:39 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:59:39 TIME: core/server.query : 1.09 ms
31.08 14:59:39 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 14:59:39 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 14:59:39 TIME: core/quest.getDaily : 0.02 ms
31.08 14:59:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 14:59:39 DB: SELECT * FROM UserAttributeTypes
31.08 14:59:39 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:59:39 TIME: core/server.query : 0.4 ms
31.08 14:59:39 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 14:59:39 DB: SELECT * FROM UserVariableTypes
31.08 14:59:39 QUEUE: vdl.0 (thread) response core/server.query
31.08 14:59:39 TIME: core/server.query : 0.58 ms
31.08 14:59:39 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 14:59:39 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.T