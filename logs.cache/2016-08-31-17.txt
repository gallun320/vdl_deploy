31.08 17:00:17 TIMER: Starting timer...
31.08 17:00:17 TIMER: Timer running...
31.08 17:00:17 DB: SELECT * FROM GameVars
31.08 17:00:17 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 17:00:17 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 17:00:17 DB: SELECT * FROM Shops WHERE ID = 1
31.08 17:00:17 TEMP: load ./tmp/quest_daily_ids
31.08 17:00:17 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 17:00:17 TEMP: save ./tmp/quest_daily_ids
31.08 17:00:18 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 17:00:18 QUEUE: vdl.0 (thread) response server.login
31.08 17:00:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 17:00:18 DB: SELECT * FROM LocalizationStrings
31.08 17:00:18 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:00:18 TIME: core/server.query : 14.06 ms
31.08 17:00:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 17:00:18 DB: SELECT * FROM GameVars
31.08 17:00:18 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:00:18 TIME: core/server.query : 0.9 ms
31.08 17:00:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 17:00:18 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 17:00:18 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:00:18 TIME: core/server.query : 1.08 ms
31.08 17:00:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 17:00:18 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 17:00:18 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:00:18 TIME: core/server.query : 0.69 ms
31.08 17:00:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 17:00:18 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 17:00:18 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:00:18 TIME: core/server.query : 1.55 ms
31.08 17:00:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 17:00:18 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 17:00:18 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:00:18 TIME: core/server.query : 1.57 ms
31.08 17:00:18 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 17:00:18 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 17:00:18 TIME: core/quest.getDaily : 0.06 ms
31.08 17:00:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 17:00:18 DB: SELECT * FROM UserAttributeTypes
31.08 17:00:18 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:00:18 TIME: core/server.query : 0.67 ms
31.08 17:00:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 17:00:18 DB: SELECT * FROM UserVariableTypes
31.08 17:00:18 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:00:18 TIME: core/server.query : 0.79 ms
31.08 17:00:18 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 17:00:18 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 17:00:18 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:00:18 TIME: core/server.query : 1.78 ms
31.08 17:00:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 17:00:18 DB: SELECT * FROM ItemGroups
31.08 17:00:18 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:00:18 TIME: core/server.query : 0.56 ms
31.08 17:00:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 17:00:18 DB: SELECT * FROM Bundles ORDER BY ID
31.08 17:00:18 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:00:18 TIME: core/server.query : 0.88 ms
31.08 17:00:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 17:00:18 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 17:00:18 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:00:18 TIME: core/server.query : 0.62 ms
31.08 17:00:18 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 17:00:18 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 17:00:18 TIME: core/shop.getList : 0.03 ms
31.08 17:00:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 17:00:18 DB: SELECT * FROM EffectAttributeTypes
31.08 17:00:18 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:00:18 TIME: core/server.query : 0.7 ms
31.08 17:00:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 17:00:18 DB: SELECT * FROM Effects
31.08 17:00:18 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:00:18 TIME: core/server.query : 0.61 ms
31.08 17:00:18 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 17:00:18 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 17:00:18 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:00:18 TIME: core/server.query : 0.96 ms
31.08 17:00:18 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 17:00:18 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 17:00:18 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:00:18 TIME: core/server.query : 0.84 ms
31.08 17:00:18 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 17:00:18 DB: SELECT * FROM Badges
31.08 17:00:18 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:00:18 TIME: core/server.query : 0.49 ms
31.08 17:00:18 TIMER: Clans cache...
31.08 17:00:18 TIMER: Clans cache: 0ms
31.08 17:00:18 TIMER: Clans cache...
31.08 17:00:18 TIMER: Clans cache: 0ms
31.08 17:03:06 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 17:03:06 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 17:03:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:03:06 TIME: core/server.query : 2.66 ms
31.08 17:03:06 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 17:03:06 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 17:03:06 TIME: core/user.isOnlineID : 0.13 ms
31.08 17:03:06 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 17:03:06 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 17:03:06 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
31.08 17:03:06 STATS: cache [user], database [169 calls, 0 reads, 0 writes]
31.08 17:03:06 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
31.08 17:03:06 READDB: SELECT * FROM Users WHERE ID = 2
31.08 17:03:06 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.11 ms]
31.08 17:03:06 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
31.08 17:03:06 QUEUE: vdl.0 (thread) response core/cache.get
31.08 17:03:06 TIME: core/cache.get : 4.34 ms
31.08 17:03:06 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 17:03:06 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 17:03:06 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
31.08 17:03:06 STATS: cache [questdata], database [169 calls, 0 reads, 0 writes]
31.08 17:03:06 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
31.08 17:03:06 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 17:03:06 QUEUE: vdl.0 (thread) response core/cache.get
31.08 17:03:06 TIME: core/cache.get : 1.75 ms
31.08 17:03:06 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
31.08 17:03:06 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 17:03:06 TIME: core/user.loginPost : 0.09 ms
31.08 17:03:06 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 17:03:06 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 17:03:06 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true
31.08 17:03:06 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, errorCode => ok, _type => vdl/cache.battle.find }
31.08 17:03:06 TIME: vdl/cache.battle.find : 3.37 ms
31.08 17:03:13 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 17:03:13 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 17:03:13 TIME: core/cache.update : 0.17 ms
31.08 17:03:14 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 17:05:23 TIMER: Starting timer...
31.08 17:05:23 TIMER: Timer running...
31.08 17:05:23 DB: SELECT * FROM GameVars
31.08 17:05:23 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 17:05:23 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 17:05:23 DB: SELECT * FROM Shops WHERE ID = 1
31.08 17:05:23 TEMP: load ./tmp/quest_daily_ids
31.08 17:05:23 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 17:05:23 TEMP: save ./tmp/quest_daily_ids
31.08 17:05:23 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 17:05:23 QUEUE: vdl.0 (thread) response server.login
31.08 17:05:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 17:05:23 DB: SELECT * FROM LocalizationStrings
31.08 17:05:23 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:05:23 TIME: core/server.query : 7.04 ms
31.08 17:05:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 17:05:23 DB: SELECT * FROM GameVars
31.08 17:05:23 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:05:23 TIME: core/server.query : 0.56 ms
31.08 17:05:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 17:05:23 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 17:05:23 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:05:23 TIME: core/server.query : 0.67 ms
31.08 17:05:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 17:05:23 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 17:05:23 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:05:23 TIME: core/server.query : 0.35 ms
31.08 17:05:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 17:05:23 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 17:05:23 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:05:23 TIME: core/server.query : 0.85 ms
31.08 17:05:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 17:05:23 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 17:05:23 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:05:23 TIME: core/server.query : 0.87 ms
31.08 17:05:23 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 17:05:23 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 17:05:23 TIME: core/quest.getDaily : 0.03 ms
31.08 17:05:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 17:05:23 DB: SELECT * FROM UserAttributeTypes
31.08 17:05:23 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:05:23 TIME: core/server.query : 0.32 ms
31.08 17:05:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 17:05:23 DB: SELECT * FROM UserVariableTypes
31.08 17:05:23 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:05:23 TIME: core/server.query : 0.3 ms
31.08 17:05:23 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 17:05:23 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.31.08 17:07:14 TIMER: Starting timer...
31.08 17:07:14 TIMER: Timer running...
31.08 17:07:14 DB: SELECT * FROM GameVars
31.08 17:07:14 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 17:07:14 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 17:07:14 DB: SELECT * FROM Shops WHERE ID = 1
31.08 17:07:14 TEMP: load ./tmp/quest_daily_ids
31.08 17:07:14 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 17:07:14 TEMP: save ./tmp/quest_daily_ids
31.08 17:07:14 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 17:07:14 QUEUE: vdl.0 (thread) response server.login
31.08 17:07:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 17:07:14 DB: SELECT * FROM LocalizationStrings
31.08 17:07:14 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:07:14 TIME: core/server.query : 5.86 ms
31.08 17:07:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 17:07:14 DB: SELECT * FROM GameVars
31.08 17:07:14 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:07:14 TIME: core/server.query : 0.53 ms
31.08 17:07:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 17:07:14 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 17:07:14 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:07:14 TIME: core/server.query : 0.71 ms
31.08 17:07:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 17:07:14 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 17:07:14 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:07:14 TIME: core/server.query : 0.4 ms
31.08 17:07:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 17:07:14 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 17:07:14 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:07:14 TIME: core/server.query : 0.59 ms
31.08 17:07:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 17:07:14 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 17:07:14 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:07:14 TIME: core/server.query : 0.69 ms
31.08 17:07:14 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 17:07:14 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 17:07:14 TIME: core/quest.getDaily : 0.02 ms
31.08 17:07:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 17:07:14 DB: SELECT * FROM UserAttributeTypes
31.08 17:07:14 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:07:14 TIME: core/server.query : 0.43 ms
31.08 17:07:14 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 17:07:14 DB: SELECT * FROM UserVariableTypes
31.08 17:07:14 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:07:14 TIME: core/server.query : 0.31 ms
31.08 17:07:14 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 17:07:14 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.31.08 17:11:10 TIMER: Starting timer...
31.08 17:11:10 TIMER: Timer running...
31.08 17:11:10 DB: SELECT * FROM GameVars
31.08 17:11:10 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 17:11:10 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 17:11:10 DB: SELECT * FROM Shops WHERE ID = 1
31.08 17:11:10 TEMP: load ./tmp/quest_daily_ids
31.08 17:11:10 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 17:11:10 TEMP: save ./tmp/quest_daily_ids
31.08 17:11:10 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 17:11:10 QUEUE: vdl.0 (thread) response server.login
31.08 17:11:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 17:11:10 DB: SELECT * FROM LocalizationStrings
31.08 17:11:10 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:11:10 TIME: core/server.query : 6.44 ms
31.08 17:11:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 17:11:10 DB: SELECT * FROM GameVars
31.08 17:11:10 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:11:10 TIME: core/server.query : 0.87 ms
31.08 17:11:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 17:11:10 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 17:11:10 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:11:10 TIME: core/server.query : 0.76 ms
31.08 17:11:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 17:11:10 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 17:11:10 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:11:10 TIME: core/server.query : 0.49 ms
31.08 17:11:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 17:11:10 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 17:11:10 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:11:10 TIME: core/server.query : 0.69 ms
31.08 17:11:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 17:11:10 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 17:11:10 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:11:10 TIME: core/server.query : 1.06 ms
31.08 17:11:10 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 17:11:10 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 17:11:10 TIME: core/quest.getDaily : 0.02 ms
31.08 17:11:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 17:11:10 DB: SELECT * FROM UserAttributeTypes
31.08 17:11:10 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:11:10 TIME: core/server.query : 0.43 ms
31.08 17:11:10 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 17:11:10 DB: SELECT * FROM UserVariableTypes
31.08 17:11:10 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:11:10 TIME: core/server.query : 0.54 ms
31.08 17:11:10 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 17:11:10 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i31.08 17:31:07 TIMER: Starting timer...
31.08 17:31:07 TIMER: Timer running...
31.08 17:31:07 DB: SELECT * FROM GameVars
31.08 17:31:07 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 17:31:07 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 17:31:07 DB: SELECT * FROM Shops WHERE ID = 1
31.08 17:31:07 TEMP: load ./tmp/quest_daily_ids
31.08 17:31:07 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 17:31:07 TEMP: save ./tmp/quest_daily_ids
31.08 17:31:07 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 17:31:07 QUEUE: vdl.0 (thread) response server.login
31.08 17:31:07 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 17:31:07 DB: SELECT * FROM LocalizationStrings
31.08 17:31:08 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:31:08 TIME: core/server.query : 7.36 ms
31.08 17:31:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 17:31:08 DB: SELECT * FROM GameVars
31.08 17:31:08 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:31:08 TIME: core/server.query : 1.01 ms
31.08 17:31:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 17:31:08 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 17:31:08 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:31:08 TIME: core/server.query : 0.74 ms
31.08 17:31:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 17:31:08 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 17:31:08 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:31:08 TIME: core/server.query : 0.41 ms
31.08 17:31:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 17:31:08 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 17:31:08 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:31:08 TIME: core/server.query : 0.55 ms
31.08 17:31:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 17:31:08 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 17:31:08 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:31:08 TIME: core/server.query : 1.07 ms
31.08 17:31:08 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 17:31:08 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 17:31:08 TIME: core/quest.getDaily : 0.02 ms
31.08 17:31:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 17:31:08 DB: SELECT * FROM UserAttributeTypes
31.08 17:31:08 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:31:08 TIME: core/server.query : 0.34 ms
31.08 17:31:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 17:31:08 DB: SELECT * FROM UserVariableTypes
31.08 17:31:08 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:31:08 TIME: core/server.query : 0.41 ms
31.08 17:31:08 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 17:31:08 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 17:31:08 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:31:08 TIME: core/server.query : 1.06 ms
31.08 17:31:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 17:31:08 DB: SELECT * FROM ItemGroups
31.08 17:31:08 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:31:08 TIME: core/server.query : 0.37 ms
31.08 17:31:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 17:31:08 DB: SELECT * FROM Bundles ORDER BY ID
31.08 17:31:08 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:31:08 TIME: core/server.query : 0.56 ms
31.08 17:31:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 17:31:08 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 17:31:08 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:31:08 TIME: core/server.query : 0.57 ms
31.08 17:31:08 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 17:31:08 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 17:31:08 TIME: core/shop.getList : 0.02 ms
31.08 17:31:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 17:31:08 DB: SELECT * FROM EffectAttributeTypes
31.08 17:31:08 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:31:08 TIME: core/server.query : 0.34 ms
31.08 17:31:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 17:31:08 DB: SELECT * FROM Effects
31.08 17:31:08 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:31:08 TIME: core/server.query : 0.5 ms
31.08 17:31:08 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 17:31:08 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 17:31:08 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:31:08 TIME: core/server.query : 0.69 ms
31.08 17:31:08 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 17:31:08 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 17:31:08 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:31:08 TIME: core/server.query : 0.68 ms
31.08 17:31:08 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 17:31:08 DB: SELECT * FROM Badges
31.08 17:31:08 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:31:08 TIME: core/server.query : 0.35 ms
31.08 17:31:44 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 17:31:44 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 17:31:44 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:31:44 TIME: core/server.query : 1.84 ms
31.08 17:31:44 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 17:31:44 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 17:31:44 TIME: core/user.isOnlineID : 0.04 ms
31.08 17:31:44 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 17:31:44 READDB: SELECT * FROM Users WHERE ID = 2
31.08 17:31:44 QUEUE: vdl.0 (thread) response core/cache.get
31.08 17:31:44 TIME: core/cache.get : 1.95 ms
31.08 17:31:44 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 17:31:44 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 17:31:44 QUEUE: vdl.0 (thread) response core/cache.get
31.08 17:31:44 TIME: core/cache.get : 0.6 ms
31.08 17:31:44 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 17:31:44 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 17:31:44 TIME: core/user.loginPost : 0.04 ms
31.08 17:31:44 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 17:31:44 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 17:31:44 TRACE: vdl/cache.battle.find : Invalid field access : count
31.08 17:31:44 TRACE: vdl/cache.battle.find : 
Called from modules/VDLCache.hx line 89
Called from modules/VDLCache.hx line 53
Called from snipe/cache/CacheServer.hx line 487
31.08 17:31:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => _requestException, _type => vdl/cache.battle.find }
31.08 17:31:53 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 17:31:53 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 17:31:53 TIME: core/cache.update : 0.17 ms
31.08 17:31:54 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 17:32:01 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
31.08 17:32:01 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
31.08 17:32:01 TIME: core/cache.update : 0.25 ms
31.08 17:32:01 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
31.08 17:32:01 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 17:32:01 TIME: core/cache.update : 0.15 ms
31.08 17:32:01 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
31.08 17:32:01 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
31.08 17:32:01 TIME: core/user.logoutPost : 0.17 ms
31.08 17:32:02 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472567681,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 17:32:02 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
31.08 17:32:08 TIMER: Clans cache...
31.08 17:32:08 TIMER: Clans cache: 0ms
31.08 17:32:12 BLOCKREMOVE: user 2 removed
31.08 17:32:12 BLOCKREMOVE: questdata 2 removed
31.08 17:34:23 TIMER: Starting timer...
31.08 17:34:23 TIMER: Timer running...
31.08 17:34:23 DB: SELECT * FROM GameVars
31.08 17:34:23 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 17:34:23 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 17:34:23 DB: SELECT * FROM Shops WHERE ID = 1
31.08 17:34:23 TEMP: load ./tmp/quest_daily_ids
31.08 17:34:23 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 17:34:23 TEMP: save ./tmp/quest_daily_ids
31.08 17:34:23 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 17:34:23 QUEUE: vdl.0 (thread) response server.login
31.08 17:34:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 17:34:23 DB: SELECT * FROM LocalizationStrings
31.08 17:34:23 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:34:23 TIME: core/server.query : 8.2 ms
31.08 17:34:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 17:34:23 DB: SELECT * FROM GameVars
31.08 17:34:23 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:34:23 TIME: core/server.query : 0.56 ms
31.08 17:34:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 17:34:23 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 17:34:23 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:34:23 TIME: core/server.query : 0.76 ms
31.08 17:34:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 17:34:23 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 17:34:23 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:34:23 TIME: core/server.query : 0.42 ms
31.08 17:34:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 17:34:23 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 17:34:23 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:34:23 TIME: core/server.query : 0.57 ms
31.08 17:34:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 17:34:23 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 17:34:23 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:34:23 TIME: core/server.query : 0.9 ms
31.08 17:34:23 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 17:34:23 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 17:34:23 TIME: core/quest.getDaily : 0.02 ms
31.08 17:34:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 17:34:23 DB: SELECT * FROM UserAttributeTypes
31.08 17:34:23 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:34:23 TIME: core/server.query : 0.34 ms
31.08 17:34:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 17:34:23 DB: SELECT * FROM UserVariableTypes
31.08 17:34:23 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:34:23 TIME: core/server.query : 0.36 ms
31.08 17:34:23 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 17:34:23 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 17:34:23 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:34:23 TIME: core/server.query : 1.15 ms
31.08 17:34:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 17:34:23 DB: SELECT * FROM ItemGroups
31.08 17:34:23 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:34:23 TIME: core/server.query : 0.36 ms
31.08 17:34:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 17:34:23 DB: SELECT * FROM Bundles ORDER BY ID
31.08 17:34:23 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:34:23 TIME: core/server.query : 0.53 ms
31.08 17:34:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 17:34:23 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 17:34:23 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:34:23 TIME: core/server.query : 0.48 ms
31.08 17:34:23 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 17:34:23 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 17:34:23 TIME: core/shop.getList : 0.02 ms
31.08 17:34:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 17:34:23 DB: SELECT * FROM EffectAttributeTypes
31.08 17:34:23 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:34:23 TIME: core/server.query : 0.41 ms
31.08 17:34:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 17:34:23 DB: SELECT * FROM Effects
31.08 17:34:23 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:34:23 TIME: core/server.query : 0.42 ms
31.08 17:34:23 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 17:34:23 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 17:34:23 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:34:23 TIME: core/server.query : 0.56 ms
31.08 17:34:23 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 17:34:23 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 17:34:23 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:34:23 TIME: core/server.query : 0.74 ms
31.08 17:34:23 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 17:34:23 DB: SELECT * FROM Badges
31.08 17:34:23 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:34:23 TIME: core/server.query : 0.28 ms
31.08 17:34:23 TIMER: Clans cache...
31.08 17:34:23 TIMER: Clans cache: 0ms
31.08 17:34:23 TIMER: Clans cache...
31.08 17:34:23 TIMER: Clans cache: 0ms
31.08 17:34:23 TIMER: Clans cache...
31.08 17:34:23 TIMER: Clans cache: 0ms
31.08 17:37:36 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 17:37:36 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 17:37:36 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:37:36 TIME: core/server.query : 2.38 ms
31.08 17:37:36 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 17:37:36 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 17:37:36 TIME: core/user.isOnlineID : 0.13 ms
31.08 17:37:36 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 17:37:36 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 17:37:36 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
31.08 17:37:36 STATS: cache [user], database [193 calls, 0 reads, 0 writes]
31.08 17:37:36 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
31.08 17:37:36 READDB: SELECT * FROM Users WHERE ID = 2
31.08 17:37:36 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.27 ms]
31.08 17:37:36 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
31.08 17:37:36 QUEUE: vdl.0 (thread) response core/cache.get
31.08 17:37:36 TIME: core/cache.get : 4.49 ms
31.08 17:37:36 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 17:37:36 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 17:37:36 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
31.08 17:37:36 STATS: cache [questdata], database [193 calls, 0 reads, 0 writes]
31.08 17:37:36 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
31.08 17:37:36 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 17:37:36 QUEUE: vdl.0 (thread) response core/cache.get
31.08 17:37:36 TIME: core/cache.get : 1.34 ms
31.08 17:37:36 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 17:37:36 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 17:37:36 TIME: core/user.loginPost : 0.12 ms
31.08 17:37:36 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 17:37:36 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 17:37:36 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { errorCode => not, _type => vdl/cache.battle.find }
31.08 17:37:36 TIME: vdl/cache.battle.find : 1.68 ms
31.08 17:37:36 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 2, _type => vdl/cache.battle.create }
31.08 17:37:36 DB: SELECT nextval('Battle_id_seq') AS id
31.08 17:37:36 READDB: SELECT ID FROM Battle WHERE ID = 4
31.08 17:37:36 READDB: INSERT INTO Battle (ID) VALUES (4)
31.08 17:37:36 STATS: cache [battle], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 17:37:36 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
31.08 17:37:36 STATS: cache [battle], database [194 calls, 0 reads, 0 writes]
31.08 17:37:36 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
31.08 17:37:36 READDB: SELECT * FROM Battle WHERE ID = 4
31.08 17:37:36 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 1.44 ms]
31.08 17:37:36 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
31.08 17:37:36 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
31.08 17:37:36 TIME: vdl/cache.battle.create : 80.41 ms
31.08 17:37:42 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'2', finished = E'false', firstid = E'2', params = E'{}', avaliable = E'true' WHERE ID = 4
31.08 17:37:43 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1472654256 } }}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 17:37:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 17:37:44 TIME: core/cache.update : 0.19 ms
31.08 17:37:44 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 17:38:23 TIMER: Clans cache...
31.08 17:38:23 TIMER: Clans cache: 0ms
31.08 17:38:23 TIMER: Clans cache...
31.08 17:38:23 TIMER: Clans cache: 0ms
31.08 17:39:47 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
31.08 17:39:47 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
31.08 17:39:47 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2, networkid => , isbanned => false, id => 3 }}, errorCode => ok, _type => core/server.query }
31.08 17:39:47 TIME: core/server.query : 2.7 ms
31.08 17:39:47 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
31.08 17:39:47 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
31.08 17:39:47 TIME: core/user.isOnlineID : 0.08 ms
31.08 17:39:47 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
31.08 17:39:47 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
31.08 17:39:47 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
31.08 17:39:47 STATS: cache [user], database [324 calls, 1 reads, 1 writes]
31.08 17:39:47 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
31.08 17:39:47 READDB: SELECT * FROM Users WHERE ID = 3
31.08 17:39:47 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.25 ms]
31.08 17:39:47 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.08 ms]
31.08 17:39:47 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test2, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:48:03.859813+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472651424, lastLoginDate => 244, lastLoadDate => 832 }, effects => { list => [] } }}, version => 0, id => 3 } }
31.08 17:39:47 TIME: core/cache.get : 1.56 ms
31.08 17:39:47 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
31.08 17:39:47 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
31.08 17:39:47 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
31.08 17:39:47 STATS: cache [questdata], database [324 calls, 1 reads, 0 writes]
31.08 17:39:47 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
31.08 17:39:47 READDB: SELECT * FROM UserQuests WHERE ID = 3
31.08 17:39:47 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 3 } }
31.08 17:39:47 TIME: core/cache.get : 0.95 ms
31.08 17:39:47 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
31.08 17:39:47 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 17:39:47 TIME: core/user.loginPost : 0.1 ms
31.08 17:39:47 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 17:39:47 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 17:39:47 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true
31.08 17:39:47 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {{ secondid => 0, params => {}, avaliable => true, firstid => 2, id => 4, turnid => 2, finished => false }}, errorCode => ok, _type => vdl/cache.battle.find }
31.08 17:39:47 TIME: vdl/cache.battle.find : 2.89 ms
31.08 17:39:54 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
31.08 17:39:54 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 17:39:54 TIME: core/cache.update : 0.21 ms
31.08 17:39:55 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 3
31.08 17:40:23 TIMER: Clans cache...
31.08 17:40:23 TIMER: Clans cache: 0ms
31.08 17:40:36 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
31.08 17:40:36 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
31.08 17:40:36 TIME: core/cache.update : 0.17 ms
31.08 17:40:36 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
31.08 17:40:36 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 17:40:36 TIME: core/cache.update : 0.19 ms
31.08 17:40:36 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
31.08 17:40:36 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
31.08 17:40:36 TIME: core/user.logoutPost : 0.14 ms
31.08 17:40:37 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 3
31.08 17:40:37 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
31.08 17:40:47 BLOCKREMOVE: user 3 removed
31.08 17:40:47 BLOCKREMOVE: questdata 3 removed
31.08 17:41:23 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
31.08 17:41:23 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
31.08 17:41:23 STATS: cache [user], segments [9 calls, 4 hits, 4 misses]
31.08 17:41:23 STATS: cache [user], database [420 calls, 2 reads, 3 writes]
31.08 17:41:23 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
31.08 17:41:23 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.89 ms]
31.08 17:41:23 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.1 ms]
31.08 17:41:23 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
31.08 17:41:23 TIME: core/cache.update : 0.53 ms
31.08 17:41:23 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
31.08 17:41:23 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
31.08 17:41:23 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
31.08 17:41:23 STATS: cache [questdata], database [420 calls, 2 reads, 1 writes]
31.08 17:41:23 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
31.08 17:41:23 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 17:41:23 TIME: core/cache.update : 0.32 ms
31.08 17:41:23 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
31.08 17:41:23 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
31.08 17:41:23 TIME: core/user.logoutPost : 0.1 ms
31.08 17:41:23 TIMER: Clans cache...
31.08 17:41:23 TIMER: Clans cache: 0ms
31.08 17:41:24 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 17:41:24 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
31.08 17:41:34 BLOCKREMOVE: user 2 removed
31.08 17:41:34 BLOCKREMOVE: questdata 2 removed
31.08 17:42:23 TIMER: Clans cache...
31.08 17:42:23 TIMER: Clans cache: 0ms
31.08 17:42:23 TIMER: Clans cache...
31.08 17:42:23 TIMER: Clans cache: 0ms
31.08 17:49:01 TIMER: Starting timer...
31.08 17:49:01 TIMER: Timer running...
31.08 17:49:01 DB: SELECT * FROM GameVars
31.08 17:49:01 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 17:49:01 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 17:49:01 DB: SELECT * FROM Shops WHERE ID = 1
31.08 17:49:01 TEMP: load ./tmp/quest_daily_ids
31.08 17:49:01 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 17:49:01 TEMP: save ./tmp/quest_daily_ids
31.08 17:49:01 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 17:49:01 QUEUE: vdl.0 (thread) response server.login
31.08 17:49:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 17:49:01 DB: SELECT * FROM LocalizationStrings
31.08 17:49:01 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:49:01 TIME: core/server.query : 5.71 ms
31.08 17:49:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 17:49:01 DB: SELECT * FROM GameVars
31.08 17:49:01 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:49:01 TIME: core/server.query : 0.81 ms
31.08 17:49:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 17:49:01 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 17:49:01 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:49:01 TIME: core/server.query : 0.75 ms
31.08 17:49:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 17:49:01 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 17:49:01 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:49:01 TIME: core/server.query : 0.5 ms
31.08 17:49:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 17:49:01 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 17:49:01 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:49:01 TIME: core/server.query : 0.51 ms
31.08 17:49:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 17:49:01 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 17:49:01 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:49:01 TIME: core/server.query : 0.85 ms
31.08 17:49:01 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 17:49:01 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 17:49:01 TIME: core/quest.getDaily : 0.02 ms
31.08 17:49:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 17:49:01 DB: SELECT * FROM UserAttributeTypes
31.08 17:49:01 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:49:01 TIME: core/server.query : 0.3 ms
31.08 17:49:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 17:49:01 DB: SELECT * FROM UserVariableTypes
31.08 17:49:01 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:49:01 TIME: core/server.query : 0.39 ms
31.08 17:49:01 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 17:49:01 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 17:49:01 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:49:01 TIME: core/server.query : 0.89 ms
31.08 17:49:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 17:49:01 DB: SELECT * FROM ItemGroups
31.08 17:49:01 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:49:01 TIME: core/server.query : 0.39 ms
31.08 17:49:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 17:49:01 DB: SELECT * FROM Bundles ORDER BY ID
31.08 17:49:01 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:49:01 TIME: core/server.query : 0.5 ms
31.08 17:49:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 17:49:01 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 17:49:01 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:49:01 TIME: core/server.query : 0.37 ms
31.08 17:49:01 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 17:49:01 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 17:49:01 TIME: core/shop.getList : 0.02 ms
31.08 17:49:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 17:49:01 DB: SELECT * FROM EffectAttributeTypes
31.08 17:49:01 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:49:01 TIME: core/server.query : 0.48 ms
31.08 17:49:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 17:49:01 DB: SELECT * FROM Effects
31.08 17:49:01 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:49:01 TIME: core/server.query : 0.35 ms
31.08 17:49:01 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 17:49:01 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 17:49:01 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:49:01 TIME: core/server.query : 0.54 ms
31.08 17:49:01 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 17:49:01 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 17:49:01 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:49:01 TIME: core/server.query : 0.83 ms
31.08 17:49:01 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 17:49:01 DB: SELECT * FROM Badges
31.08 17:49:01 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:49:01 TIME: core/server.query : 0.3 ms
31.08 17:49:41 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
31.08 17:49:41 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
31.08 17:49:41 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:49:41 TIME: core/server.query : 1.49 ms
31.08 17:49:41 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
31.08 17:49:41 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 17:49:41 TIME: core/user.isOnlineID : 0.03 ms
31.08 17:49:41 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
31.08 17:49:41 READDB: SELECT * FROM Users WHERE ID = 3
31.08 17:49:41 QUEUE: vdl.0 (thread) response core/cache.get
31.08 17:49:41 TIME: core/cache.get : 2.99 ms
31.08 17:49:41 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
31.08 17:49:41 READDB: SELECT * FROM UserQuests WHERE ID = 3
31.08 17:49:41 QUEUE: vdl.0 (thread) response core/cache.get
31.08 17:49:41 TIME: core/cache.get : 1.15 ms
31.08 17:49:41 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 17:49:41 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 17:49:41 TIME: core/user.loginPost : 0.06 ms
31.08 17:49:41 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 17:49:41 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 17:49:41 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true
31.08 17:49:41 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {{ secondid => 0, params => {}, avaliable => true, firstid => 2, id => 4, turnid => 2, finished => false }}, errorCode => ok, _type => vdl/cache.battle.find }
31.08 17:49:41 TIME: vdl/cache.battle.find : 2.16 ms
31.08 17:49:41 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle OFFSET floor(random()*N) LIMIT 1, _type => core/server.query }
31.08 17:49:41 DB: SELECT id FROM battle OFFSET floor(random()*N) LIMIT 1
31.08 17:49:41 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
31.08 17:49:41 TIME: core/server.query : 11.84 ms
31.08 17:49:46 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
31.08 17:49:46 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 17:49:46 TIME: core/cache.update : 0.18 ms
31.08 17:49:47 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 3
31.08 17:49:55 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 17:49:55 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 17:49:55 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
31.08 17:49:55 TIME: core/server.query : 1.2 ms
31.08 17:49:55 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 17:49:55 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
31.08 17:49:55 TIME: core/user.isOnlineID : 0.11 ms
31.08 17:49:55 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 17:49:55 READDB: SELECT * FROM Users WHERE ID = 2
31.08 17:49:55 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472654256, lastLoginDate => 244, lastLoadDate => 832 }, effects => { list => [] } }}, version => 0, id => 2 } }
31.08 17:49:55 TIME: core/cache.get : 1.7 ms
31.08 17:49:55 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 17:49:55 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 17:49:55 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
31.08 17:49:55 TIME: core/cache.get : 1.14 ms
31.08 17:49:55 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
31.08 17:49:55 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 17:49:55 TIME: core/user.loginPost : 0.12 ms
31.08 17:49:55 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 17:49:55 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 17:49:55 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true
31.08 17:49:55 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {{ secondid => 0, params => {}, avaliable => true, firstid => 2, id => 4, turnid => 2, finished => false }}, errorCode => ok, _type => vdl/cache.battle.find }
31.08 17:49:55 TIME: vdl/cache.battle.find : 1.77 ms
31.08 17:49:55 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle OFFSET floor(random()*N) LIMIT 1, _type => core/server.query }
31.08 17:49:55 DB: SELECT id FROM battle OFFSET floor(random()*N) LIMIT 1
31.08 17:49:55 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
31.08 17:49:55 TIME: core/server.query : 21.38 ms
31.08 17:50:01 TIMER: Clans cache...
31.08 17:50:01 TIMER: Clans cache: 0ms
31.08 17:50:01 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 17:50:01 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
31.08 17:50:01 STATS: cache [user], segments [6 calls, 1 hits, 4 misses]
31.08 17:50:01 STATS: cache [user], database [61 calls, 2 reads, 1 writes]
31.08 17:50:01 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
31.08 17:50:01 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.58 ms]
31.08 17:50:01 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.13 ms]
31.08 17:50:01 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 17:50:01 TIME: core/cache.update : 0.38 ms
31.08 17:50:02 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 17:50:18 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
31.08 17:50:18 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
31.08 17:50:18 TIME: core/cache.update : 0.1 ms
31.08 17:50:18 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
31.08 17:50:18 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
31.08 17:50:18 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
31.08 17:50:18 STATS: cache [questdata], database [77 calls, 2 reads, 0 writes]
31.08 17:50:18 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
31.08 17:50:18 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 17:50:18 TIME: core/cache.update : 0.15 ms
31.08 17:50:18 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
31.08 17:50:18 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
31.08 17:50:18 TIME: core/user.logoutPost : 0.06 ms
31.08 17:50:18 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 3
31.08 17:50:18 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
31.08 17:50:29 BLOCKREMOVE: user 3 removed
31.08 17:50:29 BLOCKREMOVE: questdata 3 removed
31.08 17:51:01 TIMER: Clans cache...
31.08 17:51:01 TIMER: Clans cache: 0ms
31.08 17:51:01 TIMER: Clans cache...
31.08 17:51:01 TIMER: Clans cache: 0ms
31.08 17:51:01 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
31.08 17:51:01 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
31.08 17:51:01 STATS: cache [user], segments [9 calls, 4 hits, 4 misses]
31.08 17:51:01 STATS: cache [user], database [240 calls, 2 reads, 3 writes]
31.08 17:51:01 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
31.08 17:51:01 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.58 ms]
31.08 17:51:01 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.15 ms]
31.08 17:51:01 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
31.08 17:51:01 TIME: core/cache.update : 0.6 ms
31.08 17:51:01 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
31.08 17:51:01 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
31.08 17:51:01 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
31.08 17:51:01 STATS: cache [questdata], database [240 calls, 2 reads, 1 writes]
31.08 17:51:01 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
31.08 17:51:01 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 17:51:01 TIME: core/cache.update : 0.36 ms
31.08 17:51:01 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
31.08 17:51:01 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
31.08 17:51:01 TIME: core/user.logoutPost : 0.15 ms
31.08 17:51:01 TIMER: Clans cache...
31.08 17:51:01 TIMER: Clans cache: 0ms
31.08 17:53:02 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 17:53:02 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
31.08 17:53:40 TIMER: Starting timer...
31.08 17:53:40 TIMER: Timer running...
31.08 17:53:40 DB: SELECT * FROM GameVars
31.08 17:53:40 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 17:53:40 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 17:53:40 DB: SELECT * FROM Shops WHERE ID = 1
31.08 17:53:40 TEMP: load ./tmp/quest_daily_ids
31.08 17:53:40 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 17:53:40 TEMP: save ./tmp/quest_daily_ids
31.08 17:53:40 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 17:53:40 QUEUE: vdl.0 (thread) response server.login
31.08 17:53:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 17:53:40 DB: SELECT * FROM LocalizationStrings
31.08 17:53:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:53:40 TIME: core/server.query : 7.01 ms
31.08 17:53:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 17:53:40 DB: SELECT * FROM GameVars
31.08 17:53:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:53:40 TIME: core/server.query : 0.53 ms
31.08 17:53:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 17:53:40 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 17:53:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:53:40 TIME: core/server.query : 0.86 ms
31.08 17:53:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 17:53:40 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 17:53:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:53:40 TIME: core/server.query : 0.75 ms
31.08 17:53:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 17:53:40 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 17:53:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:53:40 TIME: core/server.query : 0.7 ms
31.08 17:53:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 17:53:40 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 17:53:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:53:40 TIME: core/server.query : 4.88 ms
31.08 17:53:40 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 17:53:40 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 17:53:40 TIME: core/quest.getDaily : 0.03 ms
31.08 17:53:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 17:53:40 DB: SELECT * FROM UserAttributeTypes
31.08 17:53:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:53:40 TIME: core/server.query : 0.5 ms
31.08 17:53:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 17:53:40 DB: SELECT * FROM UserVariableTypes
31.08 17:53:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:53:40 TIME: core/server.query : 0.47 ms
31.08 17:53:40 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 17:53:40 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 17:53:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:53:40 TIME: core/server.query : 1.18 ms
31.08 17:53:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 17:53:40 DB: SELECT * FROM ItemGroups
31.08 17:53:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:53:40 TIME: core/server.query : 0.4 ms
31.08 17:53:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 17:53:40 DB: SELECT * FROM Bundles ORDER BY ID
31.08 17:53:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:53:40 TIME: core/server.query : 0.5 ms
31.08 17:53:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 17:53:40 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 17:53:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:53:40 TIME: core/server.query : 0.56 ms
31.08 17:53:40 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 17:53:40 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 17:53:40 TIME: core/shop.getList : 0.03 ms
31.08 17:53:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 17:53:40 DB: SELECT * FROM EffectAttributeTypes
31.08 17:53:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:53:40 TIME: core/server.query : 0.48 ms
31.08 17:53:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 17:53:40 DB: SELECT * FROM Effects
31.08 17:53:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:53:40 TIME: core/server.query : 0.45 ms
31.08 17:53:40 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 17:53:40 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 17:53:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:53:40 TIME: core/server.query : 0.64 ms
31.08 17:53:40 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 17:53:40 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 17:53:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:53:40 TIME: core/server.query : 0.57 ms
31.08 17:53:40 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 17:53:40 DB: SELECT * FROM Badges
31.08 17:53:40 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:53:40 TIME: core/server.query : 0.3 ms
31.08 17:53:40 TIMER: Clans cache...
31.08 17:53:40 TIMER: Clans cache: 0ms
31.08 17:53:40 TIMER: Clans cache...
31.08 17:53:40 TIMER: Clans cache: 0ms
31.08 17:53:40 TIMER: Clans cache...
31.08 17:53:40 TIMER: Clans cache: 0ms
31.08 17:57:06 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
31.08 17:57:06 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
31.08 17:57:06 QUEUE: vdl.0 (thread) response core/server.query
31.08 17:57:06 TIME: core/server.query : 2.61 ms
31.08 17:57:06 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
31.08 17:57:06 QUEUE: vdl.0 (thread) response core/user.isOnlineID
31.08 17:57:06 TIME: core/user.isOnlineID : 0.08 ms
31.08 17:57:06 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
31.08 17:57:06 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 17:57:06 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
31.08 17:57:06 STATS: cache [user], database [206 calls, 0 reads, 0 writes]
31.08 17:57:06 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
31.08 17:57:06 READDB: SELECT * FROM Users WHERE ID = 2
31.08 17:57:06 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 3.23 ms]
31.08 17:57:06 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
31.08 17:57:06 QUEUE: vdl.0 (thread) response core/cache.get
31.08 17:57:06 TIME: core/cache.get : 3.41 ms
31.08 17:57:06 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
31.08 17:57:06 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
31.08 17:57:06 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
31.08 17:57:06 STATS: cache [questdata], database [206 calls, 0 reads, 0 writes]
31.08 17:57:06 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
31.08 17:57:06 READDB: SELECT * FROM UserQuests WHERE ID = 2
31.08 17:57:06 QUEUE: vdl.0 (thread) response core/cache.get
31.08 17:57:06 TIME: core/cache.get : 1.44 ms
31.08 17:57:06 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
31.08 17:57:06 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 17:57:06 TIME: core/user.loginPost : 0.1 ms
31.08 17:57:06 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 17:57:06 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 17:57:06 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true
31.08 17:57:06 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {{ secondid => 0, params => {}, avaliable => true, firstid => 2, id => 4, turnid => 2, finished => false }}, errorCode => ok, _type => vdl/cache.battle.find }
31.08 17:57:06 TIME: vdl/cache.battle.find : 3.1 ms
31.08 17:57:15 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
31.08 17:57:15 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 17:57:15 TIME: core/cache.update : 0.17 ms
31.08 17:57:16 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 17:57:40 TIMER: Clans cache...
31.08 17:57:40 TIMER: Clans cache: 0ms
31.08 17:57:55 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test', _type => core/server.query }
31.08 17:57:55 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test2' AND Password = E'test'
31.08 17:57:55 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test2, networkid => , isbanned => false, id => 3 }}, errorCode => ok, _type => core/server.query }
31.08 17:57:55 TIME: core/server.query : 2.63 ms
31.08 17:57:55 NET: vdl.0 (thread) request core/user.isOnlineID { id => 3, _type => core/user.isOnlineID }
31.08 17:57:55 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
31.08 17:57:55 TIME: core/user.isOnlineID : 0.17 ms
31.08 17:57:55 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 3, _type => core/cache.get }
31.08 17:57:55 READDB: SELECT * FROM Users WHERE ID = 3
31.08 17:57:55 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test2, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:48:03.859813+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472651424, lastLoginDate => 244, lastLoadDate => 832 }, effects => { list => [] } }}, version => 0, id => 3 } }
31.08 17:57:55 TIME: core/cache.get : 1.07 ms
31.08 17:57:55 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 3, _type => core/cache.get }
31.08 17:57:55 READDB: SELECT * FROM UserQuests WHERE ID = 3
31.08 17:57:55 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 3 } }
31.08 17:57:55 TIME: core/cache.get : 2.5 ms
31.08 17:57:55 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 3, _type => core/user.loginPost, ipAddr => 172.16.27.103 }
31.08 17:57:55 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
31.08 17:57:55 TIME: core/user.loginPost : 0.05 ms
31.08 17:57:55 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
31.08 17:57:55 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
31.08 17:57:55 DB: SELECT * FROM battle WHERE avaliable = true AND finished <> true
31.08 17:57:55 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {{ secondid => 0, params => {}, avaliable => true, firstid => 2, id => 4, turnid => 2, finished => false }}, errorCode => ok, _type => vdl/cache.battle.find }
31.08 17:57:55 TIME: vdl/cache.battle.find : 1.08 ms
31.08 17:58:00 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 3, _type => core/cache.update }
31.08 17:58:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 17:58:00 TIME: core/cache.update : 0.16 ms
31.08 17:58:00 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 3
31.08 17:58:22 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
31.08 17:58:22 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
31.08 17:58:22 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
31.08 17:58:22 STATS: cache [user], database [282 calls, 2 reads, 2 writes]
31.08 17:58:22 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
31.08 17:58:22 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.96 ms]
31.08 17:58:22 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.13 ms]
31.08 17:58:22 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
31.08 17:58:22 TIME: core/cache.update : 0.44 ms
31.08 17:58:22 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
31.08 17:58:22 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
31.08 17:58:22 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
31.08 17:58:22 STATS: cache [questdata], database [282 calls, 2 reads, 0 writes]
31.08 17:58:22 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
31.08 17:58:22 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 17:58:22 TIME: core/cache.update : 0.43 ms
31.08 17:58:22 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
31.08 17:58:22 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
31.08 17:58:22 TIME: core/user.logoutPost : 0.12 ms
31.08 17:58:22 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 2
31.08 17:58:22 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
31.08 17:58:32 BLOCKREMOVE: user 2 removed
31.08 17:58:32 BLOCKREMOVE: questdata 2 removed
31.08 17:58:40 TIMER: Clans cache...
31.08 17:58:40 TIMER: Clans cache: 0ms
31.08 17:58:40 TIMER: Clans cache...
31.08 17:58:40 TIMER: Clans cache: 0ms
31.08 17:58:40 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 1, 0)
31.08 17:58:40 TIMER: Clans cache...
31.08 17:58:40 TIMER: Clans cache: 0ms
31.08 17:58:40 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 3, _type => core/cache.update }
31.08 17:58:40 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
31.08 17:58:40 STATS: cache [user], segments [9 calls, 4 hits, 4 misses]
31.08 17:58:40 STATS: cache [user], database [480 calls, 2 reads, 3 writes]
31.08 17:58:40 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
31.08 17:58:40 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.96 ms]
31.08 17:58:40 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.19 ms]
31.08 17:58:40 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
31.08 17:58:40 TIME: core/cache.update : 0.5 ms
31.08 17:58:40 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 3, _type => core/cache.update }
31.08 17:58:40 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
31.08 17:58:40 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
31.08 17:58:40 STATS: cache [questdata], database [480 calls, 2 reads, 1 writes]
31.08 17:58:40 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
31.08 17:58:40 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
31.08 17:58:40 TIME: core/cache.update : 0.43 ms
31.08 17:58:40 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 3, _type => core/user.logoutPost }
31.08 17:58:40 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
31.08 17:58:40 TIME: core/user.logoutPost : 0.15 ms
31.08 17:58:40 TIMER: Clans cache...
31.08 17:58:40 TIMER: Clans cache: 0ms
31.08 17:58:40 WRITEDB: UPDATE Users SET name = E'test2', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:48:03.859813+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472651424,"lastLoginDate":244,"lastLoadDate":832},"effects":{"list":[]}}' WHERE ID = 3
31.08 17:58:40 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 3
