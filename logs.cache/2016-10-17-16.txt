17.10 16:02:01 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
17.10 16:02:01 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
17.10 16:02:01 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:02:01 TIME: core/server.query : 1.46 ms
17.10 16:02:01 NET: vdl.0 (thread) request core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
17.10 16:02:01 QUEUE: vdl.0 (thread) response core/user.isOnlineID
17.10 16:02:01 TIME: core/user.isOnlineID : 0.05 ms
17.10 16:02:01 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
17.10 16:02:01 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
17.10 16:02:01 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
17.10 16:02:01 STATS: cache [user], database [3392 calls, 0 reads, 0 writes]
17.10 16:02:01 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
17.10 16:02:01 READDB: SELECT * FROM Users WHERE ID = 36
17.10 16:02:01 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 2.22 ms]
17.10 16:02:01 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
17.10 16:02:01 QUEUE: vdl.0 (thread) response core/cache.get
17.10 16:02:01 TIME: core/cache.get : 2.31 ms
17.10 16:02:01 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
17.10 16:02:01 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
17.10 16:02:01 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
17.10 16:02:01 STATS: cache [questdata], database [3392 calls, 0 reads, 0 writes]
17.10 16:02:01 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
17.10 16:02:01 READDB: SELECT * FROM UserQuests WHERE ID = 36
17.10 16:02:01 QUEUE: vdl.0 (thread) response core/cache.get
17.10 16:02:01 TIME: core/cache.get : 0.74 ms
17.10 16:02:01 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
17.10 16:02:01 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.10 16:02:01 TIME: core/user.loginPost : 0.08 ms
17.10 16:02:06 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
17.10 16:02:06 DB: SELECT * FROM tournament
17.10 16:02:06 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
17.10 16:02:06 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
17.10 16:02:06 STATS: cache [tournament], database [3396 calls, 0 reads, 0 writes]
17.10 16:02:06 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
17.10 16:02:06 READDB: SELECT * FROM Tournament WHERE ID = 1
17.10 16:02:06 DB: SELECT name FROM users WHERE id = 36
17.10 16:02:06 DB: SELECT name FROM users WHERE id = 37
17.10 16:02:06 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => active, userList => [{ name => uid36, id => 36 },{ name => uid37, id => 37 }], battleActive => [48,49], startdate => 2016-14-10 20:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
17.10 16:02:06 TIME: vdl/cache.tournament.getAvailableTournament : 4 ms
17.10 16:02:08 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
17.10 16:02:08 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [36,37] }
17.10 16:02:08 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.08 ms
17.10 16:02:08 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ round => 1, player1 => 36, player2 => 37 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
17.10 16:02:08 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ round => 1, player1 => 36, player2 => 37 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
17.10 16:02:08 TIME: vdl/cache.tournament.setGrid : 0.08 ms
17.10 16:02:10 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
17.10 16:02:10 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 16:02:10 TIME: core/cache.update : 0.1 ms
17.10 16:02:11 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476702920,"lastLoginDate":291,"lastLoadDate":1018},"effects":{"list":[]}}' WHERE ID = 36
17.10 16:02:19 BLOCKREMOVE: tournament 1 removed
17.10 16:02:30 TIMER: Clans cache...
17.10 16:02:30 TIMER: Clans cache: 0ms
17.10 16:02:30 TIMER: Check tournament...
17.10 16:02:30 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:02' AND status = 'starting'
17.10 16:02:30 TIMER: Check tournament: 0ms
17.10 16:02:30 TIMER: Clans cache...
17.10 16:02:30 TIMER: Clans cache: 0ms
17.10 16:02:30 TIMER: Check tournament...
17.10 16:02:30 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:03' AND status = 'starting'
17.10 16:02:30 TIMER: Check tournament: 0ms
17.10 16:03:38 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
17.10 16:03:38 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
17.10 16:03:38 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.10 16:03:38 TIME: core/server.query : 0.93 ms
17.10 16:03:38 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 16:03:38 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
17.10 16:03:38 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
17.10 16:03:38 STATS: cache [battle], database [3489 calls, 0 reads, 0 writes]
17.10 16:03:38 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.10 16:03:38 READDB: SELECT * FROM Battle WHERE ID = 0
17.10 16:03:38 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.10 16:03:38 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 121
Called from modules/VDLCache.hx line 114
Called from modules/VDLCache.hx line 78
Called from snipe/cache/CacheServer.hx line 487
17.10 16:03:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.10 16:03:38 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
17.10 16:03:38 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
17.10 16:03:38 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
17.10 16:03:38 STATS: cache [user], database [3489 calls, 1 reads, 1 writes]
17.10 16:03:38 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
17.10 16:03:38 STATS: cache manager [1], get [2 calls, total 0 sec spent, avg 1.46 ms]
17.10 16:03:38 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.1 ms]
17.10 16:03:38 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.10 16:03:38 TIME: core/cache.update : 0.3 ms
17.10 16:03:38 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
17.10 16:03:38 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
17.10 16:03:38 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
17.10 16:03:38 STATS: cache [questdata], database [3489 calls, 1 reads, 0 writes]
17.10 16:03:38 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
17.10 16:03:38 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 16:03:38 TIME: core/cache.update : 0.21 ms
17.10 16:03:38 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
17.10 16:03:38 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.10 16:03:38 TIME: core/user.logoutPost : 0.06 ms
17.10 16:03:39 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476702920,"lastLoginDate":291,"lastLoadDate":1018},"effects":{"list":[]}}' WHERE ID = 36
17.10 16:03:39 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 36
17.10 16:03:49 BLOCKREMOVE: user 36 removed
17.10 16:03:49 BLOCKREMOVE: questdata 36 removed
17.10 16:04:07 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
17.10 16:04:07 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
17.10 16:04:07 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid36, networkid => , isbanned => false, id => 36 }}, errorCode => ok, _type => core/server.query }
17.10 16:04:07 TIME: core/server.query : 0.81 ms
17.10 16:04:07 NET: vdl.0 (thread) request core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
17.10 16:04:07 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.10 16:04:07 TIME: core/user.isOnlineID : 0.04 ms
17.10 16:04:07 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
17.10 16:04:07 READDB: SELECT * FROM Users WHERE ID = 36
17.10 16:04:07 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid36, deleted => false, email => , networktype =>   , password => uid36, isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476702920, lastLoginDate => 291, lastLoadDate => 1018 }, effects => { list => [] } }}, version => 0, id => 36 } }
17.10 16:04:07 TIME: core/cache.get : 0.71 ms
17.10 16:04:07 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
17.10 16:04:07 READDB: SELECT * FROM UserQuests WHERE ID = 36
17.10 16:04:07 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 36 } }
17.10 16:04:07 TIME: core/cache.get : 0.47 ms
17.10 16:04:07 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
17.10 16:04:07 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.10 16:04:07 TIME: core/user.loginPost : 0.05 ms
17.10 16:04:15 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
17.10 16:04:15 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 16:04:15 TIME: core/cache.update : 0.09 ms
17.10 16:04:15 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476702920,"lastLoginDate":291,"lastLoadDate":1018},"effects":{"list":[]}}' WHERE ID = 36
17.10 16:05:31 TIMER: Starting timer...
17.10 16:05:31 TIMER: Timer running...
17.10 16:05:31 DB: SELECT * FROM GameVars
17.10 16:05:31 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
17.10 16:05:31 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
17.10 16:05:31 DB: SELECT * FROM Shops WHERE ID = 1
17.10 16:05:31 TEMP: load ./tmp/quest_daily_ids
17.10 16:05:31 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
17.10 16:05:31 TEMP: save ./tmp/quest_daily_ids
17.10 16:05:31 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
17.10 16:05:31 QUEUE: vdl.0 (thread) response server.login
17.10 16:05:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
17.10 16:05:31 DB: SELECT * FROM LocalizationStrings
17.10 16:05:31 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:05:31 TIME: core/server.query : 13.6 ms
17.10 16:05:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
17.10 16:05:31 DB: SELECT * FROM GameVars
17.10 16:05:31 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:05:31 TIME: core/server.query : 0.83 ms
17.10 16:05:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
17.10 16:05:31 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
17.10 16:05:31 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:05:31 TIME: core/server.query : 1.39 ms
17.10 16:05:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
17.10 16:05:31 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
17.10 16:05:31 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:05:31 TIME: core/server.query : 0.71 ms
17.10 16:05:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
17.10 16:05:31 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
17.10 16:05:31 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:05:31 TIME: core/server.query : 0.79 ms
17.10 16:05:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
17.10 16:05:31 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
17.10 16:05:31 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:05:31 TIME: core/server.query : 5.22 ms
17.10 16:05:31 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
17.10 16:05:31 QUEUE: vdl.0 (thread) response core/quest.getDaily
17.10 16:05:31 TIME: core/quest.getDaily : 0.03 ms
17.10 16:05:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
17.10 16:05:31 DB: SELECT * FROM UserAttributeTypes
17.10 16:05:31 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:05:31 TIME: core/server.query : 1.73 ms
17.10 16:05:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
17.10 16:05:31 DB: SELECT * FROM UserVariableTypes
17.10 16:05:31 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:05:31 TIME: core/server.query : 1.09 ms
17.10 16:05:31 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
17.10 16:05:31 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
17.10 16:05:31 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:05:31 TIME: core/server.query : 1.71 ms
17.10 16:05:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
17.10 16:05:31 DB: SELECT * FROM ItemGroups
17.10 16:05:31 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:05:31 TIME: core/server.query : 0.66 ms
17.10 16:05:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
17.10 16:05:31 DB: SELECT * FROM Bundles ORDER BY ID
17.10 16:05:31 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:05:31 TIME: core/server.query : 0.68 ms
17.10 16:05:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
17.10 16:05:31 DB: SELECT * FROM BundleItems ORDER BY ID
17.10 16:05:31 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:05:31 TIME: core/server.query : 1.21 ms
17.10 16:05:31 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
17.10 16:05:31 QUEUE: vdl.0 (thread) response core/shop.getList
17.10 16:05:31 TIME: core/shop.getList : 0.07 ms
17.10 16:05:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
17.10 16:05:31 DB: SELECT * FROM EffectAttributeTypes
17.10 16:05:31 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:05:31 TIME: core/server.query : 1.11 ms
17.10 16:05:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
17.10 16:05:31 DB: SELECT * FROM Effects
17.10 16:05:31 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:05:31 TIME: core/server.query : 0.95 ms
17.10 16:05:31 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
17.10 16:05:31 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
17.10 16:05:31 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:05:31 TIME: core/server.query : 1.36 ms
17.10 16:05:31 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
17.10 16:05:31 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
17.10 16:05:31 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:05:31 TIME: core/server.query : 0.98 ms
17.10 16:05:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
17.10 16:05:31 DB: SELECT * FROM Badges
17.10 16:05:31 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:05:31 TIME: core/server.query : 0.54 ms
17.10 16:05:31 TIMER: Clans cache...
17.10 16:05:31 TIMER: Clans cache: 0ms
17.10 16:05:31 TIMER: Check tournament...
17.10 16:05:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:06' AND status = 'starting'
17.10 16:05:31 TIMER: Check tournament: 1ms
17.10 16:05:31 TIMER: Clans cache...
17.10 16:05:31 TIMER: Clans cache: 0ms
17.10 16:05:31 TIMER: Check tournament...
17.10 16:05:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:07' AND status = 'starting'
17.10 16:05:31 TIMER: Check tournament: 1ms
17.10 16:05:31 TIMER: Clans cache...
17.10 16:05:31 TIMER: Clans cache: 0ms
17.10 16:05:31 TIMER: Check tournament...
17.10 16:05:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:08' AND status = 'starting'
17.10 16:05:31 TIMER: Check tournament: 2ms
17.10 16:05:31 TIMER: Clans cache...
17.10 16:05:31 TIMER: Clans cache: 0ms
17.10 16:05:31 TIMER: Check tournament...
17.10 16:05:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:09' AND status = 'starting'
17.10 16:05:31 TIMER: Check tournament: 1ms
17.10 16:05:31 TIMER: Clans cache...
17.10 16:05:31 TIMER: Clans cache: 0ms
17.10 16:05:31 TIMER: Check tournament...
17.10 16:05:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:10' AND status = 'starting'
17.10 16:05:31 TIMER: Check tournament: 0ms
17.10 16:05:31 TIMER: Clans cache...
17.10 16:05:31 TIMER: Clans cache: 0ms
17.10 16:05:31 TIMER: Check tournament...
17.10 16:05:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:11' AND status = 'starting'
17.10 16:05:31 TIMER: Check tournament: 0ms
17.10 16:11:59 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
17.10 16:11:59 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
17.10 16:11:59 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:11:59 TIME: core/server.query : 1.67 ms
17.10 16:11:59 NET: vdl.0 (thread) request core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
17.10 16:11:59 QUEUE: vdl.0 (thread) response core/user.isOnlineID
17.10 16:11:59 TIME: core/user.isOnlineID : 0.04 ms
17.10 16:11:59 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
17.10 16:11:59 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
17.10 16:11:59 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
17.10 16:11:59 STATS: cache [user], database [389 calls, 0 reads, 0 writes]
17.10 16:11:59 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
17.10 16:11:59 READDB: SELECT * FROM Users WHERE ID = 36
17.10 16:11:59 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 2.34 ms]
17.10 16:11:59 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
17.10 16:11:59 QUEUE: vdl.0 (thread) response core/cache.get
17.10 16:11:59 TIME: core/cache.get : 2.44 ms
17.10 16:11:59 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
17.10 16:11:59 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
17.10 16:11:59 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
17.10 16:11:59 STATS: cache [questdata], database [389 calls, 0 reads, 0 writes]
17.10 16:11:59 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
17.10 16:11:59 READDB: SELECT * FROM UserQuests WHERE ID = 36
17.10 16:11:59 QUEUE: vdl.0 (thread) response core/cache.get
17.10 16:11:59 TIME: core/cache.get : 1.11 ms
17.10 16:11:59 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
17.10 16:11:59 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.10 16:11:59 TIME: core/user.loginPost : 0.06 ms
17.10 16:12:06 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
17.10 16:12:06 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 16:12:06 TIME: core/cache.update : 0.11 ms
17.10 16:12:07 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476702920,"lastLoginDate":291,"lastLoadDate":1018},"effects":{"list":[]}}' WHERE ID = 36
17.10 16:12:31 TIMER: Clans cache...
17.10 16:12:31 TIMER: Clans cache: 0ms
17.10 16:12:31 TIMER: Check tournament...
17.10 16:12:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:12' AND status = 'starting'
17.10 16:12:31 TIMER: Check tournament: 0ms
17.10 16:13:29 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
17.10 16:13:29 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
17.10 16:13:29 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.10 16:13:29 TIME: core/server.query : 0.98 ms
17.10 16:13:29 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 16:13:29 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
17.10 16:13:29 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
17.10 16:13:29 STATS: cache [battle], database [478 calls, 0 reads, 0 writes]
17.10 16:13:29 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.10 16:13:29 READDB: SELECT * FROM Battle WHERE ID = 0
17.10 16:13:29 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.10 16:13:29 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 122
Called from modules/VDLCache.hx line 115
Called from modules/VDLCache.hx line 79
Called from snipe/cache/CacheServer.hx line 487
17.10 16:13:29 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.10 16:13:29 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
17.10 16:13:29 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
17.10 16:13:29 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
17.10 16:13:29 STATS: cache [user], database [478 calls, 1 reads, 1 writes]
17.10 16:13:29 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
17.10 16:13:29 STATS: cache manager [1], get [2 calls, total 0 sec spent, avg 1.7 ms]
17.10 16:13:29 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.11 ms]
17.10 16:13:29 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.10 16:13:29 TIME: core/cache.update : 0.33 ms
17.10 16:13:29 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
17.10 16:13:29 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
17.10 16:13:29 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
17.10 16:13:29 STATS: cache [questdata], database [478 calls, 1 reads, 0 writes]
17.10 16:13:29 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
17.10 16:13:29 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 16:13:29 TIME: core/cache.update : 0.28 ms
17.10 16:13:29 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
17.10 16:13:29 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.10 16:13:29 TIME: core/user.logoutPost : 0.15 ms
17.10 16:13:29 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476702920,"lastLoginDate":291,"lastLoadDate":1018},"effects":{"list":[]}}' WHERE ID = 36
17.10 16:13:29 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 36
17.10 16:13:31 TIMER: Clans cache...
17.10 16:13:31 TIMER: Clans cache: 0ms
17.10 16:13:31 TIMER: Check tournament...
17.10 16:13:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:13' AND status = 'starting'
17.10 16:13:31 TIMER: Check tournament: 0ms
17.10 16:13:39 BLOCKREMOVE: user 36 removed
17.10 16:13:39 BLOCKREMOVE: questdata 36 removed
17.10 16:14:31 TIMER: Clans cache...
17.10 16:14:31 TIMER: Clans cache: 0ms
17.10 16:14:31 TIMER: Check tournament...
17.10 16:14:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:14' AND status = 'starting'
17.10 16:14:31 TIMER: Check tournament: 0ms
17.10 16:15:20 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
17.10 16:15:20 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
17.10 16:15:20 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid36, networkid => , isbanned => false, id => 36 }}, errorCode => ok, _type => core/server.query }
17.10 16:15:20 TIME: core/server.query : 2.34 ms
17.10 16:15:20 NET: vdl.0 (thread) request core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
17.10 16:15:20 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.10 16:15:20 TIME: core/user.isOnlineID : 0.1 ms
17.10 16:15:20 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
17.10 16:15:20 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
17.10 16:15:20 STATS: cache [user], segments [6 calls, 3 hits, 2 misses]
17.10 16:15:20 STATS: cache [user], database [590 calls, 1 reads, 2 writes]
17.10 16:15:20 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
17.10 16:15:20 READDB: SELECT * FROM Users WHERE ID = 36
17.10 16:15:20 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 1.67 ms]
17.10 16:15:20 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.14 ms]
17.10 16:15:20 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid36, deleted => false, email => , networktype =>   , password => uid36, isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476702920, lastLoginDate => 291, lastLoadDate => 1018 }, effects => { list => [] } }}, version => 0, id => 36 } }
17.10 16:15:20 TIME: core/cache.get : 2.03 ms
17.10 16:15:20 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
17.10 16:15:20 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
17.10 16:15:20 STATS: cache [questdata], segments [5 calls, 2 hits, 2 misses]
17.10 16:15:20 STATS: cache [questdata], database [590 calls, 1 reads, 1 writes]
17.10 16:15:20 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
17.10 16:15:20 READDB: SELECT * FROM UserQuests WHERE ID = 36
17.10 16:15:20 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 36 } }
17.10 16:15:20 TIME: core/cache.get : 1.21 ms
17.10 16:15:20 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
17.10 16:15:20 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.10 16:15:20 TIME: core/user.loginPost : 0.13 ms
17.10 16:15:26 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
17.10 16:15:26 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 16:15:26 TIME: core/cache.update : 0.11 ms
17.10 16:15:27 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476702920,"lastLoginDate":291,"lastLoadDate":1018},"effects":{"list":[]}}' WHERE ID = 36
17.10 16:15:31 TIMER: Clans cache...
17.10 16:15:31 TIMER: Clans cache: 0ms
17.10 16:15:31 TIMER: Check tournament...
17.10 16:15:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:15' AND status = 'starting'
17.10 16:15:31 TIMER: Check tournament: 1ms
17.10 16:15:31 TIMER: Clans cache...
17.10 16:15:31 TIMER: Clans cache: 0ms
17.10 16:15:31 TIMER: Check tournament...
17.10 16:15:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:16' AND status = 'starting'
17.10 16:15:31 TIMER: Check tournament: 0ms
17.10 16:16:52 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
17.10 16:16:52 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
17.10 16:16:52 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.10 16:16:52 TIME: core/server.query : 1.3 ms
17.10 16:16:52 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 16:16:52 STATS: cache [battle], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 1 not found]
17.10 16:16:52 STATS: cache [battle], segments [2 calls, 0 hits, 1 misses]
17.10 16:16:52 STATS: cache [battle], database [682 calls, 1 reads, 0 writes]
17.10 16:16:52 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.10 16:16:52 READDB: SELECT * FROM Battle WHERE ID = 0
17.10 16:16:52 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.10 16:16:52 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 122
Called from modules/VDLCache.hx line 115
Called from modules/VDLCache.hx line 79
Called from snipe/cache/CacheServer.hx line 487
17.10 16:16:52 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.10 16:16:52 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
17.10 16:16:52 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
17.10 16:16:52 STATS: cache [user], segments [9 calls, 4 hits, 4 misses]
17.10 16:16:52 STATS: cache [user], database [682 calls, 2 reads, 3 writes]
17.10 16:16:52 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
17.10 16:16:52 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.52 ms]
17.10 16:16:52 STATS: cache manager [1], update [5 calls, total 0 sec spent, avg 0.12 ms]
17.10 16:16:52 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.10 16:16:52 TIME: core/cache.update : 0.26 ms
17.10 16:16:52 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
17.10 16:16:52 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
17.10 16:16:52 STATS: cache [questdata], segments [7 calls, 2 hits, 4 misses]
17.10 16:16:52 STATS: cache [questdata], database [682 calls, 2 reads, 1 writes]
17.10 16:16:52 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
17.10 16:16:52 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 16:16:52 TIME: core/cache.update : 0.32 ms
17.10 16:16:52 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
17.10 16:16:52 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.10 16:16:52 TIME: core/user.logoutPost : 0.07 ms
17.10 16:16:53 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476702920,"lastLoginDate":291,"lastLoadDate":1018},"effects":{"list":[]}}' WHERE ID = 36
17.10 16:16:53 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 36
17.10 16:17:01 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
17.10 16:17:01 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
17.10 16:17:01 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid36, networkid => , isbanned => false, id => 36 }}, errorCode => ok, _type => core/server.query }
17.10 16:17:01 TIME: core/server.query : 0.79 ms
17.10 16:17:01 NET: vdl.0 (thread) request core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
17.10 16:17:01 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.10 16:17:01 TIME: core/user.isOnlineID : 0.1 ms
17.10 16:17:01 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
17.10 16:17:01 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid36, deleted => false, email => , networktype =>   , password => uid36, isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476702920, lastLoginDate => 291, lastLoadDate => 1018 }, effects => { list => [] } }}, version => 2, id => 36 } }
17.10 16:17:01 TIME: core/cache.get : 0.19 ms
17.10 16:17:01 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
17.10 16:17:01 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 1, id => 36 } }
17.10 16:17:01 TIME: core/cache.get : 0.09 ms
17.10 16:17:01 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
17.10 16:17:01 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.10 16:17:01 TIME: core/user.loginPost : 0.12 ms
17.10 16:17:11 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
17.10 16:17:11 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 3, _type => core/cache.update }
17.10 16:17:11 TIME: core/cache.update : 0.11 ms
17.10 16:17:12 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476702920,"lastLoginDate":291,"lastLoadDate":1018},"effects":{"list":[]}}' WHERE ID = 36
17.10 16:17:31 TIMER: Clans cache...
17.10 16:17:31 TIMER: Clans cache: 0ms
17.10 16:17:31 TIMER: Check tournament...
17.10 16:17:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:17' AND status = 'starting'
17.10 16:17:31 TIMER: Check tournament: 0ms
17.10 16:17:31 TIMER: Clans cache...
17.10 16:17:31 TIMER: Clans cache: 0ms
17.10 16:17:31 TIMER: Check tournament...
17.10 16:17:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:18' AND status = 'starting'
17.10 16:17:31 TIMER: Check tournament: 0ms
17.10 16:18:37 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
17.10 16:18:37 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
17.10 16:18:37 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.10 16:18:37 TIME: core/server.query : 0.88 ms
17.10 16:18:37 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 16:18:37 STATS: cache [battle], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 2 not found]
17.10 16:18:37 STATS: cache [battle], segments [3 calls, 0 hits, 2 misses]
17.10 16:18:37 STATS: cache [battle], database [787 calls, 2 reads, 0 writes]
17.10 16:18:37 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.10 16:18:37 READDB: SELECT * FROM Battle WHERE ID = 0
17.10 16:18:37 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.10 16:18:37 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 122
Called from modules/VDLCache.hx line 115
Called from modules/VDLCache.hx line 79
Called from snipe/cache/CacheServer.hx line 487
17.10 16:18:37 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.10 16:18:37 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
17.10 16:18:37 STATS: cache [user], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
17.10 16:18:37 STATS: cache [user], segments [14 calls, 9 hits, 4 misses]
17.10 16:18:37 STATS: cache [user], database [787 calls, 2 reads, 5 writes]
17.10 16:18:37 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
17.10 16:18:37 STATS: cache manager [1], get [6 calls, total 0.01 sec spent, avg 1.02 ms]
17.10 16:18:37 STATS: cache manager [1], update [8 calls, total 0 sec spent, avg 0.14 ms]
17.10 16:18:37 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 4, _type => core/cache.update }
17.10 16:18:37 TIME: core/cache.update : 0.41 ms
17.10 16:18:37 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
17.10 16:18:37 STATS: cache [questdata], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
17.10 16:18:37 STATS: cache [questdata], segments [11 calls, 6 hits, 4 misses]
17.10 16:18:37 STATS: cache [questdata], database [787 calls, 2 reads, 2 writes]
17.10 16:18:37 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
17.10 16:18:37 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.10 16:18:37 TIME: core/cache.update : 0.32 ms
17.10 16:18:37 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
17.10 16:18:37 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.10 16:18:37 TIME: core/user.logoutPost : 0.09 ms
17.10 16:18:38 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476702920,"lastLoginDate":291,"lastLoadDate":1018},"effects":{"list":[]}}' WHERE ID = 36
17.10 16:18:38 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 36
17.10 16:18:48 BLOCKREMOVE: user 36 removed
17.10 16:18:48 BLOCKREMOVE: questdata 36 removed
17.10 16:19:31 TIMER: Clans cache...
17.10 16:19:31 TIMER: Clans cache: 0ms
17.10 16:19:31 TIMER: Check tournament...
17.10 16:19:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:19' AND status = 'starting'
17.10 16:19:31 TIMER: Check tournament: 0ms
17.10 16:19:31 TIMER: Clans cache...
17.10 16:19:31 TIMER: Clans cache: 0ms
17.10 16:19:31 TIMER: Check tournament...
17.10 16:19:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:20' AND status = 'starting'
17.10 16:19:31 TIMER: Check tournament: 0ms
17.10 16:19:31 TIMER: Clans cache...
17.10 16:19:31 TIMER: Clans cache: 0ms
17.10 16:19:31 TIMER: Check tournament...
17.10 16:19:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:21' AND status = 'starting'
17.10 16:19:31 TIMER: Check tournament: 0ms
17.10 16:21:55 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
17.10 16:21:55 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
17.10 16:21:55 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid36, networkid => , isbanned => false, id => 36 }}, errorCode => ok, _type => core/server.query }
17.10 16:21:55 TIME: core/server.query : 0.87 ms
17.10 16:21:55 NET: vdl.0 (thread) request core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
17.10 16:21:55 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.10 16:21:55 TIME: core/user.isOnlineID : 0.07 ms
17.10 16:21:55 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
17.10 16:21:55 STATS: cache [user], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
17.10 16:21:55 STATS: cache [user], segments [16 calls, 11 hits, 4 misses]
17.10 16:21:55 STATS: cache [user], database [984 calls, 2 reads, 6 writes]
17.10 16:21:55 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
17.10 16:21:55 READDB: SELECT * FROM Users WHERE ID = 36
17.10 16:21:55 STATS: cache manager [1], get [7 calls, total 0.01 sec spent, avg 1.02 ms]
17.10 16:21:55 STATS: cache manager [1], update [9 calls, total 0 sec spent, avg 0.15 ms]
17.10 16:21:55 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid36, deleted => false, email => , networktype =>   , password => uid36, isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476702920, lastLoginDate => 291, lastLoadDate => 1018 }, effects => { list => [] } }}, version => 0, id => 36 } }
17.10 16:21:55 TIME: core/cache.get : 1.26 ms
17.10 16:21:55 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
17.10 16:21:55 STATS: cache [questdata], get [3 calls, 1 cache hits, 2 cache misses, 0 same version, 0 not found]
17.10 16:21:55 STATS: cache [questdata], segments [13 calls, 8 hits, 4 misses]
17.10 16:21:55 STATS: cache [questdata], database [984 calls, 2 reads, 3 writes]
17.10 16:21:55 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
17.10 16:21:55 READDB: SELECT * FROM UserQuests WHERE ID = 36
17.10 16:21:55 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 36 } }
17.10 16:21:55 TIME: core/cache.get : 0.75 ms
17.10 16:21:55 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
17.10 16:21:55 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.10 16:21:55 TIME: core/user.loginPost : 0.08 ms
17.10 16:22:01 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
17.10 16:22:01 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 16:22:01 TIME: core/cache.update : 0.13 ms
17.10 16:22:01 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476702920,"lastLoginDate":291,"lastLoadDate":1018},"effects":{"list":[]}}' WHERE ID = 36
17.10 16:22:31 TIMER: Clans cache...
17.10 16:22:31 TIMER: Clans cache: 0ms
17.10 16:22:31 TIMER: Check tournament...
17.10 16:22:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:22' AND status = 'starting'
17.10 16:22:31 TIMER: Check tournament: 0ms
17.10 16:22:31 TIMER: Clans cache...
17.10 16:22:31 TIMER: Clans cache: 0ms
17.10 16:22:31 TIMER: Check tournament...
17.10 16:22:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:23' AND status = 'starting'
17.10 16:22:31 TIMER: Check tournament: 0ms
17.10 16:22:31 TIMER: Clans cache...
17.10 16:22:31 TIMER: Clans cache: 0ms
17.10 16:22:31 TIMER: Check tournament...
17.10 16:22:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:24' AND status = 'starting'
17.10 16:22:31 TIMER: Check tournament: 0ms
17.10 16:22:31 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
17.10 16:22:31 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
17.10 16:22:31 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.10 16:22:31 TIME: core/server.query : 0.68 ms
17.10 16:22:31 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 16:22:31 STATS: cache [battle], get [4 calls, 0 cache hits, 3 cache misses, 0 same version, 3 not found]
17.10 16:22:31 STATS: cache [battle], segments [4 calls, 0 hits, 3 misses]
17.10 16:22:31 STATS: cache [battle], database [1200 calls, 3 reads, 0 writes]
17.10 16:22:31 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.10 16:22:31 READDB: SELECT * FROM Battle WHERE ID = 0
17.10 16:22:31 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.10 16:22:31 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 122
Called from modules/VDLCache.hx line 115
Called from modules/VDLCache.hx line 79
Called from snipe/cache/CacheServer.hx line 487
17.10 16:22:31 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.10 16:22:31 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
17.10 16:22:31 STATS: cache [user], get [4 calls, 1 cache hits, 3 cache misses, 0 same version, 0 not found]
17.10 16:22:31 STATS: cache [user], segments [19 calls, 12 hits, 6 misses]
17.10 16:22:31 STATS: cache [user], database [1200 calls, 3 reads, 7 writes]
17.10 16:22:31 STATS: cache [user], lock [4 calls, 4 attempts, 0 failures]
17.10 16:22:31 STATS: cache manager [1], get [8 calls, total 0.01 sec spent, avg 0.97 ms]
17.10 16:22:31 STATS: cache manager [1], update [11 calls, total 0 sec spent, avg 0.15 ms]
17.10 16:22:31 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.10 16:22:31 TIME: core/cache.update : 0.45 ms
17.10 16:22:31 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
17.10 16:22:31 STATS: cache [questdata], get [4 calls, 1 cache hits, 3 cache misses, 0 same version, 0 not found]
17.10 16:22:31 STATS: cache [questdata], segments [15 calls, 8 hits, 6 misses]
17.10 16:22:31 STATS: cache [questdata], database [1200 calls, 3 reads, 3 writes]
17.10 16:22:31 STATS: cache [questdata], lock [4 calls, 4 attempts, 0 failures]
17.10 16:22:31 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 16:22:31 TIME: core/cache.update : 0.33 ms
17.10 16:22:31 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
17.10 16:22:31 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.10 16:22:31 TIME: core/user.logoutPost : 0.08 ms
17.10 16:22:31 TIMER: Clans cache...
17.10 16:22:31 TIMER: Clans cache: 0ms
17.10 16:22:31 TIMER: Check tournament...
17.10 16:22:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:25' AND status = 'starting'
17.10 16:22:31 TIMER: Check tournament: 0ms
17.10 16:22:31 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476702920,"lastLoginDate":291,"lastLoadDate":1018},"effects":{"list":[]}}' WHERE ID = 36
17.10 16:22:31 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 36
17.10 16:25:41 BLOCKREMOVE: user 36 removed
17.10 16:25:41 BLOCKREMOVE: questdata 36 removed
17.10 16:26:31 TIMER: Clans cache...
17.10 16:26:31 TIMER: Clans cache: 0ms
17.10 16:26:31 TIMER: Check tournament...
17.10 16:26:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:26' AND status = 'starting'
17.10 16:26:31 TIMER: Check tournament: 0ms
17.10 16:26:31 TIMER: Clans cache...
17.10 16:26:31 TIMER: Clans cache: 0ms
17.10 16:26:31 TIMER: Check tournament...
17.10 16:26:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:27' AND status = 'starting'
17.10 16:26:31 TIMER: Check tournament: 0ms
17.10 16:28:25 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
17.10 16:28:25 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
17.10 16:28:25 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid36, networkid => , isbanned => false, id => 36 }}, errorCode => ok, _type => core/server.query }
17.10 16:28:25 TIME: core/server.query : 0.81 ms
17.10 16:28:25 NET: vdl.0 (thread) request core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
17.10 16:28:25 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
17.10 16:28:25 TIME: core/user.isOnlineID : 0.1 ms
17.10 16:28:25 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
17.10 16:28:25 STATS: cache [user], get [4 calls, 1 cache hits, 3 cache misses, 0 same version, 0 not found]
17.10 16:28:25 STATS: cache [user], segments [21 calls, 14 hits, 6 misses]
17.10 16:28:25 STATS: cache [user], database [1374 calls, 3 reads, 8 writes]
17.10 16:28:25 STATS: cache [user], lock [5 calls, 5 attempts, 0 failures]
17.10 16:28:25 READDB: SELECT * FROM Users WHERE ID = 36
17.10 16:28:25 STATS: cache manager [1], get [9 calls, total 0.01 sec spent, avg 0.98 ms]
17.10 16:28:25 STATS: cache manager [1], update [12 calls, total 0 sec spent, avg 0.16 ms]
17.10 16:28:25 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid36, deleted => false, email => , networktype =>   , password => uid36, isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, networkid => , params => { inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1476702920, lastLoginDate => 291, lastLoadDate => 1018 }, effects => { list => [] } }}, version => 0, id => 36 } }
17.10 16:28:25 TIME: core/cache.get : 1.3 ms
17.10 16:28:25 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
17.10 16:28:25 STATS: cache [questdata], get [4 calls, 1 cache hits, 3 cache misses, 0 same version, 0 not found]
17.10 16:28:25 STATS: cache [questdata], segments [17 calls, 10 hits, 6 misses]
17.10 16:28:25 STATS: cache [questdata], database [1374 calls, 3 reads, 4 writes]
17.10 16:28:25 STATS: cache [questdata], lock [5 calls, 5 attempts, 0 failures]
17.10 16:28:25 READDB: SELECT * FROM UserQuests WHERE ID = 36
17.10 16:28:25 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 36 } }
17.10 16:28:25 TIME: core/cache.get : 0.72 ms
17.10 16:28:25 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
17.10 16:28:25 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.10 16:28:25 TIME: core/user.loginPost : 0.08 ms
17.10 16:28:31 TIMER: Clans cache...
17.10 16:28:31 TIMER: Clans cache: 0ms
17.10 16:28:31 TIMER: Check tournament...
17.10 16:28:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:28' AND status = 'starting'
17.10 16:28:31 TIMER: Check tournament: 1ms
17.10 16:28:31 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
17.10 16:28:31 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 16:28:31 TIME: core/cache.update : 0.09 ms
17.10 16:28:31 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476702920,"lastLoginDate":291,"lastLoadDate":1018},"effects":{"list":[]}}' WHERE ID = 36
17.10 16:28:31 TIMER: Clans cache...
17.10 16:28:31 TIMER: Clans cache: 0ms
17.10 16:28:31 TIMER: Check tournament...
17.10 16:28:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:29' AND status = 'starting'
17.10 16:28:31 TIMER: Check tournament: 0ms
17.10 16:29:43 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
17.10 16:29:43 DB: SELECT * FROM tournament
17.10 16:29:43 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
17.10 16:29:43 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
17.10 16:29:43 STATS: cache [tournament], database [1453 calls, 0 reads, 0 writes]
17.10 16:29:43 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
17.10 16:29:43 READDB: SELECT * FROM Tournament WHERE ID = 1
17.10 16:29:43 DB: SELECT name FROM users WHERE id = 36
17.10 16:29:43 DB: SELECT name FROM users WHERE id = 37
17.10 16:29:43 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => active, userList => [{ name => uid36, id => 36 },{ name => uid37, id => 37 }], battleActive => [48,49], startdate => 2016-14-10 20:30 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
17.10 16:29:43 TIME: vdl/cache.tournament.getAvailableTournament : 3.26 ms
17.10 16:29:48 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
17.10 16:29:48 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [36,37] }
17.10 16:29:48 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.1 ms
17.10 16:29:48 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ round => 1, player1 => 36, player2 => 37 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid }
17.10 16:29:48 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ round => 1, player1 => 36, player2 => 37 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
17.10 16:29:48 TIME: vdl/cache.tournament.setGrid : 0.07 ms
17.10 16:29:57 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
17.10 16:29:57 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
17.10 16:29:57 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => {}, count => 0, errorCode => not, _type => vdl/cache.battle.find }
17.10 16:29:57 TIME: vdl/cache.battle.find : 86.86 ms
17.10 16:29:57 NET: vdl.0 (thread) request vdl/cache.battle.create { selfId => 36, _type => vdl/cache.battle.create }
17.10 16:29:57 DB: SELECT nextval('Battle_id_seq') AS id
17.10 16:29:57 READDB: SELECT ID FROM Battle WHERE ID = 50
17.10 16:29:57 READDB: INSERT INTO Battle (ID) VALUES (50)
17.10 16:29:57 STATS: cache [battle], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 4 not found]
17.10 16:29:57 STATS: cache [battle], segments [5 calls, 0 hits, 4 misses]
17.10 16:29:57 STATS: cache [battle], database [1466 calls, 4 reads, 0 writes]
17.10 16:29:57 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
17.10 16:29:57 READDB: SELECT * FROM Battle WHERE ID = 50
17.10 16:29:57 STATS: cache manager [0], get [1 calls, total 0 sec spent, avg 0.76 ms]
17.10 16:29:57 STATS: cache manager [0], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
17.10 16:29:57 QUEUE: vdl.0 (thread) response vdl/cache.battle.create { room => 50, errorCode => ok, _type => vdl/cache.battle.create, player => 1 }
17.10 16:29:57 TIME: vdl/cache.battle.create : 270.72 ms
17.10 16:29:58 BLOCKREMOVE: tournament 1 removed
17.10 16:30:02 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'36', finished = E'false', firstid = E'36', params = E'{}', avaliable = E'true' WHERE ID = 50
17.10 16:30:31 TIMER: Clans cache...
17.10 16:30:31 TIMER: Clans cache: 0ms
17.10 16:30:31 TIMER: Check tournament...
17.10 16:30:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:30' AND status = 'starting'
17.10 16:30:31 TIMER: Check tournament: 0ms
17.10 16:30:31 TIMER: Clans cache...
17.10 16:30:31 TIMER: Clans cache: 0ms
17.10 16:30:31 TIMER: Check tournament...
17.10 16:30:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:31' AND status = 'starting'
17.10 16:30:31 TIMER: Check tournament: 0ms
17.10 16:31:45 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 50, _type => vdl/cache.battle.infoRoom }
17.10 16:31:45 STATS: cache [battle], get [6 calls, 0 cache hits, 5 cache misses, 0 same version, 4 not found]
17.10 16:31:45 STATS: cache [battle], segments [8 calls, 1 hits, 6 misses]
17.10 16:31:45 STATS: cache [battle], database [1574 calls, 5 reads, 1 writes]
17.10 16:31:45 STATS: cache [battle], lock [1 calls, 1 attempts, 0 failures]
17.10 16:31:45 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 0, firstId => 36, _type => vdl/cache.battle.infoRoom, turnId => 36 }
17.10 16:31:45 TIME: vdl/cache.battle.infoRoom : 0.29 ms
17.10 16:31:45 NET: vdl.0 (thread) request core/server.query { q => INSERT INTO statistics (id, firstid,secondid, roomid, params) VALUES ('', 36,0,50,{ scoresSecond => null, scoresFirst => null }), _type => core/server.query }
17.10 16:31:45 DB: INSERT INTO statistics (id, firstid,secondid, roomid, params) VALUES ('', 36,0,50,{ scoresSecond => null, scoresFirst => null })
17.10 16:31:45 QUEUE: vdl.0 (thread) response core/server.query { errorCode => ok, _type => core/server.query }
17.10 16:31:45 TIME: core/server.query : 51.5 ms
17.10 16:31:45 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 50, _type => vdl/cache.battle.finishRoom }
17.10 16:31:45 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
17.10 16:31:45 TIME: vdl/cache.battle.finishRoom : 0.22 ms
17.10 16:31:45 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 50, _type => vdl/cache.battle.deleteRoom }
17.10 16:31:45 ROOM: deleted room 50
17.10 16:31:45 DB: DELETE FROM Battle WHERE ID = 50
17.10 16:31:45 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
17.10 16:31:45 TIME: vdl/cache.battle.deleteRoom : 37.18 ms
17.10 16:31:45 NET: vdl.0 (thread) request core/user.sendTo { id => 0, _type => core/user.sendTo, msg => { _type => battle.end } }
17.10 16:31:45 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
17.10 16:31:45 TIME: core/user.sendTo : 0.6 ms
17.10 16:31:45 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
17.10 16:31:45 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
17.10 16:31:45 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.10 16:31:45 TIME: core/server.query : 0.8 ms
17.10 16:31:45 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 16:31:45 READDB: SELECT * FROM Battle WHERE ID = 0
17.10 16:31:45 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.10 16:31:45 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 122
Called from modules/VDLCache.hx line 115
Called from modules/VDLCache.hx line 79
Called from snipe/cache/CacheServer.hx line 487
17.10 16:31:45 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.10 16:31:45 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
17.10 16:31:45 STATS: cache [user], get [5 calls, 1 cache hits, 4 cache misses, 0 same version, 0 not found]
17.10 16:31:45 STATS: cache [user], segments [24 calls, 15 hits, 8 misses]
17.10 16:31:45 STATS: cache [user], database [1575 calls, 4 reads, 9 writes]
17.10 16:31:45 STATS: cache [user], lock [5 calls, 5 attempts, 0 failures]
17.10 16:31:45 STATS: cache manager [1], get [10 calls, total 0.01 sec spent, avg 0.94 ms]
17.10 16:31:45 STATS: cache manager [1], update [14 calls, total 0 sec spent, avg 0.15 ms]
17.10 16:31:45 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.10 16:31:45 TIME: core/cache.update : 0.5 ms
17.10 16:31:45 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
17.10 16:31:45 STATS: cache [questdata], get [5 calls, 1 cache hits, 4 cache misses, 0 same version, 0 not found]
17.10 16:31:45 STATS: cache [questdata], segments [19 calls, 10 hits, 8 misses]
17.10 16:31:45 STATS: cache [questdata], database [1575 calls, 4 reads, 4 writes]
17.10 16:31:45 STATS: cache [questdata], lock [5 calls, 5 attempts, 0 failures]
17.10 16:31:45 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 16:31:45 TIME: core/cache.update : 0.44 ms
17.10 16:31:45 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
17.10 16:31:45 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.10 16:31:45 TIME: core/user.logoutPost : 0.13 ms
17.10 16:31:46 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476702920,"lastLoginDate":291,"lastLoadDate":1018},"effects":{"list":[]}}' WHERE ID = 36
17.10 16:31:46 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 36
17.10 16:31:46 WRITEDB: UPDATE Battle SET secondid = E'0', turnid = E'36', finished = E'true', firstid = E'36', params = E'{}', avaliable = E'true' WHERE ID = 50
17.10 16:31:56 BLOCKREMOVE: user 36 removed
17.10 16:31:56 BLOCKREMOVE: questdata 36 removed
17.10 16:31:56 BLOCKREMOVE: battle 50 removed
17.10 16:32:31 TIMER: Clans cache...
17.10 16:32:31 TIMER: Clans cache: 0ms
17.10 16:32:31 TIMER: Check tournament...
17.10 16:32:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:32' AND status = 'starting'
17.10 16:32:31 TIMER: Check tournament: 0ms
17.10 16:32:31 TIMER: Clans cache...
17.10 16:32:31 TIMER: Clans cache: 0ms
17.10 16:32:31 TIMER: Check tournament...
17.10 16:32:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:33' AND status = 'starting'
17.10 16:32:31 TIMER: Check tournament: 1ms
17.10 16:32:31 TIMER: Clans cache...
17.10 16:32:31 TIMER: Clans cache: 0ms
17.10 16:32:31 TIMER: Check tournament...
17.10 16:32:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:34' AND status = 'starting'
17.10 16:32:31 TIMER: Check tournament: 0ms
17.10 16:32:31 TIMER: Clans cache...
17.10 16:32:31 TIMER: Clans cache: 0ms
17.10 16:32:31 TIMER: Check tournament...
17.10 16:32:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:35' AND status = 'starting'
17.10 16:32:31 TIMER: Check tournament: 0ms
17.10 16:32:31 TIMER: Clans cache...
17.10 16:32:31 TIMER: Clans cache: 0ms
17.10 16:32:31 TIMER: Check tournament...
17.10 16:32:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:36' AND status = 'starting'
17.10 16:32:31 TIMER: Check tournament: 0ms
17.10 16:32:31 TIMER: Clans cache...
17.10 16:32:31 TIMER: Clans cache: 0ms
17.10 16:32:31 TIMER: Check tournament...
17.10 16:32:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:37' AND status = 'starting'
17.10 16:32:31 TIMER: Check tournament: 0ms
17.10 16:32:31 TIMER: Clans cache...
17.10 16:32:31 TIMER: Clans cache: 0ms
17.10 16:32:31 TIMER: Check tournament...
17.10 16:32:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:38' AND status = 'starting'
17.10 16:32:31 TIMER: Check tournament: 1ms
17.10 16:32:31 TIMER: Clans cache...
17.10 16:32:31 TIMER: Clans cache: 0ms
17.10 16:32:31 TIMER: Check tournament...
17.10 16:32:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:39' AND status = 'starting'
17.10 16:32:31 TIMER: Check tournament: 0ms
17.10 16:32:31 TIMER: Clans cache...
17.10 16:32:31 TIMER: Clans cache: 0ms
17.10 16:32:31 TIMER: Check tournament...
17.10 16:32:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:40' AND status = 'starting'
17.10 16:32:31 TIMER: Check tournament: 0ms
17.10 16:32:31 TIMER: Clans cache...
17.10 16:32:31 TIMER: Clans cache: 0ms
17.10 16:32:31 TIMER: Check tournament...
17.10 16:32:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:41' AND status = 'starting'
17.10 16:32:31 TIMER: Check tournament: 0ms
17.10 16:32:31 TIMER: Clans cache...
17.10 16:32:31 TIMER: Clans cache: 0ms
17.10 16:32:31 TIMER: Check tournament...
17.10 16:32:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:42' AND status = 'starting'
17.10 16:32:31 TIMER: Check tournament: 0ms
17.10 16:32:31 TIMER: Clans cache...
17.10 16:32:31 TIMER: Clans cache: 0ms
17.10 16:32:31 TIMER: Check tournament...
17.10 16:32:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:43' AND status = 'starting'
17.10 16:32:31 TIMER: Check tournament: 0ms
17.10 16:32:31 TIMER: Clans cache...
17.10 16:32:31 TIMER: Clans cache: 0ms
17.10 16:32:31 TIMER: Check tournament...
17.10 16:32:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:44' AND status = 'starting'
17.10 16:32:31 TIMER: Check tournament: 0ms
17.10 16:32:31 TIMER: Clans cache...
17.10 16:32:31 TIMER: Clans cache: 0ms
17.10 16:32:31 TIMER: Check tournament...
17.10 16:32:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:45' AND status = 'starting'
17.10 16:32:31 TIMER: Check tournament: 0ms
17.10 16:32:31 TIMER: Clans cache...
17.10 16:32:31 TIMER: Clans cache: 0ms
17.10 16:32:31 TIMER: Check tournament...
17.10 16:32:31 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:46' AND status = 'starting'
17.10 16:32:31 TIMER: Check tournament: 0ms
17.10 16:32:31 TIMER: Clans cache...
17.10 16:32:31 TIMER: Clans cache: 0ms
17.10 16:32:31 17.10 16:52:54 TIMER: Starting timer...
17.10 16:52:54 TIMER: Timer running...
17.10 16:52:54 DB: SELECT * FROM GameVars
17.10 16:52:54 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
17.10 16:52:54 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
17.10 16:52:54 DB: SELECT * FROM Shops WHERE ID = 1
17.10 16:52:54 TEMP: load ./tmp/quest_daily_ids
17.10 16:52:54 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
17.10 16:52:54 TEMP: save ./tmp/quest_daily_ids
17.10 16:52:54 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
17.10 16:52:54 QUEUE: vdl.0 (thread) response server.login
17.10 16:52:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
17.10 16:52:54 DB: SELECT * FROM LocalizationStrings
17.10 16:52:54 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:52:54 TIME: core/server.query : 6.87 ms
17.10 16:52:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
17.10 16:52:54 DB: SELECT * FROM GameVars
17.10 16:52:54 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:52:54 TIME: core/server.query : 0.48 ms
17.10 16:52:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
17.10 16:52:54 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
17.10 16:52:54 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:52:54 TIME: core/server.query : 0.8 ms
17.10 16:52:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
17.10 16:52:54 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
17.10 16:52:54 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:52:54 TIME: core/server.query : 0.38 ms
17.10 16:52:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
17.10 16:52:54 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
17.10 16:52:54 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:52:54 TIME: core/server.query : 0.64 ms
17.10 16:52:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
17.10 16:52:54 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
17.10 16:52:54 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:52:54 TIME: core/server.query : 0.75 ms
17.10 16:52:54 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
17.10 16:52:54 QUEUE: vdl.0 (thread) response core/quest.getDaily
17.10 16:52:54 TIME: core/quest.getDaily : 0.02 ms
17.10 16:52:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
17.10 16:52:54 DB: SELECT * FROM UserAttributeTypes
17.10 16:52:54 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:52:54 TIME: core/server.query : 0.38 ms
17.10 16:52:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
17.10 16:52:54 DB: SELECT * FROM UserVariableTypes
17.10 16:52:54 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:52:54 TIME: core/server.query : 0.31 ms
17.10 16:52:54 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
17.10 16:52:54 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
17.10 16:52:54 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:52:54 TIME: core/server.query : 0.98 ms
17.10 16:52:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
17.10 16:52:54 DB: SELECT * FROM ItemGroups
17.10 16:52:54 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:52:54 TIME: core/server.query : 0.36 ms
17.10 16:52:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
17.10 16:52:54 DB: SELECT * FROM Bundles ORDER BY ID
17.10 16:52:54 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:52:54 TIME: core/server.query : 0.41 ms
17.10 16:52:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
17.10 16:52:54 DB: SELECT * FROM BundleItems ORDER BY ID
17.10 16:52:54 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:52:54 TIME: core/server.query : 0.52 ms
17.10 16:52:54 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
17.10 16:52:54 QUEUE: vdl.0 (thread) response core/shop.getList
17.10 16:52:54 TIME: core/shop.getList : 0.02 ms
17.10 16:52:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
17.10 16:52:54 DB: SELECT * FROM EffectAttributeTypes
17.10 16:52:54 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:52:54 TIME: core/server.query : 0.3 ms
17.10 16:52:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
17.10 16:52:54 DB: SELECT * FROM Effects
17.10 16:52:54 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:52:54 TIME: core/server.query : 0.29 ms
17.10 16:52:54 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
17.10 16:52:54 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
17.10 16:52:54 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:52:54 TIME: core/server.query : 0.83 ms
17.10 16:52:54 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
17.10 16:52:54 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
17.10 16:52:54 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:52:54 TIME: core/server.query : 1.57 ms
17.10 16:52:54 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
17.10 16:52:54 DB: SELECT * FROM Badges
17.10 16:52:54 QUEUE: vdl.0 (thread) response core/server.query
17.10 16:52:54 TIME: core/server.query : 0.38 ms
17.10 16:52:54 TIMER: Clans cache...
17.10 16:52:54 TIMER: Clans cache: 0ms
17.10 16:52:54 TIMER: Check tournament...
17.10 16:52:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:53' AND status = 'starting'
17.10 16:52:54 TIMER: Check tournament: 0ms
17.10 16:52:54 TIMER: Clans cache...
17.10 16:52:54 TIMER: Clans cache: 0ms
17.10 16:52:54 TIMER: Check tournament...
17.10 16:52:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:54' AND status = 'starting'
17.10 16:52:54 TIMER: Check tournament: 1ms
17.10 16:52:54 TIMER: Clans cache...
17.10 16:52:54 TIMER: Clans cache: 0ms
17.10 16:52:54 TIMER: Check tournament...
17.10 16:52:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:55' AND status = 'starting'
17.10 16:52:54 TIMER: Check tournament: 1ms
17.10 16:52:54 TIMER: Clans cache...
17.10 16:52:54 TIMER: Clans cache: 0ms
17.10 16:52:54 TIMER: Check tournament...
17.10 16:52:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:56' AND status = 'starting'
17.10 16:52:54 TIMER: Check tournament: 1ms
17.10 16:52:54 TIMER: Clans cache...
17.10 16:52:54 TIMER: Clans cache: 0ms
17.10 16:52:54 TIMER: Check tournament...
17.10 16:52:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:57' AND status = 'starting'
17.10 16:52:54 TIMER: Check tournament: 0ms
17.10 16:52:54 TIMER: Clans cache...
17.10 16:52:54 TIMER: Clans cache: 0ms
17.10 16:52:54 TIMER: Check tournament...
17.10 16:52:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:58' AND status = 'starting'
17.10 16:52:54 TIMER: Check tournament: 1ms
17.10 16:52:54 TIMER: Clans cache...
17.10 16:52:54 TIMER: Clans cache: 0ms
17.10 16:52:54 TIMER: Check tournament...
17.10 16:52:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 16:59' AND status = 'starting'
17.10 16:52:54 TIMER: Check tournament: 0ms
17.10 16:52:54 TIMER: Clans cache...
17.10 16:52:54 TIMER: Clans cache: 0ms
17.10 16:52:54 TIMER: Check tournament...
17.10 16:52:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:00' AND status = 'starting'
17.10 16:52:54 TIMER: Check tournament: 0ms
17.10 16:52:54 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 0, 0)
17.10 16:52:54 TIMER: Clans cache...
17.10 16:52:54 TIMER: Clans cache: 0ms
17.10 16:52:54 TIMER: Check tournament...
17.10 16:52:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:01' AND status = 'starting'
17.10 16:52:54 TIMER: Check tournament: 0ms
17.10 16:52:54 TIMER: Clans cache...
17.10 16:52:54 TIMER: Clans cache: 0ms
17.10 16:52:54 TIMER: Check tournament...
17.10 16:52:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:02' AND status = 'starting'
17.10 16:52:54 TIMER: Check tournament: 0ms
17.10 16:52:54 TIMER: Clans cache...
17.10 16:52:54 TIMER: Clans cache: 0ms
17.10 16:52:54 TIMER: Check tournament...
17.10 16:52:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:03' AND status = 'starting'
17.10 16:52:54 TIMER: Check tournament: 1ms
17.10 16:52:54 TIMER: Clans cache...
17.10 16:52:54 TIMER: Clans cache: 0ms
17.10 16:52:54 TIMER: Check tournament...
17.10 16:52:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:04' AND status = 'starting'
17.10 16:52:54 TIMER: Check tournament: 0ms
17.10 16:52:54 TIMER: Clans cache...
17.10 16:52:54 TIMER: Clans cache: 0ms
17.10 16:52:54 TIMER: Check tournament...
17.10 16:52:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:05' AND status = 'starting'
17.10 16:52:54 TIMER: Check tournament: 0ms
17.10 16:52:54 TIMER: Clans cache...
17.10 16:52:54 TIMER: Clans cache: 0ms
17.10 16:52:54 TIMER: Check tournament...
17.10 16:52:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:06' AND status = 'starting'
17.10 16:52:54 TIMER: Check tournament: 0ms
17.10 16:52:54 TIMER: Clans cache...
17.10 16:52:54 TIMER: Clans cache: 0ms
17.10 16:52:54 TIMER: Check tournament...
17.10 16:52:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:07' AND status = 'starting'
17.10 16:52:54 TIMER: Check tournament: 0ms
17.10 16:52:54 TIMER: Clans cache...
17.10 16:52:54 TIMER: Clans cache: 0ms
17.10 16:52:54 TIMER: Check tournament...
17.10 16:52:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:08' AND status = 'starting'
17.10 16:52:54 TIMER: Check tournament: 0ms
17.10 16:52:54 TIMER: Clans cache...
17.10 16:52:54 TIMER: Clans cache: 0ms
17.10 16:52:54 TIMER: Check tournament...
17.10 16:52:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:09' AND status = 'starting'
17.10 16:52:54 TIMER: Check tournament: 0ms
17.10 16:52:54 TIMER: Clans cache...
17.10 16:52:54 TIMER: Clans cache: 0ms
17.10 16:52:54 TIMER: Check tournament...
17.10 16:52:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:10' AND status = 'starting'
17.10 16:52:54 TIMER: Check tournament: 0ms
17.10 16:52:54 TIMER: Clans cache...
17.10 16:52:54 TIMER: Clans cache: 0ms
17.10 16:52:54 TIMER: Check tournament...
17.10 16:52:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:11' AND status = 'starting'
17.10 16:52:54 TIMER: Check tournament: 0ms
17.10 16:52:54 TIMER: Clans cache...
17.10 16:52:54 TIMER: Clans cache: 0ms
17.10 16:52:54 TIMER: Check tournament...
17.10 16:52:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:12' AND status = 'starting'
17.10 16:52:54 TIMER: Check tournament: 1ms
17.10 16:52:54 TIMER: Clans cache...
17.10 16:52:54 TIMER: Clans cache: 0ms
17.10 16:52:54 TIMER: Check tournament...
17.10 16:52:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:13' AND status = 'starting'
17.10 16:52:54 TIMER: Check tournament: 0ms
17.10 16:52:54 TIMER: Clans cache...
17.10 16:52:54 TIMER: Clans cache: 0ms
17.10 16:52:54 TIMER: Check tournament...
17.10 16:52:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:14' AND status = 'starting'
17.10 16:52:54 TIMER: Check tournament: 0ms
17.10 16:52:54 TIMER: Clans cache...
17.10 16:52:54 TIMER: Clans cache: 0ms
17.10 16:52:54 TIMER: Check tournament...
17.10 16:52:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:15' AND status = 'starting'
17.10 16:52:54 TIMER: Check tournament: 0ms
17.10 16:52:54 TIMER: Clans cache...
17.10 16:52:54 TIMER: Clans cache: 0ms
17.10 16:52:54 TIMER: Check tournament...
17.10 16:52:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:16' AND status = 'starting'
17.10 16:52:54 TIMER: Check tournament: 0ms
17.10 16:52:54 TIMER: Clans cache...
17.10 16:52:54 TIMER: Clans cache: 0ms
17.10 16:52:54 TIMER: Check tournament...
17.10 16:52:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:17' AND status = 'starting'
17.10 16:52:54 TIMER: Check tournament: 0ms
17.10 16:52:54 TIMER: Clans cache...
17.10 16:52:54 TIMER: Clans cache: 0ms
17.10 16:52:54 TIMER: Check tournament...
17.10 16:52:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:18' AND status = 'starting'
17.10 16:52:54 TIMER: Check tournament: 0ms
17.10 16:52:54 TIMER: Clans cache...
17.10 16:52:54 TIMER: Clans cache: 0ms
17.10 16:52:54 TIMER: Check tournament...
17.10 16:52:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:19' AND status = 'starting'
17.10 16:52:54 TIMER: Check tournament: 0ms
