01.09 13:02:43 BLOCKREMOVE: user 2 removed
01.09 13:02:43 BLOCKREMOVE: questdata 2 removed
01.09 13:03:33 TIMER: Clans cache...
01.09 13:03:33 TIMER: Clans cache: 0ms
01.09 13:03:58 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
01.09 13:03:58 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
01.09 13:03:58 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
01.09 13:03:58 TIME: core/server.query : 2.98 ms
01.09 13:03:58 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
01.09 13:03:58 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
01.09 13:03:58 TIME: core/user.isOnlineID : 0.11 ms
01.09 13:03:58 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
01.09 13:03:58 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
01.09 13:03:58 STATS: cache [user], segments [6 calls, 3 hits, 2 misses]
01.09 13:03:58 STATS: cache [user], database [325 calls, 1 reads, 2 writes]
01.09 13:03:58 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
01.09 13:03:58 READDB: SELECT * FROM Users WHERE ID = 2
01.09 13:03:58 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 2.42 ms]
01.09 13:03:58 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.16 ms]
01.09 13:03:58 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472654256, lastLoginDate => 245, lastLoadDate => 902 }, effects => { list => [] } }}, version => 0, id => 2 } }
01.09 13:03:58 TIME: core/cache.get : 1.99 ms
01.09 13:03:58 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
01.09 13:03:58 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
01.09 13:03:58 STATS: cache [questdata], segments [5 calls, 2 hits, 2 misses]
01.09 13:03:58 STATS: cache [questdata], database [325 calls, 1 reads, 1 writes]
01.09 13:03:58 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
01.09 13:03:58 READDB: SELECT * FROM UserQuests WHERE ID = 2
01.09 13:03:58 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
01.09 13:03:58 TIME: core/cache.get : 1.17 ms
01.09 13:03:58 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
01.09 13:03:58 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 13:03:58 TIME: core/user.loginPost : 0.08 ms
01.09 13:03:58 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 13:03:58 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 13:03:58 DB: SELECT id FROM battle WHERE avaliable = true AND finished <> true
01.09 13:03:58 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => { r => #abstract }, errorCode => ok, _type => vdl/cache.battle.find }
01.09 13:03:58 TIME: vdl/cache.battle.find : 1.75 ms
01.09 13:04:03 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
01.09 13:04:03 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 13:04:03 TIME: core/cache.update : 0.17 ms
01.09 13:04:03 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 2
01.09 13:04:33 TIMER: Clans cache...
01.09 13:04:33 TIMER: Clans cache: 0ms
01.09 13:04:51 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 2, _type => core/cache.update }
01.09 13:04:51 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
01.09 13:04:51 TIME: core/cache.update : 0.15 ms
01.09 13:04:51 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 2, _type => core/cache.update }
01.09 13:04:51 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 13:04:51 TIME: core/cache.update : 3.53 ms
01.09 13:04:51 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 2, _type => core/user.logoutPost }
01.09 13:04:51 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
01.09 13:04:51 TIME: core/user.logoutPost : 0.09 ms
01.09 13:04:51 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 2
01.09 13:04:51 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 2
01.09 13:05:01 BLOCKREMOVE: user 2 removed
01.09 13:05:01 BLOCKREMOVE: questdata 2 removed
01.09 13:05:33 TIMER: Clans cache...
01.09 13:05:33 TIMER: Clans cache: 0ms
01.09 13:05:58 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test', _type => core/server.query }
01.09 13:05:58 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test1' AND Password = E'test'
01.09 13:05:58 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test1, networkid => , isbanned => false, id => 2 }}, errorCode => ok, _type => core/server.query }
01.09 13:05:58 TIME: core/server.query : 2.62 ms
01.09 13:05:58 NET: vdl.0 (thread) request core/user.isOnlineID { id => 2, _type => core/user.isOnlineID }
01.09 13:05:58 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
01.09 13:05:58 TIME: core/user.isOnlineID : 0.11 ms
01.09 13:05:58 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 2, _type => core/cache.get }
01.09 13:05:58 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 13:05:58 STATS: cache [user], segments [11 calls, 6 hits, 4 misses]
01.09 13:05:58 STATS: cache [user], database [445 calls, 2 reads, 4 writes]
01.09 13:05:58 STATS: cache [user], lock [3 calls, 3 attempts, 0 failures]
01.09 13:05:58 READDB: SELECT * FROM Users WHERE ID = 2
01.09 13:05:58 STATS: cache manager [1], get [5 calls, total 0.01 sec spent, avg 1.95 ms]
01.09 13:05:58 STATS: cache manager [1], update [6 calls, total 0 sec spent, avg 0.11 ms]
01.09 13:05:58 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test1, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, networkid => , params => { attrs => { _lastTime.24hr => 1472654256, lastLoginDate => 245, lastLoadDate => 902 }, effects => { list => [] } }}, version => 0, id => 2 } }
01.09 13:05:58 TIME: core/cache.get : 1.82 ms
01.09 13:05:58 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 2, _type => core/cache.get }
01.09 13:05:58 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
01.09 13:05:58 STATS: cache [questdata], segments [9 calls, 4 hits, 4 misses]
01.09 13:05:58 STATS: cache [questdata], database [445 calls, 2 reads, 2 writes]
01.09 13:05:58 STATS: cache [questdata], lock [3 calls, 3 attempts, 0 failures]
01.09 13:05:58 READDB: SELECT * FROM UserQuests WHERE ID = 2
01.09 13:05:58 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 2 } }
01.09 13:05:58 TIME: core/cache.get : 0.98 ms
01.09 13:05:58 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 2, _type => core/user.loginPost, ipAddr => 172.16.30.52 }
01.09 13:05:58 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
01.09 13:05:58 TIME: core/user.loginPost : 0.1 ms
01.09 13:05:58 NET: vdl.0 (thread) request vdl/cache.battle.find { _type => vdl/cache.battle.find }
01.09 13:05:58 DB: SELECT COUNT(*) FROM battle WHERE avaliable = true AND finished <> true
01.09 13:05:58 DB: SELECT id FROM battle WHERE avaliable = true AND finished <> true
01.09 13:05:58 QUEUE: vdl.0 (thread) response vdl/cache.battle.find { list => { r => #abstract }, errorCode => ok, _type => vdl/cache.battle.find }
01.09 13:05:58 TIME: vdl/cache.battle.find : 2.25 ms
01.09 13:06:03 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 2, _type => core/cache.update }
01.09 13:06:03 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
01.09 13:06:03 TIME: core/cache.update : 0.22 ms
01.09 13:06:03 WRITEDB: UPDATE Users SET name = E'test1', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-08-30 15:47:58.935408+03', language = E'en', networkid = E'', params = E'{"attrs":{"_lastTime.24hr":1472654256,"lastLoginDate":245,"lastLoadDate":902},"effects":{"list":[]}}' WHERE ID = 2
01.09 13:07:11 TIMER: Starting timer...
01.09 13:07:11 TIMER: Timer running...
01.09 13:07:11 DB: SELECT * FROM GameVars
01.09 13:07:11 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 13:07:11 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 13:07:11 DB: SELECT * FROM Shops WHERE ID = 1
01.09 13:07:11 TEMP: load ./tmp/quest_daily_ids
01.09 13:07:11 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 13:07:11 TEMP: save ./tmp/quest_daily_ids
01.09 13:07:11 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 13:07:11 QUEUE: vdl.0 (thread) response server.login
01.09 13:07:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 13:07:11 DB: SELECT * FROM LocalizationStrings
01.09 13:07:11 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:07:11 TIME: core/server.query : 5.81 ms
01.09 13:07:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 13:07:12 DB: SELECT * FROM GameVars
01.09 13:07:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:07:12 TIME: core/server.query : 0.85 ms
01.09 13:07:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 13:07:12 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 13:07:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:07:12 TIME: core/server.query : 0.84 ms
01.09 13:07:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 13:07:12 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 13:07:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:07:12 TIME: core/server.query : 0.55 ms
01.09 13:07:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 13:07:12 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 13:07:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:07:12 TIME: core/server.query : 0.62 ms
01.09 13:07:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 13:07:12 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 13:07:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:07:12 TIME: core/server.query : 0.86 ms
01.09 13:07:12 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 13:07:12 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 13:07:12 TIME: core/quest.getDaily : 0.02 ms
01.09 13:07:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 13:07:12 DB: SELECT * FROM UserAttributeTypes
01.09 13:07:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:07:12 TIME: core/server.query : 0.33 ms
01.09 13:07:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 13:07:12 DB: SELECT * FROM UserVariableTypes
01.09 13:07:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:07:12 TIME: core/server.query : 0.59 ms
01.09 13:07:12 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 13:07:12 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
01.09 13:07:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:07:12 TIME: core/server.query : 0.99 ms
01.09 13:07:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
01.09 13:07:12 DB: SELECT * FROM ItemGroups
01.09 13:07:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:07:12 TIME: core/server.query : 0.33 ms
01.09 13:07:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
01.09 13:07:12 DB: SELECT * FROM Bundles ORDER BY ID
01.09 13:07:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:07:12 TIME: core/server.query : 0.58 ms
01.09 13:07:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
01.09 13:07:12 DB: SELECT * FROM BundleItems ORDER BY ID
01.09 13:07:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:07:12 TIME: core/server.query : 0.41 ms
01.09 13:07:12 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
01.09 13:07:12 QUEUE: vdl.0 (thread) response core/shop.getList
01.09 13:07:12 TIME: core/shop.getList : 0.02 ms
01.09 13:07:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
01.09 13:07:12 DB: SELECT * FROM EffectAttributeTypes
01.09 13:07:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:07:12 TIME: core/server.query : 0.47 ms
01.09 13:07:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
01.09 13:07:12 DB: SELECT * FROM Effects
01.09 13:07:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:07:12 TIME: core/server.query : 0.48 ms
01.09 13:07:12 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
01.09 13:07:12 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 13:07:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:07:12 TIME: core/server.query : 0.74 ms
01.09 13:07:12 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
01.09 13:07:12 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 13:07:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:07:12 TIME: core/server.query : 0.63 ms
01.09 13:07:12 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
01.09 13:07:12 DB: SELECT * FROM Badges
01.09 13:07:12 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:07:12 TIME: core/server.query : 0.27 ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans cache: 0ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans cache: 0ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans cache: 0ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans cache: 0ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans cache: 0ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans cache: 0ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans cache: 0ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans cache: 0ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans cache: 0ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans cache: 0ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans cache: 0ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans cache: 0ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans cache: 0ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans cache: 0ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans cache: 0ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans cache: 0ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans cache: 0ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans cache: 0ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans cache: 0ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans cache: 0ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans cache: 0ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans cache: 0ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans cache: 0ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans cache: 0ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans cache: 0ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans cache: 0ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans cache: 0ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans cache: 0ms
01.09 13:07:12 TIMER: Clans cache...
01.09 13:07:12 TIMER: Clans01.09 13:40:56 TIMER: Starting timer...
01.09 13:40:56 TIMER: Timer running...
01.09 13:40:56 DB: SELECT * FROM GameVars
01.09 13:40:56 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 13:40:56 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 13:40:56 DB: SELECT * FROM Shops WHERE ID = 1
01.09 13:40:56 TEMP: load ./tmp/quest_daily_ids
01.09 13:40:56 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 13:40:56 TEMP: save ./tmp/quest_daily_ids
01.09 13:40:56 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 13:40:56 QUEUE: vdl.0 (thread) response server.login
01.09 13:40:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 13:40:56 DB: SELECT * FROM LocalizationStrings
01.09 13:40:56 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:40:56 TIME: core/server.query : 10.96 ms
01.09 13:40:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 13:40:56 DB: SELECT * FROM GameVars
01.09 13:40:56 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:40:56 TIME: core/server.query : 0.69 ms
01.09 13:40:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 13:40:56 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 13:40:56 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:40:56 TIME: core/server.query : 0.76 ms
01.09 13:40:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 13:40:56 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 13:40:56 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:40:56 TIME: core/server.query : 0.65 ms
01.09 13:40:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 13:40:56 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 13:40:56 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:40:56 TIME: core/server.query : 0.69 ms
01.09 13:40:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 13:40:56 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 13:40:56 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:40:56 TIME: core/server.query : 0.99 ms
01.09 13:40:56 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 13:40:56 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 13:40:56 TIME: core/quest.getDaily : 0.04 ms
01.09 13:40:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 13:40:56 DB: SELECT * FROM UserAttributeTypes
01.09 13:40:56 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:40:56 TIME: core/server.query : 0.44 ms
01.09 13:40:56 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 13:40:56 DB: SELECT * FROM UserVariableTypes
01.09 13:40:56 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:40:56 TIME: core/server.query : 0.72 ms
01.09 13:40:56 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 13:40:56 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, 01.09 13:53:16 TIMER: Starting timer...
01.09 13:53:16 TIMER: Timer running...
01.09 13:53:16 DB: SELECT * FROM GameVars
01.09 13:53:16 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 13:53:16 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 13:53:16 DB: SELECT * FROM Shops WHERE ID = 1
01.09 13:53:16 TEMP: load ./tmp/quest_daily_ids
01.09 13:53:16 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 13:53:16 TEMP: save ./tmp/quest_daily_ids
01.09 13:53:16 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 13:53:16 QUEUE: vdl.0 (thread) response server.login
01.09 13:53:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 13:53:16 DB: SELECT * FROM LocalizationStrings
01.09 13:53:16 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:16 TIME: core/server.query : 5.82 ms
01.09 13:53:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 13:53:16 DB: SELECT * FROM GameVars
01.09 13:53:16 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:16 TIME: core/server.query : 0.51 ms
01.09 13:53:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 13:53:16 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 13:53:16 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:16 TIME: core/server.query : 0.6 ms
01.09 13:53:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 13:53:16 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 13:53:16 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:16 TIME: core/server.query : 0.41 ms
01.09 13:53:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 13:53:16 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 13:53:16 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:16 TIME: core/server.query : 0.65 ms
01.09 13:53:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 13:53:16 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 13:53:16 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:16 TIME: core/server.query : 0.83 ms
01.09 13:53:16 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 13:53:16 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 13:53:16 TIME: core/quest.getDaily : 0.03 ms
01.09 13:53:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 13:53:16 DB: SELECT * FROM UserAttributeTypes
01.09 13:53:16 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:16 TIME: core/server.query : 0.34 ms
01.09 13:53:16 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 13:53:16 DB: SELECT * FROM UserVariableTypes
01.09 13:53:16 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:16 TIME: core/server.query : 0.3 ms
01.09 13:53:16 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 13:53:16 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.T01.09 13:53:26 TIMER: Starting timer...
01.09 13:53:26 TIMER: Timer running...
01.09 13:53:26 DB: SELECT * FROM GameVars
01.09 13:53:26 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 13:53:26 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 13:53:26 DB: SELECT * FROM Shops WHERE ID = 1
01.09 13:53:26 TEMP: load ./tmp/quest_daily_ids
01.09 13:53:26 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 13:53:26 TEMP: save ./tmp/quest_daily_ids
01.09 13:53:26 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 13:53:26 QUEUE: vdl.0 (thread) response server.login
01.09 13:53:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 13:53:26 DB: SELECT * FROM LocalizationStrings
01.09 13:53:26 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:26 TIME: core/server.query : 11.63 ms
01.09 13:53:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 13:53:26 DB: SELECT * FROM GameVars
01.09 13:53:26 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:26 TIME: core/server.query : 0.53 ms
01.09 13:53:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 13:53:26 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 13:53:26 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:26 TIME: core/server.query : 0.68 ms
01.09 13:53:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 13:53:26 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 13:53:26 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:26 TIME: core/server.query : 0.55 ms
01.09 13:53:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 13:53:26 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 13:53:26 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:26 TIME: core/server.query : 0.58 ms
01.09 13:53:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 13:53:26 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 13:53:26 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:26 TIME: core/server.query : 0.78 ms
01.09 13:53:26 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 13:53:26 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 13:53:26 TIME: core/quest.getDaily : 0.04 ms
01.09 13:53:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 13:53:26 DB: SELECT * FROM UserAttributeTypes
01.09 13:53:26 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:26 TIME: core/server.query : 0.49 ms
01.09 13:53:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 13:53:26 DB: SELECT * FROM UserVariableTypes
01.09 13:53:26 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:26 TIME: core/server.query : 0.34 ms
01.09 13:53:26 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 13:53:26 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, 01.09 13:53:31 TIMER: Starting timer...
01.09 13:53:31 TIMER: Timer running...
01.09 13:53:31 DB: SELECT * FROM GameVars
01.09 13:53:31 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 13:53:31 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 13:53:31 DB: SELECT * FROM Shops WHERE ID = 1
01.09 13:53:31 TEMP: load ./tmp/quest_daily_ids
01.09 13:53:31 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 13:53:31 TEMP: save ./tmp/quest_daily_ids
01.09 13:53:31 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 13:53:31 QUEUE: vdl.0 (thread) response server.login
01.09 13:53:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 13:53:31 DB: SELECT * FROM LocalizationStrings
01.09 13:53:31 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:31 TIME: core/server.query : 6.21 ms
01.09 13:53:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 13:53:31 DB: SELECT * FROM GameVars
01.09 13:53:31 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:31 TIME: core/server.query : 0.9 ms
01.09 13:53:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 13:53:31 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 13:53:31 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:31 TIME: core/server.query : 1.05 ms
01.09 13:53:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 13:53:31 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 13:53:31 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:31 TIME: core/server.query : 0.57 ms
01.09 13:53:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 13:53:31 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 13:53:31 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:31 TIME: core/server.query : 0.71 ms
01.09 13:53:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 13:53:31 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 13:53:31 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:31 TIME: core/server.query : 1.2 ms
01.09 13:53:31 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 13:53:31 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 13:53:31 TIME: core/quest.getDaily : 0.02 ms
01.09 13:53:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 13:53:31 DB: SELECT * FROM UserAttributeTypes
01.09 13:53:31 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:31 TIME: core/server.query : 0.48 ms
01.09 13:53:31 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 13:53:31 DB: SELECT * FROM UserVariableTypes
01.09 13:53:31 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:31 TIME: core/server.query : 0.43 ms
01.09 13:53:31 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 13:53:31 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.T01.09 13:53:48 TIMER: Starting timer...
01.09 13:53:48 TIMER: Timer running...
01.09 13:53:48 DB: SELECT * FROM GameVars
01.09 13:53:48 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.09 13:53:48 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.09 13:53:48 DB: SELECT * FROM Shops WHERE ID = 1
01.09 13:53:48 TEMP: load ./tmp/quest_daily_ids
01.09 13:53:48 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.09 13:53:48 TEMP: save ./tmp/quest_daily_ids
01.09 13:53:48 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
01.09 13:53:48 QUEUE: vdl.0 (thread) response server.login
01.09 13:53:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.09 13:53:48 DB: SELECT * FROM LocalizationStrings
01.09 13:53:48 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:48 TIME: core/server.query : 6.53 ms
01.09 13:53:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.09 13:53:48 DB: SELECT * FROM GameVars
01.09 13:53:48 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:48 TIME: core/server.query : 0.62 ms
01.09 13:53:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.09 13:53:48 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.09 13:53:48 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:48 TIME: core/server.query : 0.75 ms
01.09 13:53:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.09 13:53:48 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.09 13:53:48 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:48 TIME: core/server.query : 0.45 ms
01.09 13:53:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.09 13:53:48 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.09 13:53:48 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:48 TIME: core/server.query : 0.5 ms
01.09 13:53:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.09 13:53:48 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.09 13:53:48 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:48 TIME: core/server.query : 0.95 ms
01.09 13:53:48 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.09 13:53:48 QUEUE: vdl.0 (thread) response core/quest.getDaily
01.09 13:53:48 TIME: core/quest.getDaily : 0.02 ms
01.09 13:53:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.09 13:53:48 DB: SELECT * FROM UserAttributeTypes
01.09 13:53:48 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:48 TIME: core/server.query : 0.3 ms
01.09 13:53:48 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.09 13:53:48 DB: SELECT * FROM UserVariableTypes
01.09 13:53:48 QUEUE: vdl.0 (thread) response core/server.query
01.09 13:53:48 TIME: core/server.query : 0.3 ms
01.09 13:53:48 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.09 13:53:48 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.Ty