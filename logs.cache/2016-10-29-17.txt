29.10 17:00:21 WRITEDB: UPDATE Battle SET secondid = E'null', turnid = E'104', finished = E'false', firstid = E'104', params = E'{}', avaliable = E'false' WHERE ID = 98
29.10 17:00:26 BLOCKREMOVE: tournament 1 removed
29.10 17:00:31 BLOCKREMOVE: battle 98 removed
29.10 17:04:22 TIMER: Starting timer...
29.10 17:04:22 TIMER: Timer running...
29.10 17:04:22 DB: SELECT * FROM GameVars
29.10 17:04:22 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
29.10 17:04:22 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
29.10 17:04:22 DB: SELECT * FROM Shops WHERE ID = 1
29.10 17:04:22 TEMP: load ./tmp/quest_daily_ids
29.10 17:04:22 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
29.10 17:04:22 TEMP: save ./tmp/quest_daily_ids
29.10 17:04:22 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
29.10 17:04:22 QUEUE: vdl.0 (thread) response server.login
29.10 17:04:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
29.10 17:04:22 DB: SELECT * FROM LocalizationStrings
29.10 17:04:22 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:04:22 TIME: core/server.query : 6.57 ms
29.10 17:04:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
29.10 17:04:22 DB: SELECT * FROM GameVars
29.10 17:04:22 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:04:22 TIME: core/server.query : 0.51 ms
29.10 17:04:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
29.10 17:04:22 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
29.10 17:04:22 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:04:22 TIME: core/server.query : 0.69 ms
29.10 17:04:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
29.10 17:04:22 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
29.10 17:04:22 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:04:22 TIME: core/server.query : 0.44 ms
29.10 17:04:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
29.10 17:04:22 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
29.10 17:04:22 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:04:22 TIME: core/server.query : 0.59 ms
29.10 17:04:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
29.10 17:04:22 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
29.10 17:04:22 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:04:22 TIME: core/server.query : 0.74 ms
29.10 17:04:22 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
29.10 17:04:22 QUEUE: vdl.0 (thread) response core/quest.getDaily
29.10 17:04:22 TIME: core/quest.getDaily : 0.02 ms
29.10 17:04:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
29.10 17:04:22 DB: SELECT * FROM UserAttributeTypes
29.10 17:04:22 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:04:22 TIME: core/server.query : 0.31 ms
29.10 17:04:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
29.10 17:04:22 DB: SELECT * FROM UserVariableTypes
29.10 17:04:22 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:04:22 TIME: core/server.query : 0.29 ms
29.10 17:04:22 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
29.10 17:04:22 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
29.10 17:04:22 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:04:22 TIME: core/server.query : 1.12 ms
29.10 17:04:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
29.10 17:04:22 DB: SELECT * FROM ItemGroups
29.10 17:04:22 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:04:22 TIME: core/server.query : 0.32 ms
29.10 17:04:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
29.10 17:04:22 DB: SELECT * FROM Bundles ORDER BY ID
29.10 17:04:22 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:04:22 TIME: core/server.query : 0.52 ms
29.10 17:04:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
29.10 17:04:22 DB: SELECT * FROM BundleItems ORDER BY ID
29.10 17:04:22 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:04:22 TIME: core/server.query : 0.36 ms
29.10 17:04:22 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
29.10 17:04:22 QUEUE: vdl.0 (thread) response core/shop.getList
29.10 17:04:22 TIME: core/shop.getList : 0.02 ms
29.10 17:04:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
29.10 17:04:22 DB: SELECT * FROM EffectAttributeTypes
29.10 17:04:22 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:04:22 TIME: core/server.query : 0.33 ms
29.10 17:04:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
29.10 17:04:22 DB: SELECT * FROM Effects
29.10 17:04:22 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:04:22 TIME: core/server.query : 0.29 ms
29.10 17:04:22 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
29.10 17:04:22 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
29.10 17:04:22 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:04:22 TIME: core/server.query : 0.84 ms
29.10 17:04:22 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
29.10 17:04:22 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
29.10 17:04:22 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:04:22 TIME: core/server.query : 0.56 ms
29.10 17:04:22 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
29.10 17:04:22 DB: SELECT * FROM Badges
29.10 17:04:22 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:04:22 TIME: core/server.query : 0.61 ms
29.10 17:04:56 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
29.10 17:04:56 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
29.10 17:04:56 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:04:56 TIME: core/server.query : 2.69 ms
29.10 17:04:56 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
29.10 17:04:56 QUEUE: vdl.0 (thread) response core/user.isOnlineID
29.10 17:04:56 TIME: core/user.isOnlineID : 0.12 ms
29.10 17:04:56 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
29.10 17:04:56 READDB: SELECT * FROM Users WHERE ID = 107
29.10 17:04:56 QUEUE: vdl.0 (thread) response core/cache.get
29.10 17:04:56 TIME: core/cache.get : 3.83 ms
29.10 17:04:56 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
29.10 17:04:56 READDB: SELECT * FROM UserQuests WHERE ID = 107
29.10 17:04:56 QUEUE: vdl.0 (thread) response core/cache.get
29.10 17:04:56 TIME: core/cache.get : 1.28 ms
29.10 17:04:56 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
29.10 17:04:56 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
29.10 17:04:56 TIME: core/user.loginPost : 0.12 ms
29.10 17:05:02 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
29.10 17:05:02 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
29.10 17:05:02 TIME: core/cache.update : 0.21 ms
29.10 17:05:03 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477748429,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}' WHERE ID = 107
29.10 17:05:22 TIMER: Clans cache...
29.10 17:05:22 TIMER: Clans cache: 0ms
29.10 17:05:22 TIMER: Check tournament...
29.10 17:05:22 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:05' OR rounddate = '2016-29-10 17:05' AND status <> 'finished'
29.10 17:05:22 TIMER: Check tournament: 2ms
29.10 17:05:22 TIMER: Clans cache...
29.10 17:05:22 TIMER: Clans cache: 0ms
29.10 17:05:22 TIMER: Check tournament...
29.10 17:05:22 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:06' OR rounddate = '2016-29-10 17:06' AND status <> 'finished'
29.10 17:05:22 TIMER: Check tournament: 1ms
29.10 17:05:22 TIMER: Clans cache...
29.10 17:05:22 TIMER: Clans cache: 0ms
29.10 17:05:22 TIMER: Check tournament...
29.10 17:05:22 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:07' OR rounddate = '2016-29-10 17:07' AND status <> 'finished'
29.10 17:05:22 TIMER: Check tournament: 1ms
29.10 17:05:22 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
29.10 17:05:22 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
29.10 17:05:22 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
29.10 17:05:22 TIME: core/server.query : 0.67 ms
29.10 17:05:22 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
29.10 17:05:22 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
29.10 17:05:22 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
29.10 17:05:22 STATS: cache [battle], database [240 calls, 0 reads, 0 writes]
29.10 17:05:22 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
29.10 17:05:22 READDB: SELECT * FROM Battle WHERE ID = 0
29.10 17:05:22 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
29.10 17:05:22 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 156
Called from modules/VDLCache.hx line 149
Called from modules/VDLCache.hx line 99
Called from snipe/cache/CacheServer.hx line 487
29.10 17:05:22 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
29.10 17:05:22 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
29.10 17:05:22 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
29.10 17:05:22 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
29.10 17:05:22 STATS: cache [user], database [240 calls, 1 reads, 1 writes]
29.10 17:05:22 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
29.10 17:05:22 STATS: cache manager [1], get [2 calls, total 0 sec spent, avg 2.47 ms]
29.10 17:05:22 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.08 ms]
29.10 17:05:22 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
29.10 17:05:22 TIME: core/cache.update : 0.18 ms
29.10 17:05:22 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
29.10 17:05:22 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
29.10 17:05:22 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
29.10 17:05:22 STATS: cache [questdata], database [240 calls, 1 reads, 0 writes]
29.10 17:05:22 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
29.10 17:05:22 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
29.10 17:05:22 TIME: core/cache.update : 0.12 ms
29.10 17:05:22 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
29.10 17:05:22 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
29.10 17:05:22 TIME: core/user.logoutPost : 0.17 ms
29.10 17:05:22 TIMER: Clans cache...
29.10 17:05:22 TIMER: Clans cache: 0ms
29.10 17:05:22 TIMER: Check tournament...
29.10 17:05:22 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:08' OR rounddate = '2016-29-10 17:08' AND status <> 'finished'
29.10 17:05:22 TIMER: Check tournament: 0ms
29.10 17:05:22 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477748429,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}' WHERE ID = 107
29.10 17:05:22 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
29.10 17:08:32 BLOCKREMOVE: user 107 removed
29.10 17:08:32 BLOCKREMOVE: questdata 107 removed
29.10 17:09:22 TIMER: Clans cache...
29.10 17:09:22 TIMER: Clans cache: 0ms
29.10 17:09:22 TIMER: Check tournament...
29.10 17:09:22 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:09' OR rounddate = '2016-29-10 17:09' AND status <> 'finished'
29.10 17:09:22 TIMER: Check tournament: 0ms
29.10 17:09:22 TIMER: Clans cache...
29.10 17:09:22 TIMER: Clans cache: 0ms
29.10 17:09:22 TIMER: Check tournament...
29.10 17:09:22 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:10' OR rounddate = '2016-29-10 17:10' AND status <> 'finished'
29.10 17:09:22 TIMER: Check tournament: 1ms
29.10 17:09:22 TIMER: Clans cache...
29.10 17:09:22 TIMER: Clans cache: 0ms
29.10 17:09:22 TIMER: Check tournament...
29.10 17:09:22 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:11' OR rounddate = '2016-29-10 17:11' AND status <> 'finished'
29.10 17:09:22 TIMER: Check tournament: 1ms
29.10 17:09:22 TIMER: Clans cache...
29.10 17:09:22 TIMER: Clans cache: 0ms
29.10 17:09:22 TIMER: Check tournament...
29.10 17:09:22 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:12' OR rounddate = '2016-29-10 17:12' AND status <> 'finished'
29.10 17:09:22 TIMER: Check tournament: 1ms
29.10 17:12:53 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM users, _type => core/server.query }
29.10 17:12:53 DB: SELECT * FROM users
29.10 17:12:53 QUEUE: vdl.0 (thread) response core/server.query { list => {{ password => , name => --- DEFAULT ATTRIBUTES ---, networkid => , params => {"attrs":{},"inventory":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:45:16.008574+03, language =>   , id => 1, deleted => false }, { password => test, name => test3, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:08.364133+03, language =>   , id => 4, deleted => false }, { password => test, name => test5, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:15.596579+03, language =>   , id => 6, deleted => false }, { password => test, name => test6, networkid => , params => , networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:19.233499+03, language =>   , id => 7, deleted => false }, { password => uid24, name => uid24, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:36:42.292969+03, language =>   , id => 24, deleted => false }, { password => uid25, name => uid25, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:42:14.268266+03, language =>   , id => 25, deleted => false }, { password => test, name => test7, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-09-07 16:46:43.688817+03, language =>   , id => 8, deleted => false }, { password => uid26, name => uid26, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:52:51.409771+03, language =>   , id => 26, deleted => false }, { password => uid37, name => uid37, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476461351,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 19:09:11.07001+03, language => en, id => 37, deleted => false }, { password => uid9, name => uid9, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-11 20:36:09.090394+03, language =>   , id => 9, deleted => false }, { password => uid32, name => uid32, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271969,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:32:48.215636+03, language => en, id => 32, deleted => false }, { password => uid27, name => uid27, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476269621,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:53:40.789776+03, language => en, id => 27, deleted => false }, { password => uid10, name => uid10, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 11:12:48.168059+03, language =>   , id => 10, deleted => false }, { password => uid11, name => uid11, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:33:27.3109+03, language =>   , id => 11, deleted => false }, { password => uid12, name => uid12, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:47:26.670465+03, language =>   , id => 12, deleted => false }, { password => uid13, name => uid13, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:51:08.341292+03, language =>   , id => 13, deleted => false }, { password => uid14, name => uid14, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:53:34.360658+03, language =>   , id => 14, deleted => false }, { password => uid15, name => uid15, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:55:14.160619+03, language =>   , id => 15, deleted => false }, { password => uid28, name => uid28, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476269710,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:55:09.527211+03, language => en, id => 28, deleted => false }, { password => uid16, name => uid16, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 12:59:18.86185+03, language =>   , id => 16, deleted => false }, { password => test, name => test2, networkid => , params => {"attrs":{"_lastTime.24hr":1476808882,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:03.859813+03, language => en, id => 3, deleted => false }, { password => test, name => test11, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:18:04.647106+03, language =>   , id => 39, deleted => false }, { password => uid29, name => uid29, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271397,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:23:17.10609+03, language => en, id => 29, deleted => false }, { password => uid17, name => uid17, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:07:15.262858+03, language =>   , id => 17, deleted => false }, { password => uid18, name => uid18, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:10:03.885555+03, language =>   , id => 18, deleted => false }, { password => uid19, name => uid19, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:11:41.868111+03, language =>   , id => 19, deleted => false }, { password => uid20, name => uid20, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:13:57.605493+03, language =>   , id => 20, deleted => false }, { password => uid21, name => uid21, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:16:21.670662+03, language =>   , id => 21, deleted => false }, { password => uid22, name => uid22, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:18:13.422519+03, language =>   , id => 22, deleted => false }, { password => uid23, name => uid23, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 13:33:08.78413+03, language =>   , id => 23, deleted => false }, { password => uid34, name => uid34, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476437991,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 12:39:51.725362+03, language => en, id => 34, deleted => false }, { password => uid30, name => uid30, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271613,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:26:51.842745+03, language => en, id => 30, deleted => false }, { password => test, name => test12, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:21:55.316231+03, language =>   , id => 40, deleted => false }, { password => uid31, name => uid31, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476271703,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:28:22.51548+03, language => en, id => 31, deleted => false }, { password => uid35, name => uid35, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476458014,"lastLoginDate":288,"lastLoadDate":1015},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 18:13:33.360887+03, language => en, id => 35, deleted => false }, { password => uid33, name => uid33, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476272110,"lastLoginDate":286,"lastLoadDate":1013},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-12 14:35:09.155569+03, language => en, id => 33, deleted => false }, { password => test, name => test13, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:30:08.433611+03, language =>   , id => 41, deleted => false }, { password => uid38, name => uid38, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476782075,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:14:32.809+03, language => en, id => 38, deleted => false }, { password => test, name => test14, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:31:52.285659+03, language =>   , id => 42, deleted => false }, { password => test, name => test15, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:40:42.354135+03, language =>   , id => 43, deleted => false }, { password => uid36, name => uid36, networkid => , params => {"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476789639,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-14 18:14:45.120358+03, language => en, id => 36, deleted => false }, { password => uid45, name => uid45, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793290,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:21:30.078736+03, language => en, id => 45, deleted => false }, { password => uid46, name => uid46, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793424,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:23:44.261533+03, language => en, id => 46, deleted => false }, { password => uid47, name => uid47, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476793513,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 15:25:12.83212+03, language => en, id => 47, deleted => false }, { password => test, name => test4, networkid => , params => {"attrs":{"_lastTime.24hr":1476809210,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:48:11.728197+03, language => en, id => 5, deleted => false }, { password => test, name => test1, networkid => , params => {"attrs":{"_lastTime.24hr":1477308461,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-08-30 15:47:58.935408+03, language => en, id => 2, deleted => false }, { password => uid64, name => uid64, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476877181,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 14:39:41.700061+03, language => en, id => 64, deleted => false }, { password => uid58, name => uid58, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809753,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:55:53.508049+03, language => en, id => 58, deleted => false }, { password => uid48, name => uid48, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807085,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:11:25.882545+03, language => en, id => 48, deleted => false }, { password => uid49, name => uid49, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807618,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:20:16.265259+03, language => en, id => 49, deleted => false }, { password => uid50, name => uid50, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476807854,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:24:12.892256+03, language => en, id => 50, deleted => false }, { password => uid59, name => uid59, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809815,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:56:55.344336+03, language => en, id => 59, deleted => false }, { password => uid51, name => uid51, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808189,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:29:47.381194+03, language => en, id => 51, deleted => false }, { password => uid52, name => uid52, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808378,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:32:58.719756+03, language => en, id => 52, deleted => false }, { password => uid53, name => uid53, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808795,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:39:54.973899+03, language => en, id => 53, deleted => false }, { password => uid54, name => uid54, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476808869,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:41:09.113701+03, language => en, id => 54, deleted => false }, { password => uid67, name => uid67, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476886636,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:17:16.853975+03, language => en, id => 67, deleted => false }, { password => uid55, name => uid55, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809185,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:46:25.229927+03, language => en, id => 55, deleted => false }, { password => uid65, name => uid65, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476879545,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 15:19:05.058893+03, language => en, id => 65, deleted => false }, { password => uid60, name => uid60, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809868,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:57:48.24719+03, language => en, id => 60, deleted => false }, { password => uid56, name => uid56, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809466,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:51:06.257024+03, language => en, id => 56, deleted => false }, { password => uid57, name => uid57, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476809529,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 19:52:09.241918+03, language => en, id => 57, deleted => false }, { password => uid61, name => uid61, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810127,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:02:07.43066+03, language => en, id => 61, deleted => false }, { password => uid62, name => uid62, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810165,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:02:45.274383+03, language => en, id => 62, deleted => false }, { password => qweqwe, name => asdasd, networkid => , params => {"info":{"city":"Dsadasd","year":"1231","email":"asdasdas"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:53:08.822508+03, language =>   , id => 69, deleted => false }, { password => uid66, name => uid66, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476882998,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 16:16:38.334095+03, language => en, id => 66, deleted => false }, { password => uid63, name => uid63, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476810879,"lastLoginDate":292,"lastLoadDate":1019},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 20:14:39.877987+03, language => en, id => 63, deleted => false }, { password => uid73, name => uid73, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889025,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:57:04.529542+03, language => en, id => 73, deleted => false }, { password => uid71, name => uid71, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476888930,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:55:29.621522+03, language => en, id => 71, deleted => false }, { password => uid68, name => uid68, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476888788,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:53:08.78775+03, language => en, id => 68, deleted => false }, { password => 123123, name => 123123, networkid => , params => {"info":{"city":"Weqwe","year":"1231","email":"123123"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:54:22.233721+03, language =>   , id => 70, deleted => false }, { password => qweqwe, name => 1qweqwe, networkid => , params => {"info":{"city":"Qweqwe","year":"1231","email":"qweqwe"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:56:17.221331+03, language =>   , id => 72, deleted => false }, { password => 123123, name => 123qwe, networkid => , params => {"info":{"city":"Wqe","year":"1233","email":"123qwe"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 17:59:29.773441+03, language =>   , id => 74, deleted => false }, { password => uid75, name => uid75, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889477,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:04:35.916538+03, language => en, id => 75, deleted => false }, { password => test, name => test16, networkid => , params => {"info":{"city":"kazan"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476890115,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-18 12:43:02.694689+03, language => en, id => 44, deleted => false }, { password => uid77, name => uid77, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476889607,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:06:46.41184+03, language => en, id => 77, deleted => false }, { password => 123456, name => test20, networkid => , params => {"info":{"city":"Weqwe","year":"1231","email":"123"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477646178,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 12:16:18.03489+03, language => en, id => 96, deleted => false }, { password => uid78, name => uid78, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476890199,"lastLoginDate":293,"lastLoadDate":1020},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:16:37.399803+03, language => en, id => 78, deleted => false }, { password => uid83, name => uid83, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961590,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:06:28.765885+03, language => en, id => 83, deleted => false }, { password => uid79, name => uid79, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476959779,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 13:36:18.869521+03, language => en, id => 79, deleted => false }, { password => uid89, name => uid89, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477308423,"lastLoginDate":298,"lastLoadDate":1025},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-24 14:26:57.401644+03, language => en, id => 89, deleted => false }, { password => uid84, name => uid84, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961768,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:09:27.02443+03, language => en, id => 84, deleted => false }, { password => uid102, name => uid102, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477660100,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:08:15.479957+03, language => en, id => 102, deleted => false }, { password => uid80, name => uid80, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476960874,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 13:54:32.93048+03, language => en, id => 80, deleted => false }, { password => uid81, name => uid81, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961061,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 13:57:40.114003+03, language => en, id => 81, deleted => false }, { password => uid85, name => uid85, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476962319,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:18:38.418977+03, language => en, id => 85, deleted => false }, { password => 123123, name => Tester, networkid => , params => {"info":{"city":"Dsda","year":"1231","email":"123123"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:58:49.229528+03, language =>   , id => 86, deleted => false }, { password => qweqwe, name => Acterix, networkid => , params => {"info":{"city":"Weqwe","year":"2312","email":"eqwe123"},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 15:39:29.554557+03, language =>   , id => 90, deleted => false }, { password => uid91, name => uid91, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477399413,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 15:43:32.477232+03, language => en, id => 91, deleted => false }, { password => uid82, name => uid82, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476961257,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 14:00:56.513148+03, language => en, id => 82, deleted => false }, { password => uid87, name => uid87, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476968972,"lastLoginDate":294,"lastLoadDate":1021},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-20 16:09:31.194602+03, language => en, id => 87, deleted => false }, { password => uid88, name => uid88, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477049264,"lastLoginDate":295,"lastLoadDate":1022},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-21 14:27:43.099186+03, language => en, id => 88, deleted => false }, { password => 123456, name => test17, networkid => , params => {"info":{"city":"","year":"","email":"asda"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477399457,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 15:44:17.274208+03, language => en, id => 92, deleted => false }, { password => uid95, name => uid95, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477489312,"lastLoginDate":300,"lastLoadDate":1027},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 16:40:34.208622+03, language => en, id => 95, deleted => false }, { password => uid93, name => uid93, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477400907,"lastLoginDate":299,"lastLoadDate":1026},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 16:08:27.066262+03, language => en, id => 93, deleted => false }, { password => uid94, name => uid94, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477655031,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-25 16:32:22.177493+03, language => en, id => 94, deleted => false }, { password => kO2YJdf, name => Aimer, networkid => , params => {"info":{"city":"Kazan","year":"1993","email":"rabpoll1@ya.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477646117,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-19 18:05:38.946809+03, language => en, id => 76, deleted => false }, { password => qwerty, name => qwerty, networkid => , params => {"info":{"city":"Qwety","year":"123","email":"qwrtty"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477748645,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:12:35.945256+03, language => en, id => 104, deleted => false }, { password => uid98, name => uid98, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477659590,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 15:59:47.355767+03, language => en, id => 98, deleted => false }, { password => uid97, name => uid97, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477647307,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 12:35:05.771011+03, language => en, id => 97, deleted => false }, { password => uid99, name => uid99, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477659641,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:00:39.9083+03, language => en, id => 99, deleted => false }, { password => uid103, name => uid103, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477660355,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:12:35.388519+03, language => en, id => 103, deleted => false }, { password => qwerty, name => nelli8, networkid => , params => {"info":{"city":"Kazan","year":"","email":"nlqbunskaha@mail.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477659784,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:03:03.386319+03, language => en, id => 101, deleted => false }, { password => uid105, name => uid105, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477661095,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:24:51.972524+03, language => en, id => 105, deleted => false }, { password => uid106, name => uid106, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477661732,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:35:25.243155+03, language => en, id => 106, deleted => false }, { password => test, name => test67, networkid => , params => {"info":{"city":"","year":"","email":""},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477659775,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:02:55.698999+03, language => en, id => 100, deleted => false }, { password => uid108, name => uid108, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477661911,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:38:24.62117+03, language => en, id => 108, deleted => false }, { password => uid109, name => uid109, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477661920,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:38:37.423978+03, language => en, id => 109, deleted => false }, { password => uid111, name => uid111, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477662049,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:40:47.262501+03, language => en, id => 111, deleted => false }, { password => ass12, name => ass12, networkid => , params => {"info":{"city":"","year":"","email":""},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477661977,"lastLoginDate":302,"lastLoadDate":1029},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:39:37.381394+03, language => en, id => 110, deleted => false }, { password => uid112, name => uid112, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477747925,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-29 16:31:59.278542+03, language => en, id => 112, deleted => false }, { password => uid107, name => uid107, networkid => , params => {"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477748429,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}, networktype =>   , email => , isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, id => 107, deleted => false }}, errorCode => ok, _type => core/server.query }
29.10 17:12:53 TIME: core/server.query : 3.35 ms
29.10 17:12:53 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM Users WHERE Name = E'uid113', _type => core/server.query }
29.10 17:12:53 DB: SELECT ID FROM Users WHERE Name = E'uid113'
29.10 17:12:53 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
29.10 17:12:53 TIME: core/server.query : 0.98 ms
29.10 17:12:53 NET: vdl.0 (thread) request core/server.query { q => SELECT nextval('Users_id_seq') AS id, _type => core/server.query }
29.10 17:12:53 DB: SELECT nextval('Users_id_seq') AS id
29.10 17:12:53 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 113 }}, errorCode => ok, _type => core/server.query }
29.10 17:12:53 TIME: core/server.query : 22.79 ms
29.10 17:12:53 NET: vdl.0 (thread) request core/user.register { password => uid113, name => uid113, fullParams => { password => uid113, name => uid113, networkid => , networktype => , messageType => user.register, id => 113 }, networkid => , connectionID => 18986721, networktype => , email => , id => 113, _type => core/user.register }
29.10 17:12:53 QUEUE: vdl.0 (thread) response core/user.register { errorCode => ok, _type => core/user.register }
29.10 17:12:53 TIME: core/user.register : 0.05 ms
29.10 17:12:53 ASYNCDB: INSERT INTO Users (ID, Name, NetworkID, NetworkType, Password, Email, RegDate) VALUES (113,E'uid113',E'',E'',E'uid113',E'', now())
29.10 17:12:53 ASYNCDB: INSERT INTO UserRatings (UserID, Points) VALUES (113, 0)
29.10 17:12:53 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
29.10 17:12:53 STATS: cache [user], segments [6 calls, 3 hits, 2 misses]
29.10 17:12:53 STATS: cache [user], database [512 calls, 1 reads, 2 writes]
29.10 17:12:53 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
29.10 17:12:53 READDB: SELECT * FROM Users WHERE ID = 113
29.10 17:12:53 STATS: cache manager [1], get [3 calls, total 0.01 sec spent, avg 1.89 ms]
29.10 17:12:53 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.08 ms]
29.10 17:12:53 READDB: SELECT * FROM Users WHERE ID = 1
29.10 17:12:53 READDB: SELECT ID FROM UserQuests WHERE ID = 113
29.10 17:12:53 READDB: INSERT INTO UserQuests (ID) VALUES (113)
29.10 17:12:53 QUEUE: vdl.0 (thread) response core/user.registerResponse { password => uid113, name => uid113, _isNotify => true, fullParams => { password => uid113, name => uid113, networkid => , networktype => , messageType => user.register, id => 113 }, networkid => , connectionID => 18986721, networktype => , email => , id => 113, _type => core/user.registerResponse }
29.10 17:12:59 WRITEDB: UPDATE Users SET name = E'uid113', deleted = E'false', email = E'', networktype = E'  ', password = E'uid113', isbanned = E'false', regdate = E'2016-10-29 17:12:53.911759+03', language = E'  ', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{},"effects":{"list":[]}}' WHERE ID = 113
29.10 17:13:00 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid113' AND Password = E'uid113', _type => core/server.query }
29.10 17:13:00 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid113' AND Password = E'uid113'
29.10 17:13:00 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid113, networkid => , isbanned => false, id => 113 }}, errorCode => ok, _type => core/server.query }
29.10 17:13:00 TIME: core/server.query : 1.87 ms
29.10 17:13:00 NET: vdl.0 (thread) request core/user.isOnlineID { id => 113, _type => core/user.isOnlineID }
29.10 17:13:00 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
29.10 17:13:00 TIME: core/user.isOnlineID : 0.06 ms
29.10 17:13:00 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 113, _type => core/cache.get }
29.10 17:13:00 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid113, deleted => false, email => , networktype =>   , password => uid113, isbanned => false, regdate => 2016-10-29 17:12:53.911759+03, language =>   , networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => {}, effects => { list => [] } }}, version => 1, id => 113 } }
29.10 17:13:00 TIME: core/cache.get : 0.18 ms
29.10 17:13:00 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 113, _type => core/cache.get }
29.10 17:13:00 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
29.10 17:13:00 STATS: cache [questdata], segments [5 calls, 2 hits, 2 misses]
29.10 17:13:00 STATS: cache [questdata], database [518 calls, 1 reads, 1 writes]
29.10 17:13:00 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
29.10 17:13:00 READDB: SELECT * FROM UserQuests WHERE ID = 113
29.10 17:13:00 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => {}}, version => 0, id => 113 } }
29.10 17:13:00 TIME: core/cache.get : 0.95 ms
29.10 17:13:00 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 113, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
29.10 17:13:00 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
29.10 17:13:00 TIME: core/user.loginPost : 0.06 ms
29.10 17:13:00 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 113 AND Date = 'today'::timestamp, _type => core/server.query }
29.10 17:13:00 DB: SELECT ID FROM TempUserLogins WHERE UserID = 113 AND Date = 'today'::timestamp
29.10 17:13:00 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
29.10 17:13:00 TIME: core/server.query : 1.23 ms
29.10 17:13:00 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1477750380, lastLoginDate => 303, lastLoadDate => 1030 } }}, type => user, unlock => true, id => 113, _type => core/cache.update, _notify => {{ q => INSERT INTO TempUserLogins (UserID, Date) VALUES (113, 'today'::timestamp), _type => core/server.pending }} }
29.10 17:13:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
29.10 17:13:00 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (113, 'today'::timestamp)
29.10 17:13:00 TIME: core/cache.update : 0.18 ms
29.10 17:13:00 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 113, _type => core/cache.update }
29.10 17:13:00 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
29.10 17:13:00 TIME: core/cache.update : 0.1 ms
29.10 17:13:00 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 113, _type => core/user.logoutPost }
29.10 17:13:00 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
29.10 17:13:00 TIME: core/user.logoutPost : 0.06 ms
29.10 17:13:03 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:13:03 DB: SELECT * FROM tournament
29.10 17:13:03 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
29.10 17:13:03 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
29.10 17:13:03 STATS: cache [tournament], database [522 calls, 0 reads, 0 writes]
29.10 17:13:03 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
29.10 17:13:03 READDB: SELECT * FROM Tournament WHERE ID = 1
29.10 17:13:03 DB: SELECT name FROM users WHERE id = 104
29.10 17:13:03 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => qwerty, id => 104 }], battleActive => null, rounddate => 2016-29-10 17:00, startdate => 2016-29-10 17:00 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:13:03 TIME: vdl/cache.tournament.getAvailableTournament : 2.69 ms
29.10 17:13:04 BLOCKREMOVE: user 1 removed
29.10 17:13:04 WRITEDB: UPDATE Users SET name = E'uid113', deleted = E'false', email = E'', networktype = E'  ', password = E'uid113', isbanned = E'false', regdate = E'2016-10-29 17:12:53.911759+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477750380,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}' WHERE ID = 113
29.10 17:13:05 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 113
29.10 17:13:10 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'nelli8' AND Password = E'qwerty', _type => core/server.query }
29.10 17:13:10 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'nelli8' AND Password = E'qwerty'
29.10 17:13:10 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => nelli8, networkid => , isbanned => false, id => 101 }}, errorCode => ok, _type => core/server.query }
29.10 17:13:10 TIME: core/server.query : 1.54 ms
29.10 17:13:10 NET: vdl.0 (thread) request core/user.isOnlineID { id => 101, _type => core/user.isOnlineID }
29.10 17:13:10 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
29.10 17:13:10 TIME: core/user.isOnlineID : 0.13 ms
29.10 17:13:10 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 101, _type => core/cache.get }
29.10 17:13:10 READDB: SELECT * FROM Users WHERE ID = 101
29.10 17:13:10 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => nelli8, deleted => false, email => , networktype =>   , password => qwerty, isbanned => false, regdate => 2016-10-28 16:03:03.386319+03, language => en, networkid => , params => { info => { city => Kazan, year => , email => nlqbunskaha@mail.ru }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477659784, lastLoginDate => 302, lastLoadDate => 1029 }, effects => { list => [] } }}, version => 0, id => 101 } }
29.10 17:13:10 TIME: core/cache.get : 1.82 ms
29.10 17:13:10 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 101, _type => core/cache.get }
29.10 17:13:10 READDB: SELECT * FROM UserQuests WHERE ID = 101
29.10 17:13:10 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 101 } }
29.10 17:13:10 TIME: core/cache.get : 1.2 ms
29.10 17:13:10 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 101, _type => core/user.loginPost, ipAddr => 172.16.20.79 }
29.10 17:13:10 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
29.10 17:13:10 TIME: core/user.loginPost : 0.17 ms
29.10 17:13:10 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 101 AND Date = 'today'::timestamp, _type => core/server.query }
29.10 17:13:10 DB: SELECT ID FROM TempUserLogins WHERE UserID = 101 AND Date = 'today'::timestamp
29.10 17:13:10 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
29.10 17:13:10 TIME: core/server.query : 1.3 ms
29.10 17:13:10 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (101, 'today'::timestamp)
29.10 17:13:13 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 101, _type => vdl/cache.user.getData }
29.10 17:13:13 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Kazan, year => , email => nlqbunskaha@mail.ru }, errorCode => ok, _type => vdl/cache.user.getData }
29.10 17:13:13 TIME: vdl/cache.user.getData : 0.12 ms
29.10 17:13:14 BLOCKREMOVE: user 113 removed
29.10 17:13:14 BLOCKREMOVE: tournament 1 removed
29.10 17:13:15 BLOCKREMOVE: questdata 113 removed
29.10 17:13:17 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1477750390, lastLoginDate => 303, lastLoadDate => 1030 } }}, type => user, unlock => false, id => 101, _type => core/cache.update }
29.10 17:13:17 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
29.10 17:13:17 TIME: core/cache.update : 0.35 ms
29.10 17:13:17 WRITEDB: UPDATE Users SET name = E'nelli8', deleted = E'false', email = E'', networktype = E'  ', password = E'qwerty', isbanned = E'false', regdate = E'2016-10-28 16:03:03.386319+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"","email":"nlqbunskaha@mail.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477750390,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}' WHERE ID = 101
29.10 17:13:22 TIMER: Clans cache...
29.10 17:13:22 TIMER: Clans cache: 0ms
29.10 17:13:22 TIMER: Check tournament...
29.10 17:13:22 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:13' OR rounddate = '2016-29-10 17:13' AND status <> 'finished'
29.10 17:13:22 TIMER: Check tournament: 0ms
29.10 17:13:24 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:13:24 DB: SELECT * FROM tournament
29.10 17:13:24 READDB: SELECT * FROM Tournament WHERE ID = 1
29.10 17:13:24 DB: SELECT name FROM users WHERE id = 104
29.10 17:13:24 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => qwerty, id => 104 }], battleActive => null, rounddate => 2016-29-10 17:00, startdate => 2016-29-10 17:18 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:13:24 TIME: vdl/cache.tournament.getAvailableTournament : 3.05 ms
29.10 17:13:29 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 101, tournament => 1, _type => vdl/cache.tournament.addUsers }
29.10 17:13:29 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
29.10 17:13:29 TIME: vdl/cache.tournament.addUsers : 0.22 ms
29.10 17:13:29 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:13:29 DB: SELECT * FROM tournament
29.10 17:13:29 DB: SELECT name FROM users WHERE id = 104
29.10 17:13:29 DB: SELECT name FROM users WHERE id = 101
29.10 17:13:29 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => qwerty, id => 104 },{ name => nelli8, id => 101 }], battleActive => null, rounddate => 2016-29-10 17:18, startdate => 2016-29-10 17:18 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:13:29 TIME: vdl/cache.tournament.getAvailableTournament : 1.61 ms
29.10 17:13:30 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-29-10 17:18', roundinterval = E'1', params = E'{"params":{"usersList":[104,101],"usersAll":[104,101]}}', rounddate = E'2016-29-10 17:00' WHERE ID = 1
29.10 17:13:31 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'qwerty' AND Password = E'qwerty', _type => core/server.query }
29.10 17:13:31 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'qwerty' AND Password = E'qwerty'
29.10 17:13:31 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => qwerty, networkid => , isbanned => false, id => 104 }}, errorCode => ok, _type => core/server.query }
29.10 17:13:31 TIME: core/server.query : 1.33 ms
29.10 17:13:31 NET: vdl.0 (thread) request core/user.isOnlineID { id => 104, _type => core/user.isOnlineID }
29.10 17:13:31 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
29.10 17:13:31 TIME: core/user.isOnlineID : 0.12 ms
29.10 17:13:31 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 104, _type => core/cache.get }
29.10 17:13:31 READDB: SELECT * FROM Users WHERE ID = 104
29.10 17:13:31 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => qwerty, deleted => false, email => , networktype =>   , password => qwerty, isbanned => false, regdate => 2016-10-28 16:12:35.945256+03, language => en, networkid => , params => { info => { city => Qwety, year => 123, email => qwrtty }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477748645, lastLoginDate => 303, lastLoadDate => 1030 }, effects => { list => [] } }}, version => 0, id => 104 } }
29.10 17:13:31 TIME: core/cache.get : 1.84 ms
29.10 17:13:31 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 104, _type => core/cache.get }
29.10 17:13:31 READDB: SELECT * FROM UserQuests WHERE ID = 104
29.10 17:13:31 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 104 } }
29.10 17:13:31 TIME: core/cache.get : 1.4 ms
29.10 17:13:31 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 104, _type => core/user.loginPost, ipAddr => 172.16.20.121 }
29.10 17:13:31 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
29.10 17:13:31 TIME: core/user.loginPost : 0.12 ms
29.10 17:13:34 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 104, _type => vdl/cache.user.getData }
29.10 17:13:34 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => Qwety, year => 123, email => qwrtty }, errorCode => ok, _type => vdl/cache.user.getData }
29.10 17:13:34 TIME: vdl/cache.user.getData : 0.2 ms
29.10 17:13:35 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:13:35 DB: SELECT * FROM tournament
29.10 17:13:35 DB: SELECT name FROM users WHERE id = 104
29.10 17:13:35 DB: SELECT name FROM users WHERE id = 101
29.10 17:13:35 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => qwerty, id => 104 },{ name => nelli8, id => 101 }], battleActive => null, rounddate => 2016-29-10 17:00, startdate => 2016-29-10 17:18 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:13:35 TIME: vdl/cache.tournament.getAvailableTournament : 2.51 ms
29.10 17:13:36 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:13:36 DB: SELECT * FROM tournament
29.10 17:13:36 DB: SELECT name FROM users WHERE id = 104
29.10 17:13:36 DB: SELECT name FROM users WHERE id = 101
29.10 17:13:36 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => qwerty, id => 104 },{ name => nelli8, id => 101 }], battleActive => null, rounddate => 2016-29-10 17:00, startdate => 2016-29-10 17:18 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:13:36 TIME: vdl/cache.tournament.getAvailableTournament : 3.11 ms
29.10 17:13:37 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 104, _type => core/cache.update }
29.10 17:13:37 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
29.10 17:13:37 TIME: core/cache.update : 0.19 ms
29.10 17:13:37 WRITEDB: UPDATE Users SET name = E'qwerty', deleted = E'false', email = E'', networktype = E'  ', password = E'qwerty', isbanned = E'false', regdate = E'2016-10-28 16:12:35.945256+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Qwety","year":"123","email":"qwrtty"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477748645,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}' WHERE ID = 104
29.10 17:13:39 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
29.10 17:13:39 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
29.10 17:13:39 TIME: vdl/cache.tournament.getStatus : 0.23 ms
29.10 17:13:39 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
29.10 17:13:39 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [104,101] }
29.10 17:13:39 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.26 ms
29.10 17:13:39 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => 104, player2 => 101 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => starting }
29.10 17:13:39 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 104, player2 => 101 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
29.10 17:13:39 TIME: vdl/cache.tournament.setGrid : 0.16 ms
29.10 17:13:42 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:13:42 DB: SELECT * FROM tournament
29.10 17:13:42 DB: SELECT name FROM users WHERE id = 104
29.10 17:13:42 DB: SELECT name FROM users WHERE id = 101
29.10 17:13:42 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => qwerty, id => 104 },{ name => nelli8, id => 101 }], battleActive => null, rounddate => 2016-29-10 17:18, startdate => 2016-29-10 17:18 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:13:42 TIME: vdl/cache.tournament.getAvailableTournament : 3.06 ms
29.10 17:13:46 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:13:46 DB: SELECT * FROM tournament
29.10 17:13:46 DB: SELECT name FROM users WHERE id = 104
29.10 17:13:46 DB: SELECT name FROM users WHERE id = 101
29.10 17:13:46 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => qwerty, id => 104 },{ name => nelli8, id => 101 }], battleActive => null, rounddate => 2016-29-10 17:18, startdate => 2016-29-10 17:18 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:13:46 TIME: vdl/cache.tournament.getAvailableTournament : 1.23 ms
29.10 17:13:49 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 113, tournament => 1, _type => vdl/cache.tournament.addUsers }
29.10 17:13:49 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
29.10 17:13:49 TIME: vdl/cache.tournament.addUsers : 0.25 ms
29.10 17:13:50 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:13:50 DB: SELECT * FROM tournament
29.10 17:13:50 DB: SELECT name FROM users WHERE id = 104
29.10 17:13:50 DB: SELECT name FROM users WHERE id = 101
29.10 17:13:50 DB: SELECT name FROM users WHERE id = 113
29.10 17:13:50 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => qwerty, id => 104 },{ name => nelli8, id => 101 },{ name => uid113, id => 113 }], battleActive => null, rounddate => 2016-29-10 17:18, startdate => 2016-29-10 17:18 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:13:50 TIME: vdl/cache.tournament.getAvailableTournament : 1.56 ms
29.10 17:13:50 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-29-10 17:18', roundinterval = E'1', params = E'{"params":{"usersList":[104,101,113],"usersAll":[104,101,113]}}', rounddate = E'2016-29-10 17:00' WHERE ID = 1
29.10 17:13:58 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:13:58 DB: SELECT * FROM tournament
29.10 17:13:58 DB: SELECT name FROM users WHERE id = 104
29.10 17:13:58 DB: SELECT name FROM users WHERE id = 101
29.10 17:13:58 DB: SELECT name FROM users WHERE id = 113
29.10 17:13:58 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => qwerty, id => 104 },{ name => nelli8, id => 101 },{ name => uid113, id => 113 }], battleActive => null, rounddate => 2016-29-10 17:00, startdate => 2016-29-10 17:18 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:13:58 TIME: vdl/cache.tournament.getAvailableTournament : 1.94 ms
29.10 17:14:01 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
29.10 17:14:01 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
29.10 17:14:01 TIME: vdl/cache.tournament.getStatus : 0.09 ms
29.10 17:14:01 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
29.10 17:14:01 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [104,101,113] }
29.10 17:14:01 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.09 ms
29.10 17:14:01 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => 101, player2 => 113 },{ winner => -1, round => 1, player1 => null, player2 => 104 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => starting }
29.10 17:14:01 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 101, player2 => 113 },{ winner => -1, round => 1, player1 => null, player2 => 104 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
29.10 17:14:01 TIME: vdl/cache.tournament.setGrid : 0.08 ms
29.10 17:14:11 BLOCKREMOVE: tournament 1 removed
29.10 17:14:22 TIMER: Clans cache...
29.10 17:14:22 TIMER: Clans cache: 0ms
29.10 17:14:22 TIMER: Check tournament...
29.10 17:14:22 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:14' OR rounddate = '2016-29-10 17:14' AND status <> 'finished'
29.10 17:14:22 TIMER: Check tournament: 1ms
29.10 17:14:41 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:14:41 DB: SELECT * FROM tournament
29.10 17:14:41 STATS: cache [tournament], get [16 calls, 13 cache hits, 2 cache misses, 0 same version, 0 not found]
29.10 17:14:41 STATS: cache [tournament], segments [20 calls, 17 hits, 2 misses]
29.10 17:14:41 STATS: cache [tournament], database [619 calls, 2 reads, 2 writes]
29.10 17:14:41 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
29.10 17:14:41 READDB: SELECT * FROM Tournament WHERE ID = 1
29.10 17:14:41 DB: SELECT name FROM users WHERE id = 104
29.10 17:14:41 DB: SELECT name FROM users WHERE id = 101
29.10 17:14:41 DB: SELECT name FROM users WHERE id = 113
29.10 17:14:41 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => qwerty, id => 104 },{ name => nelli8, id => 101 },{ name => uid113, id => 113 }], battleActive => null, rounddate => 2016-29-10 17:00, startdate => 2016-29-10 17:18 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:14:41 TIME: vdl/cache.tournament.getAvailableTournament : 4.47 ms
29.10 17:14:50 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test67' AND Password = E'test', _type => core/server.query }
29.10 17:14:50 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'test67' AND Password = E'test'
29.10 17:14:50 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => test67, networkid => , isbanned => false, id => 100 }}, errorCode => ok, _type => core/server.query }
29.10 17:14:50 TIME: core/server.query : 0.99 ms
29.10 17:14:50 NET: vdl.0 (thread) request core/user.isOnlineID { id => 100, _type => core/user.isOnlineID }
29.10 17:14:50 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
29.10 17:14:50 TIME: core/user.isOnlineID : 0.1 ms
29.10 17:14:50 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 100, _type => core/cache.get }
29.10 17:14:50 STATS: cache [user], get [8 calls, 3 cache hits, 5 cache misses, 0 same version, 0 not found]
29.10 17:14:50 STATS: cache [user], segments [23 calls, 11 hits, 9 misses]
29.10 17:14:50 STATS: cache [user], database [628 calls, 5 reads, 6 writes]
29.10 17:14:50 STATS: cache [user], lock [6 calls, 6 attempts, 0 failures]
29.10 17:14:50 READDB: SELECT * FROM Users WHERE ID = 100
29.10 17:14:50 STATS: cache manager [1], get [10 calls, total 0.01 sec spent, avg 1.36 ms]
29.10 17:14:50 STATS: cache manager [1], update [8 calls, total 0 sec spent, avg 0.08 ms]
29.10 17:14:50 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => test67, deleted => false, email => , networktype =>   , password => test, isbanned => false, regdate => 2016-10-28 16:02:55.698999+03, language => en, networkid => , params => { info => { city => , year => , email =>  }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477659775, lastLoginDate => 302, lastLoadDate => 1029 }, effects => { list => [] } }}, version => 0, id => 100 } }
29.10 17:14:50 TIME: core/cache.get : 2.32 ms
29.10 17:14:50 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 100, _type => core/cache.get }
29.10 17:14:50 STATS: cache [questdata], get [4 calls, 0 cache hits, 4 cache misses, 0 same version, 0 not found]
29.10 17:14:50 STATS: cache [questdata], segments [13 calls, 4 hits, 8 misses]
29.10 17:14:50 STATS: cache [questdata], database [628 calls, 4 reads, 2 writes]
29.10 17:14:50 STATS: cache [questdata], lock [5 calls, 5 attempts, 0 failures]
29.10 17:14:50 READDB: SELECT * FROM UserQuests WHERE ID = 100
29.10 17:14:50 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 100 } }
29.10 17:14:50 TIME: core/cache.get : 1.19 ms
29.10 17:14:50 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 100, _type => core/user.loginPost, ipAddr => 172.16.20.112 }
29.10 17:14:50 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
29.10 17:14:50 TIME: core/user.loginPost : 0.14 ms
29.10 17:14:50 NET: vdl.0 (thread) request core/server.query { q => SELECT ID FROM TempUserLogins WHERE UserID = 100 AND Date = 'today'::timestamp, _type => core/server.query }
29.10 17:14:50 DB: SELECT ID FROM TempUserLogins WHERE UserID = 100 AND Date = 'today'::timestamp
29.10 17:14:50 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
29.10 17:14:50 TIME: core/server.query : 1.85 ms
29.10 17:14:50 PENDING: INSERT INTO TempUserLogins (UserID, Date) VALUES (100, 'today'::timestamp)
29.10 17:14:51 BLOCKREMOVE: tournament 1 removed
29.10 17:14:52 NET: vdl.0 (thread) request vdl/cache.user.getData { userId => 100, _type => vdl/cache.user.getData }
29.10 17:14:52 QUEUE: vdl.0 (thread) response vdl/cache.user.getData { info => { city => , year => , email =>  }, errorCode => ok, _type => vdl/cache.user.getData }
29.10 17:14:52 TIME: vdl/cache.user.getData : 0.12 ms
29.10 17:14:54 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:14:54 DB: SELECT * FROM tournament
29.10 17:14:54 READDB: SELECT * FROM Tournament WHERE ID = 1
29.10 17:14:54 DB: SELECT name FROM users WHERE id = 104
29.10 17:14:54 DB: SELECT name FROM users WHERE id = 101
29.10 17:14:54 DB: SELECT name FROM users WHERE id = 113
29.10 17:14:54 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => qwerty, id => 104 },{ name => nelli8, id => 101 },{ name => uid113, id => 113 }], battleActive => null, rounddate => 2016-29-10 17:00, startdate => 2016-29-10 17:18 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:14:54 TIME: vdl/cache.tournament.getAvailableTournament : 3.46 ms
29.10 17:14:57 NET: vdl.0 (thread) request core/cache.update { diff => {language => en, params => { attrs => { _lastTime.24hr => 1477750490, lastLoginDate => 303, lastLoadDate => 1030 } }}, type => user, unlock => false, id => 100, _type => core/cache.update }
29.10 17:14:57 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
29.10 17:14:57 TIME: core/cache.update : 0.23 ms
29.10 17:14:57 WRITEDB: UPDATE Users SET name = E'test67', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-10-28 16:02:55.698999+03', language = E'en', networkid = E'', params = E'{"info":{"city":"","year":"","email":""},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477750490,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}' WHERE ID = 100
29.10 17:14:58 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 100, tournament => 1, _type => vdl/cache.tournament.addUsers }
29.10 17:14:58 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
29.10 17:14:58 TIME: vdl/cache.tournament.addUsers : 0.19 ms
29.10 17:14:58 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:14:58 DB: SELECT * FROM tournament
29.10 17:14:58 DB: SELECT name FROM users WHERE id = 104
29.10 17:14:58 DB: SELECT name FROM users WHERE id = 101
29.10 17:14:58 DB: SELECT name FROM users WHERE id = 113
29.10 17:14:58 DB: SELECT name FROM users WHERE id = 100
29.10 17:14:58 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => qwerty, id => 104 },{ name => nelli8, id => 101 },{ name => uid113, id => 113 },{ name => test67, id => 100 }], battleActive => null, rounddate => 2016-29-10 17:00, startdate => 2016-29-10 17:18 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:14:58 TIME: vdl/cache.tournament.getAvailableTournament : 3.46 ms
29.10 17:15:00 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
29.10 17:15:00 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
29.10 17:15:00 TIME: vdl/cache.tournament.getStatus : 0.15 ms
29.10 17:15:00 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
29.10 17:15:00 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [104,101,113,100] }
29.10 17:15:00 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.14 ms
29.10 17:15:00 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => 113, player2 => 100 },{ winner => -1, round => 1, player1 => 104, player2 => 101 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => starting }
29.10 17:15:00 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 113, player2 => 100 },{ winner => -1, round => 1, player1 => 104, player2 => 101 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
29.10 17:15:00 TIME: vdl/cache.tournament.setGrid : 0.12 ms
29.10 17:15:00 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-29-10 17:18', roundinterval = E'1', params = E'{"params":{"usersList":[104,101,113,100],"usersAll":[104,101,113,100]}}', rounddate = E'2016-29-10 17:00' WHERE ID = 1
29.10 17:15:10 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:15:10 DB: SELECT * FROM tournament
29.10 17:15:10 DB: SELECT name FROM users WHERE id = 104
29.10 17:15:10 DB: SELECT name FROM users WHERE id = 101
29.10 17:15:10 DB: SELECT name FROM users WHERE id = 113
29.10 17:15:10 DB: SELECT name FROM users WHERE id = 100
29.10 17:15:10 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => qwerty, id => 104 },{ name => nelli8, id => 101 },{ name => uid113, id => 113 },{ name => test67, id => 100 }], battleActive => null, rounddate => 2016-29-10 17:00, startdate => 2016-29-10 17:18 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:15:10 TIME: vdl/cache.tournament.getAvailableTournament : 2.92 ms
29.10 17:15:14 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
29.10 17:15:14 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
29.10 17:15:14 TIME: vdl/cache.tournament.getStatus : 0.1 ms
29.10 17:15:14 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
29.10 17:15:14 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [104,101,113,100] }
29.10 17:15:14 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.11 ms
29.10 17:15:14 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => 113, player2 => 100 },{ winner => -1, round => 1, player1 => 104, player2 => 101 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => starting }
29.10 17:15:14 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 113, player2 => 100 },{ winner => -1, round => 1, player1 => 104, player2 => 101 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
29.10 17:15:14 TIME: vdl/cache.tournament.setGrid : 0.08 ms
29.10 17:15:22 TIMER: Clans cache...
29.10 17:15:22 TIMER: Clans cache: 0ms
29.10 17:15:22 TIMER: Check tournament...
29.10 17:15:22 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:15' OR rounddate = '2016-29-10 17:15' AND status <> 'finished'
29.10 17:15:22 TIMER: Check tournament: 0ms
29.10 17:15:24 BLOCKREMOVE: tournament 1 removed
29.10 17:16:22 TIMER: Clans cache...
29.10 17:16:22 TIMER: Clans cache: 0ms
29.10 17:16:22 TIMER: Check tournament...
29.10 17:16:22 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:16' OR rounddate = '2016-29-10 17:16' AND status <> 'finished'
29.10 17:16:22 TIMER: Check tournament: 0ms
29.10 17:16:51 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:16:51 DB: SELECT * FROM tournament
29.10 17:16:51 STATS: cache [tournament], get [25 calls, 20 cache hits, 4 cache misses, 0 same version, 0 not found]
29.10 17:16:51 STATS: cache [tournament], segments [32 calls, 27 hits, 4 misses]
29.10 17:16:51 STATS: cache [tournament], database [749 calls, 4 reads, 3 writes]
29.10 17:16:51 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
29.10 17:16:51 READDB: SELECT * FROM Tournament WHERE ID = 1
29.10 17:16:51 DB: SELECT name FROM users WHERE id = 104
29.10 17:16:51 DB: SELECT name FROM users WHERE id = 101
29.10 17:16:51 DB: SELECT name FROM users WHERE id = 113
29.10 17:16:51 DB: SELECT name FROM users WHERE id = 100
29.10 17:16:51 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => qwerty, id => 104 },{ name => nelli8, id => 101 },{ name => uid113, id => 113 },{ name => test67, id => 100 }], battleActive => null, rounddate => 2016-29-10 17:00, startdate => 2016-29-10 17:18 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:16:51 TIME: vdl/cache.tournament.getAvailableTournament : 3.41 ms
29.10 17:17:01 BLOCKREMOVE: tournament 1 removed
29.10 17:17:04 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:17:04 DB: SELECT * FROM tournament
29.10 17:17:04 READDB: SELECT * FROM Tournament WHERE ID = 1
29.10 17:17:04 DB: SELECT name FROM users WHERE id = 104
29.10 17:17:04 DB: SELECT name FROM users WHERE id = 101
29.10 17:17:04 DB: SELECT name FROM users WHERE id = 113
29.10 17:17:04 DB: SELECT name FROM users WHERE id = 100
29.10 17:17:04 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => qwerty, id => 104 },{ name => nelli8, id => 101 },{ name => uid113, id => 113 },{ name => test67, id => 100 }], battleActive => null, rounddate => 2016-29-10 17:00, startdate => 2016-29-10 17:18 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:17:04 TIME: vdl/cache.tournament.getAvailableTournament : 2.66 ms
29.10 17:17:08 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:17:08 DB: SELECT * FROM tournament
29.10 17:17:08 DB: SELECT name FROM users WHERE id = 104
29.10 17:17:08 DB: SELECT name FROM users WHERE id = 101
29.10 17:17:08 DB: SELECT name FROM users WHERE id = 113
29.10 17:17:08 DB: SELECT name FROM users WHERE id = 100
29.10 17:17:08 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => qwerty, id => 104 },{ name => nelli8, id => 101 },{ name => uid113, id => 113 },{ name => test67, id => 100 }], battleActive => null, rounddate => 2016-29-10 17:00, startdate => 2016-29-10 17:18 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:17:08 TIME: vdl/cache.tournament.getAvailableTournament : 3.18 ms
29.10 17:17:18 BLOCKREMOVE: tournament 1 removed
29.10 17:17:22 TIMER: Clans cache...
29.10 17:17:22 TIMER: Clans cache: 0ms
29.10 17:17:22 TIMER: Check tournament...
29.10 17:17:22 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:17' OR rounddate = '2016-29-10 17:17' AND status <> 'finished'
29.10 17:17:22 TIMER: Check tournament: 1ms
29.10 17:17:22 TIMER: Clans cache...
29.10 17:17:22 TIMER: Clans cache: 0ms
29.10 17:17:22 TIMER: Check tournament...
29.10 17:17:22 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:18' OR rounddate = '2016-29-10 17:18' AND status <> 'finished'
29.10 17:17:22 STATS: cache [tournament], get [28 calls, 21 cache hits, 6 cache misses, 0 same version, 0 not found]
29.10 17:17:22 STATS: cache [tournament], segments [35 calls, 28 hits, 6 misses]
29.10 17:17:22 STATS: cache [tournament], database [840 calls, 6 reads, 3 writes]
29.10 17:17:22 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
29.10 17:17:22 READDB: SELECT * FROM Tournament WHERE ID = 1
29.10 17:17:22 DB: SELECT nextval('Battle_id_seq') AS id
29.10 17:17:22 READDB: SELECT ID FROM Battle WHERE ID = 99
29.10 17:17:22 READDB: INSERT INTO Battle (ID) VALUES (99)
29.10 17:17:22 STATS: cache [battle], get [2 calls, 0 cache hits, 1 cache misses, 0 same version, 1 not found]
29.10 17:17:22 STATS: cache [battle], segments [2 calls, 0 hits, 1 misses]
29.10 17:17:22 STATS: cache [battle], database [840 calls, 1 reads, 0 writes]
29.10 17:17:22 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
29.10 17:17:22 READDB: SELECT * FROM Battle WHERE ID = 99
29.10 17:17:22 DB: SELECT name FROM users WHERE id=100
29.10 17:17:22 DB: SELECT name FROM users WHERE id=113
29.10 17:17:22 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => test67, tournamentId => 1, enemy.id => 113, enemy.name => uid113, round => 1, roundDate => 2016-29-10 17:00, id => 100, enemy.num => 2, battleId => 99, player => 1 }, _isNotify => true, id => 100, _type => tournament.enemyEvent }
29.10 17:17:22 QUEUE: vdl.0 (thread) response tournament.leaveEvent { _isNotify => true, id => 100, _type => tournament.leaveEvent }
29.10 17:17:22 DB: SELECT nextval('Battle_id_seq') AS id
29.10 17:17:22 READDB: SELECT ID FROM Battle WHERE ID = 100
29.10 17:17:22 READDB: INSERT INTO Battle (ID) VALUES (100)
29.10 17:17:22 READDB: SELECT * FROM Battle WHERE ID = 100
29.10 17:17:22 DB: SELECT name FROM users WHERE id=101
29.10 17:17:22 DB: SELECT name FROM users WHERE id=104
29.10 17:17:22 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => nelli8, tournamentId => 1, enemy.id => 104, enemy.name => qwerty, round => 1, roundDate => 2016-29-10 17:00, id => 101, enemy.num => 2, battleId => 100, player => 1 }, _isNotify => true, id => 101, _type => tournament.enemyEvent }
29.10 17:17:22 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => qwerty, tournamentId => 1, enemy.id => 101, enemy.name => nelli8, round => 1, roundDate => 2016-29-10 17:00, id => 104, enemy.num => 1, battleId => 100, player => 2 }, _isNotify => true, id => 104, _type => tournament.enemyEvent }
29.10 17:17:22 TIMER: Check tournament: 71ms
29.10 17:18:27 WRITEDB: UPDATE Battle SET secondid = E'104', turnid = E'101', finished = E'false', firstid = E'101', params = E'{}', avaliable = E'false' WHERE ID = 100
29.10 17:18:27 WRITEDB: UPDATE Battle SET secondid = E'113', turnid = E'100', finished = E'false', firstid = E'100', params = E'{}', avaliable = E'false' WHERE ID = 99
29.10 17:18:27 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'active', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-29-10 17:18', roundinterval = E'1', params = E'{"params":{"usersList":[104,101,113,100],"battleActive":[99,100],"usersAll":[104,101,113,100]}}', rounddate = E'2016-29-10 17:00' WHERE ID = 1
29.10 17:18:37 BLOCKREMOVE: battle 100 removed
29.10 17:18:37 BLOCKREMOVE: battle 99 removed
29.10 17:18:37 BLOCKREMOVE: tournament 1 removed
29.10 17:18:41 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:18:41 READDB: SELECT * FROM Battle WHERE ID = 100
29.10 17:18:41 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:18:41 TIME: vdl/cache.battle.infoRoom : 0.75 ms
29.10 17:18:51 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:18:51 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:18:51 TIME: vdl/cache.battle.infoRoom : 0.17 ms
29.10 17:18:55 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:18:55 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:18:55 TIME: vdl/cache.battle.infoRoom : 0.1 ms
29.10 17:19:00 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:19:00 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:19:00 TIME: vdl/cache.battle.infoRoom : 0.13 ms
29.10 17:19:03 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:19:03 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:19:03 TIME: vdl/cache.battle.infoRoom : 0.1 ms
29.10 17:19:06 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:19:06 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:19:06 TIME: vdl/cache.battle.infoRoom : 0.1 ms
29.10 17:19:11 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:19:11 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:19:11 TIME: vdl/cache.battle.infoRoom : 0.08 ms
29.10 17:19:14 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:19:14 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:19:14 TIME: vdl/cache.battle.infoRoom : 0.08 ms
29.10 17:19:22 TIMER: Clans cache...
29.10 17:19:22 TIMER: Clans cache: 0ms
29.10 17:19:22 TIMER: Check tournament...
29.10 17:19:22 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:19' OR rounddate = '2016-29-10 17:19' AND status <> 'finished'
29.10 17:19:22 TIMER: Check tournament: 0ms
29.10 17:19:24 BLOCKREMOVE: battle 100 removed
29.10 17:19:35 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:19:35 STATS: cache [battle], get [12 calls, 7 cache hits, 4 cache misses, 0 same version, 1 not found]
29.10 17:19:35 STATS: cache [battle], segments [16 calls, 11 hits, 4 misses]
29.10 17:19:35 STATS: cache [battle], database [913 calls, 4 reads, 2 writes]
29.10 17:19:35 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
29.10 17:19:35 READDB: SELECT * FROM Battle WHERE ID = 100
29.10 17:19:35 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:19:35 TIME: vdl/cache.battle.infoRoom : 1.46 ms
29.10 17:19:45 BLOCKREMOVE: battle 100 removed
29.10 17:19:46 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:19:46 READDB: SELECT * FROM Battle WHERE ID = 100
29.10 17:19:46 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:19:46 TIME: vdl/cache.battle.infoRoom : 1.13 ms
29.10 17:19:56 BLOCKREMOVE: battle 100 removed
29.10 17:19:58 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:19:58 READDB: SELECT * FROM Battle WHERE ID = 100
29.10 17:19:58 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:19:58 TIME: vdl/cache.battle.infoRoom : 0.82 ms
29.10 17:20:02 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:20:02 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:20:02 TIME: vdl/cache.battle.infoRoom : 0.16 ms
29.10 17:20:12 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:20:12 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:20:12 TIME: vdl/cache.battle.infoRoom : 0.1 ms
29.10 17:20:18 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:20:18 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:20:18 TIME: vdl/cache.battle.infoRoom : 0.08 ms
29.10 17:20:22 TIMER: Clans cache...
29.10 17:20:22 TIMER: Clans cache: 0ms
29.10 17:20:22 TIMER: Check tournament...
29.10 17:20:22 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:20' OR rounddate = '2016-29-10 17:20' AND status <> 'finished'
29.10 17:20:22 TIMER: Check tournament: 0ms
29.10 17:20:22 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:20:22 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:20:22 TIME: vdl/cache.battle.infoRoom : 0.17 ms
29.10 17:20:26 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:20:26 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:20:26 TIME: vdl/cache.battle.infoRoom : 0.07 ms
29.10 17:20:26 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:20:26 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:20:26 TIME: vdl/cache.battle.infoRoom : 0.15 ms
29.10 17:20:30 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:20:30 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:20:30 TIME: vdl/cache.battle.infoRoom : 0.1 ms
29.10 17:20:34 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:20:34 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:20:34 TIME: vdl/cache.battle.infoRoom : 0.21 ms
29.10 17:20:38 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:20:38 STATS: cache [battle], get [23 calls, 15 cache hits, 7 cache misses, 0 same version, 1 not found]
29.10 17:20:38 STATS: cache [battle], segments [27 calls, 19 hits, 7 misses]
29.10 17:20:38 STATS: cache [battle], database [976 calls, 7 reads, 2 writes]
29.10 17:20:38 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
29.10 17:20:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:20:38 TIME: vdl/cache.battle.infoRoom : 0.27 ms
29.10 17:20:41 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:20:41 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:20:41 TIME: vdl/cache.battle.infoRoom : 0.11 ms
29.10 17:20:44 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:20:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:20:44 TIME: vdl/cache.battle.infoRoom : 0.2 ms
29.10 17:20:47 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:20:47 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:20:47 TIME: vdl/cache.battle.infoRoom : 0.15 ms
29.10 17:20:50 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:20:50 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:20:50 TIME: vdl/cache.battle.infoRoom : 0.08 ms
29.10 17:20:54 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:20:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:20:54 TIME: vdl/cache.battle.infoRoom : 0.08 ms
29.10 17:20:57 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:20:57 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:20:57 TIME: vdl/cache.battle.infoRoom : 0.09 ms
29.10 17:21:00 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:21:00 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:21:00 TIME: vdl/cache.battle.infoRoom : 0.14 ms
29.10 17:21:04 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:21:04 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:21:04 TIME: vdl/cache.battle.infoRoom : 0.14 ms
29.10 17:21:08 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:21:08 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:21:08 TIME: vdl/cache.battle.infoRoom : 0.15 ms
29.10 17:21:09 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:21:09 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:21:09 TIME: vdl/cache.battle.infoRoom : 0.16 ms
29.10 17:21:13 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:21:13 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:21:13 TIME: vdl/cache.battle.infoRoom : 0.06 ms
29.10 17:21:17 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:21:17 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:21:17 TIME: vdl/cache.battle.infoRoom : 0.15 ms
29.10 17:21:22 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:21:22 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:21:22 TIME: vdl/cache.battle.infoRoom : 0.17 ms
29.10 17:21:22 TIMER: Clans cache...
29.10 17:21:22 TIMER: Clans cache: 0ms
29.10 17:21:22 TIMER: Check tournament...
29.10 17:21:22 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:21' OR rounddate = '2016-29-10 17:21' AND status <> 'finished'
29.10 17:21:22 TIMER: Check tournament: 0ms
29.10 17:21:26 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:21:26 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:21:26 TIME: vdl/cache.battle.infoRoom : 0.19 ms
29.10 17:21:29 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:21:29 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:21:29 TIME: vdl/cache.battle.infoRoom : 0.09 ms
29.10 17:21:32 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:21:32 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:21:32 TIME: vdl/cache.battle.infoRoom : 0.09 ms
29.10 17:21:38 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:21:38 STATS: cache [battle], get [40 calls, 32 cache hits, 7 cache misses, 0 same version, 1 not found]
29.10 17:21:38 STATS: cache [battle], segments [44 calls, 36 hits, 7 misses]
29.10 17:21:38 STATS: cache [battle], database [1036 calls, 7 reads, 2 writes]
29.10 17:21:38 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
29.10 17:21:38 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:21:38 TIME: vdl/cache.battle.infoRoom : 0.33 ms
29.10 17:21:41 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:21:41 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:21:41 TIME: vdl/cache.battle.infoRoom : 0.23 ms
29.10 17:21:44 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:21:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:21:44 TIME: vdl/cache.battle.infoRoom : 0.08 ms
29.10 17:21:46 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:21:46 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:21:46 TIME: vdl/cache.battle.infoRoom : 0.24 ms
29.10 17:21:48 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:21:48 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:21:48 TIME: vdl/cache.battle.infoRoom : 0.1 ms
29.10 17:21:52 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:21:52 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:21:52 TIME: vdl/cache.battle.infoRoom : 0.06 ms
29.10 17:21:56 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:21:56 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:21:56 TIME: vdl/cache.battle.infoRoom : 0.15 ms
29.10 17:22:02 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:22:02 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:22:02 TIME: vdl/cache.battle.infoRoom : 0.22 ms
29.10 17:22:02 NET: vdl.0 (thread) request vdl/cache.tournament.getTournament { tournamentId => 1, _type => vdl/cache.tournament.getTournament }
29.10 17:22:02 DB: SELECT * FROM tournament WHERE id = 1
29.10 17:22:02 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getTournament { name => test, type => once, winner => -1, repeatinterval => 0, round => 1, params => {"params":{"usersList":[104,101,113,100],"battleActive":[99,100],"usersAll":[104,101,113,100]}}, id => 1, _type => vdl/cache.tournament.getTournament, status => active, rounddate => 2016-29-10 17:00, startdate => 2016-29-10 17:18, roundinterval => 1 }
29.10 17:22:02 TIME: vdl/cache.tournament.getTournament : 1 ms
29.10 17:22:02 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:22:02 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:22:02 TIME: vdl/cache.battle.infoRoom : 0.1 ms
29.10 17:22:02 NET: vdl.0 (thread) request vdl/cache.tournament.getBattlesTournaments { tournament => 1, _type => vdl/cache.tournament.getBattlesTournaments }
29.10 17:22:02 STATS: cache [tournament], get [29 calls, 21 cache hits, 7 cache misses, 0 same version, 0 not found]
29.10 17:22:02 STATS: cache [tournament], segments [37 calls, 29 hits, 7 misses]
29.10 17:22:02 STATS: cache [tournament], database [1060 calls, 7 reads, 4 writes]
29.10 17:22:02 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
29.10 17:22:02 READDB: SELECT * FROM Tournament WHERE ID = 1
29.10 17:22:02 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getBattlesTournaments [99,100]
29.10 17:22:02 TIME: vdl/cache.tournament.getBattlesTournaments : 1.46 ms
29.10 17:22:02 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
29.10 17:22:02 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [104,101,113,100] }
29.10 17:22:02 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.26 ms
29.10 17:22:02 NET: vdl.0 (thread) request vdl/cache.battle.finishRoom { roomId => 100, _type => vdl/cache.battle.finishRoom }
29.10 17:22:02 QUEUE: vdl.0 (thread) response vdl/cache.battle.finishRoom { errorCode => ok, _type => vdl/cache.battle.finishRoom }
29.10 17:22:02 TIME: vdl/cache.battle.finishRoom : 0.16 ms
29.10 17:22:02 NET: vdl.0 (thread) request vdl/cache.tournament.setBattlesTournaments { typeBattle => finished, tournament => 1, _type => vdl/cache.tournament.setBattlesTournaments, battlesData => [100] }
29.10 17:22:02 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setBattlesTournaments { errorCode => ok, _type => vdl/cache.tournament.setBattlesTournaments }
29.10 17:22:02 TIME: vdl/cache.tournament.setBattlesTournaments : 0.25 ms
29.10 17:22:02 NET: vdl.0 (thread) request vdl/cache.tournament.setUsersTournament { tournament => 1, usersData => [101,113,100], _type => vdl/cache.tournament.setUsersTournament }
29.10 17:22:02 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setUsersTournament { errorCode => ok, _type => vdl/cache.tournament.setUsersTournament }
29.10 17:22:02 TIME: vdl/cache.tournament.setUsersTournament : 0.16 ms
29.10 17:22:02 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => 101, round => 1, player1 => 101, player2 => 104 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => active }
29.10 17:22:02 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 100, player2 => 113 },{ winner => 101, round => 1, player1 => 101, player2 => 104 },{ winner => -1, round => 2, player1 => 101, player2 => null }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
29.10 17:22:02 TIME: vdl/cache.tournament.setGrid : 0.12 ms
29.10 17:22:02 WRITEDB: UPDATE Battle SET secondid = E'104', turnid = E'101', finished = E'true', firstid = E'101', params = E'{}', avaliable = E'false' WHERE ID = 100
29.10 17:22:07 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'active', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-29-10 17:18', roundinterval = E'1', params = E'{"params":{"battleFinished":[100],"usersList":[101,113,100],"battleActive":[99],"usersAll":[104,101,113,100]}}', rounddate = E'2016-29-10 17:00' WHERE ID = 1
29.10 17:22:13 BLOCKREMOVE: battle 100 removed
29.10 17:22:14 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:22:14 DB: SELECT * FROM tournament
29.10 17:22:14 DB: SELECT name FROM users WHERE id = 104
29.10 17:22:14 DB: SELECT name FROM users WHERE id = 101
29.10 17:22:14 DB: SELECT name FROM users WHERE id = 113
29.10 17:22:14 DB: SELECT name FROM users WHERE id = 100
29.10 17:22:14 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [100], round => 1, id => 1, status => active, userList => [{ name => qwerty, id => 104 },{ name => nelli8, id => 101 },{ name => uid113, id => 113 },{ name => test67, id => 100 }], battleActive => [99], rounddate => 2016-29-10 17:00, startdate => 2016-29-10 17:18 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:22:14 TIME: vdl/cache.tournament.getAvailableTournament : 3.65 ms
29.10 17:22:20 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
29.10 17:22:20 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => active }
29.10 17:22:20 TIME: vdl/cache.tournament.getStatus : 0.18 ms
29.10 17:22:20 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => active }
29.10 17:22:20 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 100, player2 => 113 },{ winner => 101, round => 1, player1 => 101, player2 => 104 },{ winner => -1, round => 2, player1 => 101, player2 => null }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
29.10 17:22:20 TIME: vdl/cache.tournament.setGrid : 0.26 ms
29.10 17:22:22 TIMER: Clans cache...
29.10 17:22:22 TIMER: Clans cache: 0ms
29.10 17:22:22 TIMER: Check tournament...
29.10 17:22:22 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:22' OR rounddate = '2016-29-10 17:22' AND status <> 'finished'
29.10 17:22:22 TIMER: Check tournament: 0ms
29.10 17:22:31 BLOCKREMOVE: tournament 1 removed
29.10 17:22:44 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:22:44 DB: SELECT * FROM tournament
29.10 17:22:44 READDB: SELECT * FROM Tournament WHERE ID = 1
29.10 17:22:44 DB: SELECT name FROM users WHERE id = 104
29.10 17:22:44 DB: SELECT name FROM users WHERE id = 101
29.10 17:22:44 DB: SELECT name FROM users WHERE id = 113
29.10 17:22:44 DB: SELECT name FROM users WHERE id = 100
29.10 17:22:44 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => [100], round => 1, id => 1, status => active, userList => [{ name => qwerty, id => 104 },{ name => nelli8, id => 101 },{ name => uid113, id => 113 },{ name => test67, id => 100 }], battleActive => [99], rounddate => 2016-29-10 17:00, startdate => 2016-29-10 17:18 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:22:44 TIME: vdl/cache.tournament.getAvailableTournament : 4.31 ms
29.10 17:22:47 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
29.10 17:22:47 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => active }
29.10 17:22:47 TIME: vdl/cache.tournament.getStatus : 0.1 ms
29.10 17:22:47 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => active }
29.10 17:22:47 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 100, player2 => 113 },{ winner => 101, round => 1, player1 => 101, player2 => 104 },{ winner => -1, round => 2, player1 => 101, player2 => null }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
29.10 17:22:47 TIME: vdl/cache.tournament.setGrid : 0.1 ms
29.10 17:22:58 BLOCKREMOVE: tournament 1 removed
29.10 17:23:22 TIMER: Clans cache...
29.10 17:23:22 TIMER: Clans cache: 0ms
29.10 17:23:22 TIMER: Check tournament...
29.10 17:23:22 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:23' OR rounddate = '2016-29-10 17:23' AND status <> 'finished'
29.10 17:23:22 TIMER: Check tournament: 0ms
29.10 17:23:22 TIMER: Clans cache...
29.10 17:23:22 TIMER: Clans cache: 0ms
29.10 17:23:22 TIMER: Check tournament...
29.10 17:23:22 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:24' OR rounddate = '2016-29-10 17:24' AND status <> 'finished'
29.10 17:23:22 TIMER: Check tournament: 0ms
29.10 17:23:22 TIMER: Clans cache...
29.10 17:23:22 TIMER: Clans cache: 0ms
29.10 17:23:22 TIMER: Check tournament...
29.10 17:23:22 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:25' OR rounddate = '2016-29-10 17:25' AND status <> 'finished'
29.10 17:23:22 TIMER: Check tournament: 0ms
29.10 17:23:22 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=104 OR secondid=104 AND finished <> true, _type => core/server.query }
29.10 17:23:22 DB: SELECT id FROM battle WHERE firstid=104 OR secondid=104 AND finished <> true
29.10 17:23:22 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
29.10 17:23:22 TIME: core/server.query : 1.36 ms
29.10 17:23:22 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
29.10 17:23:22 STATS: cache [battle], get [50 calls, 42 cache hits, 7 cache misses, 0 same version, 1 not found]
29.10 17:23:22 STATS: cache [battle], segments [55 calls, 47 hits, 7 misses]
29.10 17:23:22 STATS: cache [battle], database [1320 calls, 7 reads, 3 writes]
29.10 17:23:22 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
29.10 17:23:22 READDB: SELECT * FROM Battle WHERE ID = 0
29.10 17:23:22 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
29.10 17:23:22 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 156
Called from modules/VDLCache.hx line 149
Called from modules/VDLCache.hx line 99
Called from snipe/cache/CacheServer.hx line 487
29.10 17:23:22 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
29.10 17:23:22 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 104, _type => core/cache.update }
29.10 17:23:22 STATS: cache [user], get [10 calls, 4 cache hits, 6 cache misses, 0 same version, 0 not found]
29.10 17:23:22 STATS: cache [user], segments [27 calls, 12 hits, 11 misses]
29.10 17:23:22 STATS: cache [user], database [1320 calls, 6 reads, 7 writes]
29.10 17:23:22 STATS: cache [user], lock [6 calls, 6 attempts, 0 failures]
29.10 17:23:22 STATS: cache manager [1], get [11 calls, total 0.01 sec spent, avg 1.33 ms]
29.10 17:23:22 STATS: cache manager [1], update [10 calls, total 0 sec spent, avg 0.1 ms]
29.10 17:23:22 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
29.10 17:23:22 TIME: core/cache.update : 0.42 ms
29.10 17:23:22 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 104, _type => core/cache.update }
29.10 17:23:22 STATS: cache [questdata], get [5 calls, 0 cache hits, 5 cache misses, 0 same version, 0 not found]
29.10 17:23:22 STATS: cache [questdata], segments [15 calls, 4 hits, 10 misses]
29.10 17:23:22 STATS: cache [questdata], database [1320 calls, 5 reads, 2 writes]
29.10 17:23:22 STATS: cache [questdata], lock [5 calls, 5 attempts, 0 failures]
29.10 17:23:22 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
29.10 17:23:22 TIME: core/cache.update : 0.2 ms
29.10 17:23:22 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 104, _type => core/user.logoutPost }
29.10 17:23:22 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
29.10 17:23:22 TIME: core/user.logoutPost : 0.13 ms
29.10 17:23:22 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=113 OR secondid=113 AND finished <> true, _type => core/server.query }
29.10 17:23:22 DB: SELECT id FROM battle WHERE firstid=113 OR secondid=113 AND finished <> true
29.10 17:23:22 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 99 }}, errorCode => ok, _type => core/server.query }
29.10 17:23:22 TIME: core/server.query : 1.73 ms
29.10 17:23:22 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 99, _type => vdl/cache.battle.infoRoom }
29.10 17:23:22 READDB: SELECT * FROM Battle WHERE ID = 99
29.10 17:23:22 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 113, firstId => 100, _type => vdl/cache.battle.infoRoom, turnId => 100 }
29.10 17:23:22 TIME: vdl/cache.battle.infoRoom : 0.7 ms
29.10 17:23:22 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 99, _type => vdl/cache.battle.deleteRoom }
29.10 17:23:22 ROOM: deleted room 99
29.10 17:23:22 DB: DELETE FROM Battle WHERE ID = 99
29.10 17:23:22 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
29.10 17:23:22 TIME: vdl/cache.battle.deleteRoom : 19.56 ms
29.10 17:23:22 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 113, _type => core/cache.update }
29.10 17:23:22 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
29.10 17:23:22 TIME: core/cache.update : 0.09 ms
29.10 17:23:22 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 113, _type => core/cache.update }
29.10 17:23:22 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => mustBeLocked, version => 0, _type => core/cache.update }
29.10 17:23:22 TIME: core/cache.update : 0.08 ms
29.10 17:23:22 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 113, _type => core/user.logoutPost }
29.10 17:23:22 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
29.10 17:23:22 TIME: core/user.logoutPost : 0.08 ms
29.10 17:23:22 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=101 OR secondid=101 AND finished <> true, _type => core/server.query }
29.10 17:23:22 DB: SELECT id FROM battle WHERE firstid=101 OR secondid=101 AND finished <> true
29.10 17:23:22 QUEUE: vdl.0 (thread) response core/server.query { list => {{ id => 94 }, { id => 96 }, { id => 97 }, { id => 100 }}, errorCode => ok, _type => core/server.query }
29.10 17:23:22 TIME: core/server.query : 0.86 ms
29.10 17:23:22 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 100, _type => vdl/cache.battle.infoRoom }
29.10 17:23:22 READDB: SELECT * FROM Battle WHERE ID = 100
29.10 17:23:22 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { secondId => 104, firstId => 101, _type => vdl/cache.battle.infoRoom, turnId => 101 }
29.10 17:23:22 TIME: vdl/cache.battle.infoRoom : 0.39 ms
29.10 17:23:22 NET: vdl.0 (thread) request vdl/cache.battle.deleteRoom { roomId => 100, _type => vdl/cache.battle.deleteRoom }
29.10 17:23:22 ROOM: deleted room 100
29.10 17:23:22 DB: DELETE FROM Battle WHERE ID = 100
29.10 17:23:22 QUEUE: vdl.0 (thread) response vdl/cache.battle.deleteRoom { errorCode => ok, _type => vdl/cache.battle.deleteRoom }
29.10 17:23:22 TIME: vdl/cache.battle.deleteRoom : 8.57 ms
29.10 17:23:22 NET: vdl.0 (thread) request core/user.sendTo { id => 104, _type => core/user.sendTo, msg => { _type => battle.end } }
29.10 17:23:22 QUEUE: vdl.0 (thread) response core/user.sendTo { errorCode => userNotOnline, _type => core/user.sendTo }
29.10 17:23:22 TIME: core/user.sendTo : 0.04 ms
29.10 17:23:22 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 101, _type => core/cache.update }
29.10 17:23:22 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
29.10 17:23:22 TIME: core/cache.update : 0.08 ms
29.10 17:23:22 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 101, _type => core/cache.update }
29.10 17:23:22 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
29.10 17:23:22 TIME: core/cache.update : 0.06 ms
29.10 17:23:22 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 101, _type => core/user.logoutPost }
29.10 17:23:22 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
29.10 17:23:22 TIME: core/user.logoutPost : 0.04 ms
29.10 17:23:22 TIMER: Clans cache...
29.10 17:23:22 TIMER: Clans cache: 0ms
29.10 17:23:22 TIMER: Check tournament...
29.10 17:23:22 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:26' OR rounddate = '2016-29-10 17:26' AND status <> 'finished'
29.10 17:23:22 TIMER: Check tournament: 0ms
29.10 17:26:23 WRITEDB: UPDATE Users SET name = E'qwerty', deleted = E'false', email = E'', networktype = E'  ', password = E'qwerty', isbanned = E'false', regdate = E'2016-10-28 16:12:35.945256+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Qwety","year":"123","email":"qwrtty"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477748645,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}' WHERE ID = 104
29.10 17:26:23 WRITEDB: UPDATE Users SET name = E'nelli8', deleted = E'false', email = E'', networktype = E'  ', password = E'qwerty', isbanned = E'false', regdate = E'2016-10-28 16:03:03.386319+03', language = E'en', networkid = E'', params = E'{"info":{"city":"Kazan","year":"","email":"nlqbunskaha@mail.ru"},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477750390,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}' WHERE ID = 101
29.10 17:26:23 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 104
29.10 17:26:23 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 101
29.10 17:26:33 BLOCKREMOVE: user 104 removed
29.10 17:26:33 BLOCKREMOVE: user 101 removed
29.10 17:26:33 BLOCKREMOVE: questdata 104 removed
29.10 17:26:33 BLOCKREMOVE: questdata 101 removed
29.10 17:26:33 BLOCKREMOVE: battle 100 removed
29.10 17:26:33 BLOCKREMOVE: battle 99 removed
29.10 17:27:22 TIMER: Clans cache...
29.10 17:27:22 TIMER: Clans cache: 0ms
29.10 17:27:22 TIMER: Check tournament...
29.10 17:27:22 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:27' OR rounddate = '2016-29-10 17:27' AND status <> 'finished'
29.10 17:27:22 TIMER: Check tournament: 0ms
29.10 17:27:22 TIMER: Clans cache...
29.10 17:27:22 TIMER: Clans cache: 0ms
29.10 17:27:22 TIMER: Check tournament...
29.10 17:27:22 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:28' OR rounddate = '2016-29-10 17:28' AND status <> 'finished'
29.10 17:27:22 TIMER: Check tournament: 0ms
29.10 17:27:22 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=100 OR secondid=100 AND finished <> true, _type => core/server.query }
29.10 17:27:22 DB: SELECT id FROM battle WHERE firstid=100 OR secondid=100 AND finished <> true
29.10 17:27:22 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
29.10 17:27:22 TIME: core/server.query : 0.97 ms
29.10 17:27:22 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
29.10 17:27:22 STATS: cache [battle], get [53 calls, 42 cache hits, 10 cache misses, 0 same version, 2 not found]
29.10 17:27:22 STATS: cache [battle], segments [60 calls, 49 hits, 10 misses]
29.10 17:27:22 STATS: cache [battle], database [1500 calls, 10 reads, 3 writes]
29.10 17:27:22 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
29.10 17:27:22 READDB: SELECT * FROM Battle WHERE ID = 0
29.10 17:27:22 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
29.10 17:27:22 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 156
Called from modules/VDLCache.hx line 149
Called from modules/VDLCache.hx line 99
Called from snipe/cache/CacheServer.hx line 487
29.10 17:27:22 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
29.10 17:27:22 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 100, _type => core/cache.update }
29.10 17:27:22 STATS: cache [user], get [10 calls, 4 cache hits, 6 cache misses, 0 same version, 0 not found]
29.10 17:27:22 STATS: cache [user], segments [32 calls, 16 hits, 12 misses]
29.10 17:27:22 STATS: cache [user], database [1500 calls, 6 reads, 9 writes]
29.10 17:27:22 STATS: cache [user], lock [6 calls, 6 attempts, 0 failures]
29.10 17:27:22 STATS: cache manager [1], get [11 calls, total 0.01 sec spent, avg 1.33 ms]
29.10 17:27:22 STATS: cache manager [1], update [16 calls, total 0 sec spent, avg 0.09 ms]
29.10 17:27:22 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
29.10 17:27:22 TIME: core/cache.update : 0.34 ms
29.10 17:27:22 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 100, _type => core/cache.update }
29.10 17:27:22 STATS: cache [questdata], get [5 calls, 0 cache hits, 5 cache misses, 0 same version, 0 not found]
29.10 17:27:22 STATS: cache [questdata], segments [20 calls, 8 hits, 11 misses]
29.10 17:27:22 STATS: cache [questdata], database [1500 calls, 5 reads, 4 writes]
29.10 17:27:22 STATS: cache [questdata], lock [5 calls, 5 attempts, 0 failures]
29.10 17:27:22 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
29.10 17:27:22 TIME: core/cache.update : 0.16 ms
29.10 17:27:22 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 100, _type => core/user.logoutPost }
29.10 17:27:22 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
29.10 17:27:22 TIME: core/user.logoutPost : 0.08 ms
29.10 17:27:22 TIMER: Clans cache...
29.10 17:27:22 TIMER: Clans cache: 0ms
29.10 17:27:22 TIMER: Check tournament...
29.10 17:27:22 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:29' OR rounddate = '2016-29-10 17:29' AND status <> 'finished'
29.10 17:27:22 TIMER: Check tournament: 1ms
29.10 17:29:23 WRITEDB: UPDATE Users SET name = E'test67', deleted = E'false', email = E'', networktype = E'  ', password = E'test', isbanned = E'false', regdate = E'2016-10-28 16:02:55.698999+03', language = E'en', networkid = E'', params = E'{"info":{"city":"","year":"","email":""},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477750490,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}' WHERE ID = 100
29.10 17:29:23 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 100
29.10 17:29:33 BLOCKREMOVE: user 100 removed
29.10 17:29:33 BLOCKREMOVE: questdata 100 removed
29.10 17:32:51 TIMER: Starting timer...
29.10 17:32:51 TIMER: Timer running...
29.10 17:32:51 DB: SELECT * FROM GameVars
29.10 17:32:51 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
29.10 17:32:51 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
29.10 17:32:51 DB: SELECT * FROM Shops WHERE ID = 1
29.10 17:32:51 TEMP: load ./tmp/quest_daily_ids
29.10 17:32:51 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
29.10 17:32:51 TEMP: save ./tmp/quest_daily_ids
29.10 17:32:51 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
29.10 17:32:51 QUEUE: vdl.0 (thread) response server.login
29.10 17:32:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
29.10 17:32:51 DB: SELECT * FROM LocalizationStrings
29.10 17:32:51 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:32:51 TIME: core/server.query : 7.32 ms
29.10 17:32:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
29.10 17:32:51 DB: SELECT * FROM GameVars
29.10 17:32:51 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:32:51 TIME: core/server.query : 0.55 ms
29.10 17:32:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
29.10 17:32:51 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
29.10 17:32:51 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:32:51 TIME: core/server.query : 0.77 ms
29.10 17:32:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
29.10 17:32:51 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
29.10 17:32:51 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:32:51 TIME: core/server.query : 0.41 ms
29.10 17:32:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
29.10 17:32:51 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
29.10 17:32:51 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:32:51 TIME: core/server.query : 0.64 ms
29.10 17:32:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
29.10 17:32:51 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
29.10 17:32:51 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:32:51 TIME: core/server.query : 0.89 ms
29.10 17:32:51 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
29.10 17:32:51 QUEUE: vdl.0 (thread) response core/quest.getDaily
29.10 17:32:51 TIME: core/quest.getDaily : 0.02 ms
29.10 17:32:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
29.10 17:32:51 DB: SELECT * FROM UserAttributeTypes
29.10 17:32:51 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:32:51 TIME: core/server.query : 0.31 ms
29.10 17:32:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
29.10 17:32:51 DB: SELECT * FROM UserVariableTypes
29.10 17:32:51 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:32:51 TIME: core/server.query : 0.33 ms
29.10 17:32:51 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
29.10 17:32:51 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
29.10 17:32:51 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:32:51 TIME: core/server.query : 1.11 ms
29.10 17:32:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
29.10 17:32:51 DB: SELECT * FROM ItemGroups
29.10 17:32:51 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:32:51 TIME: core/server.query : 0.36 ms
29.10 17:32:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
29.10 17:32:51 DB: SELECT * FROM Bundles ORDER BY ID
29.10 17:32:51 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:32:51 TIME: core/server.query : 0.63 ms
29.10 17:32:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
29.10 17:32:51 DB: SELECT * FROM BundleItems ORDER BY ID
29.10 17:32:51 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:32:51 TIME: core/server.query : 0.42 ms
29.10 17:32:51 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
29.10 17:32:51 QUEUE: vdl.0 (thread) response core/shop.getList
29.10 17:32:51 TIME: core/shop.getList : 0.03 ms
29.10 17:32:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
29.10 17:32:51 DB: SELECT * FROM EffectAttributeTypes
29.10 17:32:51 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:32:51 TIME: core/server.query : 0.5 ms
29.10 17:32:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
29.10 17:32:51 DB: SELECT * FROM Effects
29.10 17:32:51 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:32:51 TIME: core/server.query : 0.32 ms
29.10 17:32:51 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
29.10 17:32:51 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
29.10 17:32:51 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:32:51 TIME: core/server.query : 0.74 ms
29.10 17:32:51 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
29.10 17:32:51 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
29.10 17:32:51 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:32:51 TIME: core/server.query : 0.58 ms
29.10 17:32:51 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
29.10 17:32:51 DB: SELECT * FROM Badges
29.10 17:32:51 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:32:51 TIME: core/server.query : 0.31 ms
29.10 17:32:51 TIMER: Clans cache...
29.10 17:32:51 TIMER: Clans cache: 0ms
29.10 17:32:51 TIMER: Check tournament...
29.10 17:32:51 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:33' OR rounddate = '2016-29-10 17:33' AND status <> 'finished'
29.10 17:32:51 TIMER: Check tournament: 1ms
29.10 17:32:51 TIMER: Clans cache...
29.10 17:32:51 TIMER: Clans cache: 0ms
29.10 17:32:51 TIMER: Check tournament...
29.10 17:32:51 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:34' OR rounddate = '2016-29-10 17:34' AND status <> 'finished'
29.10 17:32:51 TIMER: Check tournament: 1ms
29.10 17:34:53 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid113' AND Password = E'uid113', _type => core/server.query }
29.10 17:34:53 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid113' AND Password = E'uid113'
29.10 17:34:53 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:34:53 TIME: core/server.query : 2.25 ms
29.10 17:34:53 NET: vdl.0 (thread) request core/user.isOnlineID { id => 113, _type => core/user.isOnlineID }
29.10 17:34:53 QUEUE: vdl.0 (thread) response core/user.isOnlineID
29.10 17:34:53 TIME: core/user.isOnlineID : 0.07 ms
29.10 17:34:53 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 113, _type => core/cache.get }
29.10 17:34:53 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
29.10 17:34:53 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
29.10 17:34:53 STATS: cache [user], database [123 calls, 0 reads, 0 writes]
29.10 17:34:53 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
29.10 17:34:53 READDB: SELECT * FROM Users WHERE ID = 113
29.10 17:34:53 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 3.69 ms]
29.10 17:34:53 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
29.10 17:34:53 QUEUE: vdl.0 (thread) response core/cache.get
29.10 17:34:53 TIME: core/cache.get : 3.92 ms
29.10 17:34:53 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 113, _type => core/cache.get }
29.10 17:34:53 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
29.10 17:34:53 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
29.10 17:34:53 STATS: cache [questdata], database [123 calls, 0 reads, 0 writes]
29.10 17:34:53 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
29.10 17:34:53 READDB: SELECT * FROM UserQuests WHERE ID = 113
29.10 17:34:53 QUEUE: vdl.0 (thread) response core/cache.get
29.10 17:34:53 TIME: core/cache.get : 1.18 ms
29.10 17:34:53 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 113, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
29.10 17:34:53 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
29.10 17:34:53 TIME: core/user.loginPost : 0.08 ms
29.10 17:35:01 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 113, _type => core/cache.update }
29.10 17:35:01 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
29.10 17:35:01 TIME: core/cache.update : 0.07 ms
29.10 17:35:02 WRITEDB: UPDATE Users SET name = E'uid113', deleted = E'false', email = E'', networktype = E'  ', password = E'uid113', isbanned = E'false', regdate = E'2016-10-29 17:12:53.911759+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477750380,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}' WHERE ID = 113
29.10 17:35:40 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
29.10 17:35:40 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
29.10 17:35:40 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
29.10 17:35:40 TIME: core/server.query : 2.05 ms
29.10 17:35:40 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
29.10 17:35:40 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
29.10 17:35:40 TIME: core/user.isOnlineID : 0.07 ms
29.10 17:35:40 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
29.10 17:35:40 READDB: SELECT * FROM Users WHERE ID = 107
29.10 17:35:40 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477748429, lastLoginDate => 303, lastLoadDate => 1030 }, effects => { list => [] } }}, version => 0, id => 107 } }
29.10 17:35:40 TIME: core/cache.get : 2.25 ms
29.10 17:35:40 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
29.10 17:35:40 READDB: SELECT * FROM UserQuests WHERE ID = 107
29.10 17:35:40 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
29.10 17:35:40 TIME: core/cache.get : 0.75 ms
29.10 17:35:40 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
29.10 17:35:40 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
29.10 17:35:40 TIME: core/user.loginPost : 0.08 ms
29.10 17:35:46 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
29.10 17:35:46 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
29.10 17:35:46 TIME: core/cache.update : 0.1 ms
29.10 17:35:47 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477748429,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}' WHERE ID = 107
29.10 17:35:49 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:35:49 DB: SELECT * FROM tournament
29.10 17:35:49 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
29.10 17:35:49 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
29.10 17:35:49 STATS: cache [tournament], database [179 calls, 0 reads, 0 writes]
29.10 17:35:49 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
29.10 17:35:49 READDB: SELECT * FROM Tournament WHERE ID = 1
29.10 17:35:49 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [], battleActive => null, rounddate => 2016-29-10 17:37, startdate => 2016-29-10 17:37 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:35:49 TIME: vdl/cache.tournament.getAvailableTournament : 2.39 ms
29.10 17:35:51 TIMER: Clans cache...
29.10 17:35:51 TIMER: Clans cache: 0ms
29.10 17:35:51 TIMER: Check tournament...
29.10 17:35:51 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:35' OR rounddate = '2016-29-10 17:35' AND status <> 'finished'
29.10 17:35:51 TIMER: Check tournament: 0ms
29.10 17:35:53 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 107, tournament => 1, _type => vdl/cache.tournament.addUsers }
29.10 17:35:53 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
29.10 17:35:53 TIME: vdl/cache.tournament.addUsers : 0.12 ms
29.10 17:35:53 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:35:53 DB: SELECT * FROM tournament
29.10 17:35:53 DB: SELECT name FROM users WHERE id = 107
29.10 17:35:53 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid107, id => 107 }], battleActive => null, rounddate => 2016-29-10 17:37, startdate => 2016-29-10 17:37 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:35:53 TIME: vdl/cache.tournament.getAvailableTournament : 1.11 ms
29.10 17:35:55 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-29-10 17:37', roundinterval = E'1', params = E'{"params":{"usersList":[107],"usersAll":[107]}}', rounddate = E'2016-29-10 17:37' WHERE ID = 1
29.10 17:35:57 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:35:57 DB: SELECT * FROM tournament
29.10 17:35:57 DB: SELECT name FROM users WHERE id = 107
29.10 17:35:57 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid107, id => 107 }], battleActive => null, rounddate => 2016-29-10 17:37, startdate => 2016-29-10 17:37 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:35:57 TIME: vdl/cache.tournament.getAvailableTournament : 3.01 ms
29.10 17:36:04 NET: vdl.0 (thread) request vdl/cache.tournament.addUsers { userId => 113, tournament => 1, _type => vdl/cache.tournament.addUsers }
29.10 17:36:04 QUEUE: vdl.0 (thread) response vdl/cache.tournament.addUsers { errorCode => ok, _type => vdl/cache.tournament.addUsers }
29.10 17:36:04 TIME: vdl/cache.tournament.addUsers : 0.23 ms
29.10 17:36:04 WRITEDB: UPDATE Tournament SET name = E'test', winner = E'-1', status = E'starting', type = E'once', repeatinterval = E'0', round = E'1', startdate = E'2016-29-10 17:37', roundinterval = E'1', params = E'{"params":{"usersList":[107,113],"usersAll":[107,113]}}', rounddate = E'2016-29-10 17:37' WHERE ID = 1
29.10 17:36:04 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:36:04 DB: SELECT * FROM tournament
29.10 17:36:04 DB: SELECT name FROM users WHERE id = 107
29.10 17:36:04 DB: SELECT name FROM users WHERE id = 113
29.10 17:36:04 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid107, id => 107 },{ name => uid113, id => 113 }], battleActive => null, rounddate => 2016-29-10 17:37, startdate => 2016-29-10 17:37 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:36:04 TIME: vdl/cache.tournament.getAvailableTournament : 2.4 ms
29.10 17:36:15 BLOCKREMOVE: tournament 1 removed
29.10 17:36:27 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true, _type => core/server.query }
29.10 17:36:27 DB: SELECT id FROM battle WHERE firstid=107 OR secondid=107 AND finished <> true
29.10 17:36:27 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
29.10 17:36:27 TIME: core/server.query : 1.55 ms
29.10 17:36:27 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
29.10 17:36:27 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
29.10 17:36:27 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
29.10 17:36:27 STATS: cache [battle], database [217 calls, 0 reads, 0 writes]
29.10 17:36:27 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
29.10 17:36:27 READDB: SELECT * FROM Battle WHERE ID = 0
29.10 17:36:27 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
29.10 17:36:27 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 156
Called from modules/VDLCache.hx line 149
Called from modules/VDLCache.hx line 99
Called from snipe/cache/CacheServer.hx line 487
29.10 17:36:27 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
29.10 17:36:27 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 107, _type => core/cache.update }
29.10 17:36:27 STATS: cache [user], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
29.10 17:36:27 STATS: cache [user], segments [7 calls, 2 hits, 4 misses]
29.10 17:36:27 STATS: cache [user], database [217 calls, 2 reads, 2 writes]
29.10 17:36:27 STATS: cache [user], lock [2 calls, 2 attempts, 0 failures]
29.10 17:36:27 STATS: cache manager [1], get [4 calls, total 0.01 sec spent, avg 1.86 ms]
29.10 17:36:27 STATS: cache manager [1], update [3 calls, total 0 sec spent, avg 0.07 ms]
29.10 17:36:27 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
29.10 17:36:27 TIME: core/cache.update : 0.31 ms
29.10 17:36:27 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 107, _type => core/cache.update }
29.10 17:36:27 STATS: cache [questdata], get [2 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
29.10 17:36:27 STATS: cache [questdata], segments [5 calls, 0 hits, 4 misses]
29.10 17:36:27 STATS: cache [questdata], database [217 calls, 2 reads, 0 writes]
29.10 17:36:27 STATS: cache [questdata], lock [2 calls, 2 attempts, 0 failures]
29.10 17:36:27 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
29.10 17:36:27 TIME: core/cache.update : 0.32 ms
29.10 17:36:27 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 107, _type => core/user.logoutPost }
29.10 17:36:27 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
29.10 17:36:27 TIME: core/user.logoutPost : 0.11 ms
29.10 17:36:28 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477748429,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}' WHERE ID = 107
29.10 17:36:28 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 107
29.10 17:36:38 BLOCKREMOVE: user 107 removed
29.10 17:36:38 BLOCKREMOVE: questdata 107 removed
29.10 17:36:38 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
29.10 17:36:38 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
29.10 17:36:38 QUEUE: vdl.0 (thread) response core/server.query { list => {{ name => uid107, networkid => , isbanned => false, id => 107 }}, errorCode => ok, _type => core/server.query }
29.10 17:36:38 TIME: core/server.query : 1.02 ms
29.10 17:36:38 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
29.10 17:36:38 QUEUE: vdl.0 (thread) response core/user.isOnlineID { isOnline => false, errorCode => ok, _type => core/user.isOnlineID }
29.10 17:36:38 TIME: core/user.isOnlineID : 0.07 ms
29.10 17:36:38 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
29.10 17:36:38 READDB: SELECT * FROM Users WHERE ID = 107
29.10 17:36:38 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {name => uid107, deleted => false, email => , networktype =>   , password => uid107, isbanned => false, regdate => 2016-10-28 16:37:18.693533+03, language => en, networkid => , params => { info => { city => null, year => null, email => null }, inventory => { list => [] }, vars => {}, attrs => { _lastTime.24hr => 1477748429, lastLoginDate => 303, lastLoadDate => 1030 }, effects => { list => [] } }}, version => 0, id => 107 } }
29.10 17:36:38 TIME: core/cache.get : 1.15 ms
29.10 17:36:38 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
29.10 17:36:38 READDB: SELECT * FROM UserQuests WHERE ID = 107
29.10 17:36:38 QUEUE: vdl.0 (thread) response core/cache.get { errorCode => ok, _type => core/cache.get, block => { list => {params => { quests => { list => [] } }}, version => 0, id => 107 } }
29.10 17:36:38 TIME: core/cache.get : 0.6 ms
29.10 17:36:38 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
29.10 17:36:38 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
29.10 17:36:38 TIME: core/user.loginPost : 0.09 ms
29.10 17:36:44 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=113 OR secondid=113 AND finished <> true, _type => core/server.query }
29.10 17:36:44 DB: SELECT id FROM battle WHERE firstid=113 OR secondid=113 AND finished <> true
29.10 17:36:44 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
29.10 17:36:44 TIME: core/server.query : 0.94 ms
29.10 17:36:44 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
29.10 17:36:44 READDB: SELECT * FROM Battle WHERE ID = 0
29.10 17:36:44 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
29.10 17:36:44 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 156
Called from modules/VDLCache.hx line 149
Called from modules/VDLCache.hx line 99
Called from snipe/cache/CacheServer.hx line 487
29.10 17:36:44 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
29.10 17:36:44 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 113, _type => core/cache.update }
29.10 17:36:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
29.10 17:36:44 TIME: core/cache.update : 0.09 ms
29.10 17:36:44 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 113, _type => core/cache.update }
29.10 17:36:44 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
29.10 17:36:44 TIME: core/cache.update : 0.08 ms
29.10 17:36:44 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 113, _type => core/user.logoutPost }
29.10 17:36:44 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
29.10 17:36:44 TIME: core/user.logoutPost : 0.08 ms
29.10 17:36:45 WRITEDB: UPDATE Users SET name = E'uid113', deleted = E'false', email = E'', networktype = E'  ', password = E'uid113', isbanned = E'false', regdate = E'2016-10-29 17:12:53.911759+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477750380,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}' WHERE ID = 113
29.10 17:36:45 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 113
29.10 17:36:46 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
29.10 17:36:46 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
29.10 17:36:46 TIME: core/cache.update : 0.18 ms
29.10 17:36:46 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477748429,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}' WHERE ID = 107
29.10 17:36:51 TIMER: Clans cache...
29.10 17:36:51 TIMER: Clans cache: 0ms
29.10 17:36:51 TIMER: Check tournament...
29.10 17:36:51 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:36' OR rounddate = '2016-29-10 17:36' AND status <> 'finished'
29.10 17:36:51 TIMER: Check tournament: 0ms
29.10 17:36:54 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:36:54 DB: SELECT * FROM tournament
29.10 17:36:54 STATS: cache [tournament], get [7 calls, 5 cache hits, 1 cache misses, 0 same version, 0 not found]
29.10 17:36:54 STATS: cache [tournament], segments [9 calls, 7 hits, 1 misses]
29.10 17:36:54 STATS: cache [tournament], database [244 calls, 1 reads, 2 writes]
29.10 17:36:54 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
29.10 17:36:54 READDB: SELECT * FROM Tournament WHERE ID = 1
29.10 17:36:54 DB: SELECT name FROM users WHERE id = 107
29.10 17:36:54 DB: SELECT name FROM users WHERE id = 113
29.10 17:36:54 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid107, id => 107 },{ name => uid113, id => 113 }], battleActive => null, rounddate => 2016-29-10 17:37, startdate => 2016-29-10 17:37 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:36:54 TIME: vdl/cache.tournament.getAvailableTournament : 1.71 ms
29.10 17:36:55 BLOCKREMOVE: user 113 removed
29.10 17:36:55 BLOCKREMOVE: questdata 113 removed
29.10 17:36:57 NET: vdl.0 (thread) request vdl/cache.tournament.getStatus { tournamentId => 1, _type => vdl/cache.tournament.getStatus }
29.10 17:36:57 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getStatus { errorCode => ok, _type => vdl/cache.tournament.getStatus, status => starting }
29.10 17:36:57 TIME: vdl/cache.tournament.getStatus : 0.08 ms
29.10 17:36:57 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournamentUsers { tournamentId => 1, _type => vdl/cache.tournament.getAvailableTournamentUsers }
29.10 17:36:57 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournamentUsers { errorCode => ok, _type => vdl/cache.tournament.getAvailableTournamentUsers, users => [107,113] }
29.10 17:36:57 TIME: vdl/cache.tournament.getAvailableTournamentUsers : 0.08 ms
29.10 17:36:57 NET: vdl.0 (thread) request vdl/cache.tournament.setGrid { battles => [{ winner => -1, round => 1, player1 => 107, player2 => 113 }], tournamentId => 1, round => 1, _type => vdl/cache.tournament.setGrid, status => starting }
29.10 17:36:57 QUEUE: vdl.0 (thread) response vdl/cache.tournament.setGrid { list => [{ winner => -1, round => 1, player1 => 107, player2 => 113 }], tournamentId => 1, errorCode => ok, _type => vdl/cache.tournament.setGrid }
29.10 17:36:57 TIME: vdl/cache.tournament.setGrid : 0.09 ms
29.10 17:37:08 BLOCKREMOVE: tournament 1 removed
29.10 17:37:51 TIMER: Clans cache...
29.10 17:37:51 TIMER: Clans cache: 0ms
29.10 17:37:51 TIMER: Check tournament...
29.10 17:37:51 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:37' OR rounddate = '2016-29-10 17:37' AND status <> 'finished'
29.10 17:37:51 READDB: SELECT * FROM Tournament WHERE ID = 1
29.10 17:37:51 DB: SELECT nextval('Battle_id_seq') AS id
29.10 17:37:51 READDB: SELECT ID FROM Battle WHERE ID = 101
29.10 17:37:51 READDB: INSERT INTO Battle (ID) VALUES (101)
29.10 17:37:51 STATS: cache [battle], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 2 not found]
29.10 17:37:51 STATS: cache [battle], segments [3 calls, 0 hits, 2 misses]
29.10 17:37:51 STATS: cache [battle], database [300 calls, 2 reads, 0 writes]
29.10 17:37:51 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
29.10 17:37:51 READDB: SELECT * FROM Battle WHERE ID = 101
29.10 17:37:51 DB: SELECT name FROM users WHERE id=113
29.10 17:37:51 DB: SELECT name FROM users WHERE id=107
29.10 17:37:52 TRACE: Check tournament timer exception:
29.10 17:37:52 TRACE: C Stack Overflow

29.10 17:37:52 TIMER: Check tournament: 1367ms
29.10 17:37:56 WRITEDB: UPDATE Battle SET secondid = E'107', turnid = E'113', finished = E'false', firstid = E'113', params = E'{}', avaliable = E'false' WHERE ID = 101
29.10 17:38:01 BLOCKREMOVE: tournament 1 removed
29.10 17:38:06 BLOCKREMOVE: battle 101 removed
29.10 17:38:51 TIMER: Clans cache...
29.10 17:38:51 TIMER: Clans cache: 0ms
29.10 17:39:26 TIMER: Starting timer...
29.10 17:39:26 TIMER: Timer running...
29.10 17:39:26 DB: SELECT * FROM GameVars
29.10 17:39:26 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
29.10 17:39:26 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
29.10 17:39:26 DB: SELECT * FROM Shops WHERE ID = 1
29.10 17:39:26 TEMP: load ./tmp/quest_daily_ids
29.10 17:39:26 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
29.10 17:39:26 TEMP: save ./tmp/quest_daily_ids
29.10 17:39:26 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
29.10 17:39:26 QUEUE: vdl.0 (thread) response server.login
29.10 17:39:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
29.10 17:39:26 DB: SELECT * FROM LocalizationStrings
29.10 17:39:26 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:39:26 TIME: core/server.query : 8.67 ms
29.10 17:39:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
29.10 17:39:26 DB: SELECT * FROM GameVars
29.10 17:39:26 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:39:26 TIME: core/server.query : 0.68 ms
29.10 17:39:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
29.10 17:39:26 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
29.10 17:39:26 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:39:26 TIME: core/server.query : 1.03 ms
29.10 17:39:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
29.10 17:39:26 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
29.10 17:39:26 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:39:26 TIME: core/server.query : 0.63 ms
29.10 17:39:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
29.10 17:39:26 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
29.10 17:39:26 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:39:26 TIME: core/server.query : 0.54 ms
29.10 17:39:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
29.10 17:39:26 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
29.10 17:39:26 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:39:26 TIME: core/server.query : 0.88 ms
29.10 17:39:26 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
29.10 17:39:26 QUEUE: vdl.0 (thread) response core/quest.getDaily
29.10 17:39:26 TIME: core/quest.getDaily : 0.02 ms
29.10 17:39:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
29.10 17:39:26 DB: SELECT * FROM UserAttributeTypes
29.10 17:39:26 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:39:26 TIME: core/server.query : 0.52 ms
29.10 17:39:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
29.10 17:39:26 DB: SELECT * FROM UserVariableTypes
29.10 17:39:26 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:39:26 TIME: core/server.query : 0.31 ms
29.10 17:39:26 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
29.10 17:39:26 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
29.10 17:39:26 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:39:26 TIME: core/server.query : 1.26 ms
29.10 17:39:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
29.10 17:39:26 DB: SELECT * FROM ItemGroups
29.10 17:39:26 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:39:26 TIME: core/server.query : 0.42 ms
29.10 17:39:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
29.10 17:39:26 DB: SELECT * FROM Bundles ORDER BY ID
29.10 17:39:26 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:39:26 TIME: core/server.query : 0.77 ms
29.10 17:39:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
29.10 17:39:26 DB: SELECT * FROM BundleItems ORDER BY ID
29.10 17:39:26 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:39:26 TIME: core/server.query : 0.41 ms
29.10 17:39:26 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
29.10 17:39:26 QUEUE: vdl.0 (thread) response core/shop.getList
29.10 17:39:26 TIME: core/shop.getList : 0.02 ms
29.10 17:39:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
29.10 17:39:26 DB: SELECT * FROM EffectAttributeTypes
29.10 17:39:26 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:39:26 TIME: core/server.query : 0.82 ms
29.10 17:39:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
29.10 17:39:26 DB: SELECT * FROM Effects
29.10 17:39:26 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:39:26 TIME: core/server.query : 0.4 ms
29.10 17:39:26 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
29.10 17:39:26 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
29.10 17:39:26 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:39:26 TIME: core/server.query : 0.77 ms
29.10 17:39:26 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
29.10 17:39:26 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
29.10 17:39:26 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:39:26 TIME: core/server.query : 0.64 ms
29.10 17:39:26 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
29.10 17:39:26 DB: SELECT * FROM Badges
29.10 17:39:26 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:39:26 TIME: core/server.query : 0.4 ms
29.10 17:39:26 TIMER: Clans cache...
29.10 17:39:26 TIMER: Clans cache: 0ms
29.10 17:39:26 TIMER: Check tournament...
29.10 17:39:26 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:40' OR rounddate = '2016-29-10 17:40' AND status <> 'finished'
29.10 17:39:26 TIMER: Check tournament: 1ms
29.10 17:40:30 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
29.10 17:40:30 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
29.10 17:40:30 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:40:30 TIME: core/server.query : 2.92 ms
29.10 17:40:30 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
29.10 17:40:30 QUEUE: vdl.0 (thread) response core/user.isOnlineID
29.10 17:40:30 TIME: core/user.isOnlineID : 0.1 ms
29.10 17:40:30 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
29.10 17:40:30 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
29.10 17:40:30 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
29.10 17:40:30 STATS: cache [user], database [65 calls, 0 reads, 0 writes]
29.10 17:40:30 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
29.10 17:40:30 READDB: SELECT * FROM Users WHERE ID = 107
29.10 17:40:30 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 4.03 ms]
29.10 17:40:30 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
29.10 17:40:30 QUEUE: vdl.0 (thread) response core/cache.get
29.10 17:40:30 TIME: core/cache.get : 4.28 ms
29.10 17:40:30 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
29.10 17:40:30 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
29.10 17:40:30 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
29.10 17:40:30 STATS: cache [questdata], database [65 calls, 0 reads, 0 writes]
29.10 17:40:30 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
29.10 17:40:30 READDB: SELECT * FROM UserQuests WHERE ID = 107
29.10 17:40:30 QUEUE: vdl.0 (thread) response core/cache.get
29.10 17:40:30 TIME: core/cache.get : 1.57 ms
29.10 17:40:30 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
29.10 17:40:30 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
29.10 17:40:30 TIME: core/user.loginPost : 0.16 ms
29.10 17:40:36 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
29.10 17:40:36 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
29.10 17:40:36 TIME: core/cache.update : 0.27 ms
29.10 17:40:37 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477748429,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}' WHERE ID = 107
29.10 17:41:26 TIMER: Clans cache...
29.10 17:41:26 TIMER: Clans cache: 0ms
29.10 17:41:26 TIMER: Check tournament...
29.10 17:41:26 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:41' OR rounddate = '2016-29-10 17:41' AND status <> 'finished'
29.10 17:41:26 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
29.10 17:41:26 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
29.10 17:41:26 STATS: cache [tournament], database [120 calls, 0 reads, 0 writes]
29.10 17:41:26 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
29.10 17:41:26 READDB: SELECT * FROM Tournament WHERE ID = 1
29.10 17:41:26 DB: SELECT nextval('Battle_id_seq') AS id
29.10 17:41:26 READDB: SELECT ID FROM Battle WHERE ID = 102
29.10 17:41:26 READDB: INSERT INTO Battle (ID) VALUES (102)
29.10 17:41:26 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
29.10 17:41:26 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
29.10 17:41:26 STATS: cache [battle], database [121 calls, 0 reads, 0 writes]
29.10 17:41:26 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
29.10 17:41:26 READDB: SELECT * FROM Battle WHERE ID = 102
29.10 17:41:26 DB: SELECT name FROM users WHERE id=113
29.10 17:41:26 DB: SELECT name FROM users WHERE id=107
29.10 17:41:28 TRACE: Check tournament timer exception:
29.10 17:41:28 TRACE: C Stack Overflow

29.10 17:41:28 TIMER: Check tournament: 1456ms
29.10 17:41:32 WRITEDB: UPDATE Battle SET secondid = E'107', turnid = E'113', finished = E'false', firstid = E'113', params = E'{}', avaliable = E'false' WHERE ID = 102
29.10 17:41:37 BLOCKREMOVE: tournament 1 removed
29.10 17:41:42 BLOCKREMOVE: battle 102 removed
29.10 17:42:27 TIMER: Clans cache...
29.10 17:42:27 TIMER: Clans cache: 0ms
29.10 17:42:28 TIMER: Check tournament...
29.10 17:42:28 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:42' OR rounddate = '2016-29-10 17:42' AND status <> 'finished'
29.10 17:42:28 TIMER: Check tournament: 0ms
29.10 17:43:27 TIMER: Clans cache...
29.10 17:43:27 TIMER: Clans cache: 0ms
29.10 17:43:28 TIMER: Check tournament...
29.10 17:43:28 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:43' OR rounddate = '2016-29-10 17:43' AND status <> 'finished'
29.10 17:43:28 TIMER: Check tournament: 1ms
29.10 17:44:27 TIMER: Clans cache...
29.10 17:44:27 TIMER: Clans cache: 0ms
29.10 17:44:28 TIMER: Check tournament...
29.10 17:44:28 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:44' OR rounddate = '2016-29-10 17:44' AND status <> 'finished'
29.10 17:44:28 TIMER: Check tournament: 1ms
29.10 17:45:27 TIMER: Clans cache...
29.10 17:45:27 TIMER: Clans cache: 0ms
29.10 17:45:28 TIMER: Check tournament...
29.10 17:45:28 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:45' OR rounddate = '2016-29-10 17:45' AND status <> 'finished'
29.10 17:45:28 TIMER: Check tournament: 1ms
29.10 17:46:27 TIMER: Clans cache...
29.10 17:46:27 TIMER: Clans cache: 0ms
29.10 17:46:28 TIMER: Check tournament...
29.10 17:46:28 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:46' OR rounddate = '2016-29-10 17:46' AND status <> 'finished'
29.10 17:46:28 TIMER: Check tournament: 1ms
29.10 17:47:27 TIMER: Clans cache...
29.10 17:47:27 TIMER: Clans cache: 0ms
29.10 17:48:19 TIMER: Starting timer...
29.10 17:48:19 TIMER: Timer running...
29.10 17:48:19 DB: SELECT * FROM GameVars
29.10 17:48:19 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
29.10 17:48:19 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
29.10 17:48:19 DB: SELECT * FROM Shops WHERE ID = 1
29.10 17:48:19 TEMP: load ./tmp/quest_daily_ids
29.10 17:48:19 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
29.10 17:48:19 TEMP: save ./tmp/quest_daily_ids
29.10 17:48:19 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
29.10 17:48:19 QUEUE: vdl.0 (thread) response server.login
29.10 17:48:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
29.10 17:48:19 DB: SELECT * FROM LocalizationStrings
29.10 17:48:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:48:19 TIME: core/server.query : 5.91 ms
29.10 17:48:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
29.10 17:48:19 DB: SELECT * FROM GameVars
29.10 17:48:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:48:19 TIME: core/server.query : 0.55 ms
29.10 17:48:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
29.10 17:48:19 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
29.10 17:48:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:48:19 TIME: core/server.query : 0.57 ms
29.10 17:48:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
29.10 17:48:19 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
29.10 17:48:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:48:19 TIME: core/server.query : 0.41 ms
29.10 17:48:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
29.10 17:48:19 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
29.10 17:48:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:48:19 TIME: core/server.query : 0.48 ms
29.10 17:48:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
29.10 17:48:19 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
29.10 17:48:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:48:19 TIME: core/server.query : 0.71 ms
29.10 17:48:19 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
29.10 17:48:19 QUEUE: vdl.0 (thread) response core/quest.getDaily
29.10 17:48:19 TIME: core/quest.getDaily : 0.02 ms
29.10 17:48:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
29.10 17:48:19 DB: SELECT * FROM UserAttributeTypes
29.10 17:48:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:48:19 TIME: core/server.query : 0.32 ms
29.10 17:48:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
29.10 17:48:19 DB: SELECT * FROM UserVariableTypes
29.10 17:48:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:48:19 TIME: core/server.query : 0.3 ms
29.10 17:48:19 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
29.10 17:48:19 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
29.10 17:48:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:48:19 TIME: core/server.query : 0.99 ms
29.10 17:48:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
29.10 17:48:19 DB: SELECT * FROM ItemGroups
29.10 17:48:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:48:19 TIME: core/server.query : 0.37 ms
29.10 17:48:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
29.10 17:48:19 DB: SELECT * FROM Bundles ORDER BY ID
29.10 17:48:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:48:19 TIME: core/server.query : 0.45 ms
29.10 17:48:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
29.10 17:48:19 DB: SELECT * FROM BundleItems ORDER BY ID
29.10 17:48:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:48:19 TIME: core/server.query : 0.39 ms
29.10 17:48:19 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
29.10 17:48:19 QUEUE: vdl.0 (thread) response core/shop.getList
29.10 17:48:19 TIME: core/shop.getList : 0.02 ms
29.10 17:48:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
29.10 17:48:19 DB: SELECT * FROM EffectAttributeTypes
29.10 17:48:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:48:19 TIME: core/server.query : 0.3 ms
29.10 17:48:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
29.10 17:48:19 DB: SELECT * FROM Effects
29.10 17:48:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:48:19 TIME: core/server.query : 0.3 ms
29.10 17:48:19 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
29.10 17:48:19 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
29.10 17:48:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:48:19 TIME: core/server.query : 0.6 ms
29.10 17:48:19 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
29.10 17:48:19 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
29.10 17:48:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:48:19 TIME: core/server.query : 1.12 ms
29.10 17:48:19 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
29.10 17:48:19 DB: SELECT * FROM Badges
29.10 17:48:19 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:48:19 TIME: core/server.query : 0.37 ms
29.10 17:49:16 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107', _type => core/server.query }
29.10 17:49:16 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid107' AND Password = E'uid107'
29.10 17:49:16 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:49:16 TIME: core/server.query : 2.76 ms
29.10 17:49:16 NET: vdl.0 (thread) request core/user.isOnlineID { id => 107, _type => core/user.isOnlineID }
29.10 17:49:16 QUEUE: vdl.0 (thread) response core/user.isOnlineID
29.10 17:49:16 TIME: core/user.isOnlineID : 0.08 ms
29.10 17:49:16 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 107, _type => core/cache.get }
29.10 17:49:16 READDB: SELECT * FROM Users WHERE ID = 107
29.10 17:49:16 QUEUE: vdl.0 (thread) response core/cache.get
29.10 17:49:16 TIME: core/cache.get : 3.14 ms
29.10 17:49:16 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 107, _type => core/cache.get }
29.10 17:49:16 READDB: SELECT * FROM UserQuests WHERE ID = 107
29.10 17:49:16 QUEUE: vdl.0 (thread) response core/cache.get
29.10 17:49:16 TIME: core/cache.get : 1.1 ms
29.10 17:49:16 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 107, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
29.10 17:49:16 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
29.10 17:49:16 TIME: core/user.loginPost : 0.11 ms
29.10 17:49:19 TIMER: Clans cache...
29.10 17:49:19 TIMER: Clans cache: 0ms
29.10 17:49:19 TIMER: Check tournament...
29.10 17:49:19 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:49' OR rounddate = '2016-29-10 17:49' AND status <> 'finished'
29.10 17:49:19 TIMER: Check tournament: 1ms
29.10 17:49:24 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 107, _type => core/cache.update }
29.10 17:49:24 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
29.10 17:49:24 STATS: cache [user], segments [3 calls, 0 hits, 2 misses]
29.10 17:49:24 STATS: cache [user], database [66 calls, 1 reads, 0 writes]
29.10 17:49:24 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
29.10 17:49:24 STATS: cache manager [1], get [2 calls, total 0 sec spent, avg 2.04 ms]
29.10 17:49:24 STATS: cache manager [1], update [1 calls, total 0 sec spent, avg 0.3 ms]
29.10 17:49:24 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
29.10 17:49:24 TIME: core/cache.update : 0.57 ms
29.10 17:49:25 WRITEDB: UPDATE Users SET name = E'uid107', deleted = E'false', email = E'', networktype = E'  ', password = E'uid107', isbanned = E'false', regdate = E'2016-10-28 16:37:18.693533+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477748429,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}' WHERE ID = 107
29.10 17:50:19 TIMER: Clans cache...
29.10 17:50:19 TIMER: Clans cache: 0ms
29.10 17:50:19 TIMER: Check tournament...
29.10 17:50:19 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:50' OR rounddate = '2016-29-10 17:50' AND status <> 'finished'
29.10 17:50:19 TIMER: Check tournament: 1ms
29.10 17:50:19 TIMER: Clans cache...
29.10 17:50:19 TIMER: Clans cache: 0ms
29.10 17:50:19 TIMER: Check tournament...
29.10 17:50:19 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:51' OR rounddate = '2016-29-10 17:51' AND status <> 'finished'
29.10 17:50:19 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
29.10 17:50:19 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
29.10 17:50:19 STATS: cache [tournament], database [180 calls, 0 reads, 0 writes]
29.10 17:50:19 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
29.10 17:50:19 READDB: SELECT * FROM Tournament WHERE ID = 1
29.10 17:50:19 DB: SELECT nextval('Battle_id_seq') AS id
29.10 17:50:19 READDB: SELECT ID FROM Battle WHERE ID = 103
29.10 17:50:19 READDB: INSERT INTO Battle (ID) VALUES (103)
29.10 17:50:19 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
29.10 17:50:19 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
29.10 17:50:19 STATS: cache [battle], database [181 calls, 0 reads, 0 writes]
29.10 17:50:19 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
29.10 17:50:19 READDB: SELECT * FROM Battle WHERE ID = 103
29.10 17:50:19 DB: SELECT name FROM users WHERE id=113
29.10 17:50:19 DB: SELECT name FROM users WHERE id=107
29.10 17:51:21 TRACE: Check tournament timer exception:
29.10 17:51:21 TRACE: C Stack Overflow

29.10 17:51:21 TIMER: Check tournament: 1487ms
29.10 17:51:24 WRITEDB: UPDATE Battle SET secondid = E'107', turnid = E'113', finished = E'false', firstid = E'113', params = E'{}', avaliable = E'false' WHERE ID = 103
29.10 17:51:29 BLOCKREMOVE: tournament 1 removed
29.10 17:51:34 BLOCKREMOVE: battle 103 removed
29.10 17:52:20 TIMER: Clans cache...
29.10 17:52:20 TIMER: Clans cache: 0ms
29.10 17:52:21 TIMER: Check tournament...
29.10 17:52:21 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:52' OR rounddate = '2016-29-10 17:52' AND status <> 'finished'
29.10 17:52:21 TIMER: Check tournament: 0ms
29.10 17:53:20 TIMER: Clans cache...
29.10 17:53:20 TIMER: Clans cache: 0ms
29.10 17:53:21 TIMER: Check tournament...
29.10 17:53:21 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:53' OR rounddate = '2016-29-10 17:53' AND status <> 'finished'
29.10 17:53:21 TIMER: Check tournament: 0ms
29.10 17:54:20 TIMER: Clans cache...
29.10 17:54:20 TIMER: Clans cache: 0ms
29.10 17:56:11 TIMER: Starting timer...
29.10 17:56:11 TIMER: Timer running...
29.10 17:56:11 DB: SELECT * FROM GameVars
29.10 17:56:11 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
29.10 17:56:11 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
29.10 17:56:11 DB: SELECT * FROM Shops WHERE ID = 1
29.10 17:56:11 TEMP: load ./tmp/quest_daily_ids
29.10 17:56:11 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
29.10 17:56:11 TEMP: save ./tmp/quest_daily_ids
29.10 17:56:11 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
29.10 17:56:11 QUEUE: vdl.0 (thread) response server.login
29.10 17:56:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
29.10 17:56:11 DB: SELECT * FROM LocalizationStrings
29.10 17:56:11 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:56:11 TIME: core/server.query : 9.1 ms
29.10 17:56:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
29.10 17:56:11 DB: SELECT * FROM GameVars
29.10 17:56:11 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:56:11 TIME: core/server.query : 0.57 ms
29.10 17:56:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
29.10 17:56:11 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
29.10 17:56:11 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:56:11 TIME: core/server.query : 0.68 ms
29.10 17:56:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
29.10 17:56:11 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
29.10 17:56:11 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:56:11 TIME: core/server.query : 0.44 ms
29.10 17:56:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
29.10 17:56:11 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
29.10 17:56:11 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:56:11 TIME: core/server.query : 0.47 ms
29.10 17:56:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
29.10 17:56:11 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
29.10 17:56:11 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:56:11 TIME: core/server.query : 0.86 ms
29.10 17:56:11 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
29.10 17:56:11 QUEUE: vdl.0 (thread) response core/quest.getDaily
29.10 17:56:11 TIME: core/quest.getDaily : 0.02 ms
29.10 17:56:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
29.10 17:56:11 DB: SELECT * FROM UserAttributeTypes
29.10 17:56:11 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:56:11 TIME: core/server.query : 0.33 ms
29.10 17:56:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
29.10 17:56:11 DB: SELECT * FROM UserVariableTypes
29.10 17:56:11 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:56:11 TIME: core/server.query : 0.49 ms
29.10 17:56:11 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
29.10 17:56:11 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
29.10 17:56:11 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:56:11 TIME: core/server.query : 0.89 ms
29.10 17:56:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
29.10 17:56:11 DB: SELECT * FROM ItemGroups
29.10 17:56:11 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:56:11 TIME: core/server.query : 0.41 ms
29.10 17:56:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
29.10 17:56:11 DB: SELECT * FROM Bundles ORDER BY ID
29.10 17:56:11 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:56:11 TIME: core/server.query : 0.42 ms
29.10 17:56:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
29.10 17:56:11 DB: SELECT * FROM BundleItems ORDER BY ID
29.10 17:56:11 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:56:11 TIME: core/server.query : 0.48 ms
29.10 17:56:11 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
29.10 17:56:11 QUEUE: vdl.0 (thread) response core/shop.getList
29.10 17:56:11 TIME: core/shop.getList : 0.02 ms
29.10 17:56:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
29.10 17:56:11 DB: SELECT * FROM EffectAttributeTypes
29.10 17:56:11 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:56:11 TIME: core/server.query : 0.29 ms
29.10 17:56:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
29.10 17:56:11 DB: SELECT * FROM Effects
29.10 17:56:11 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:56:11 TIME: core/server.query : 0.58 ms
29.10 17:56:11 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
29.10 17:56:11 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
29.10 17:56:11 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:56:11 TIME: core/server.query : 0.7 ms
29.10 17:56:11 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
29.10 17:56:11 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
29.10 17:56:11 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:56:11 TIME: core/server.query : 0.86 ms
29.10 17:56:11 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
29.10 17:56:11 DB: SELECT * FROM Badges
29.10 17:56:11 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:56:11 TIME: core/server.query : 0.53 ms
29.10 17:56:11 TIMER: Clans cache...
29.10 17:56:11 TIMER: Clans cache: 0ms
29.10 17:56:11 TIMER: Check tournament...
29.10 17:56:11 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:57' OR rounddate = '2016-29-10 17:57' AND status <> 'finished'
29.10 17:56:11 TIMER: Check tournament: 0ms
29.10 17:57:46 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid113' AND Password = E'uid113', _type => core/server.query }
29.10 17:57:46 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid113' AND Password = E'uid113'
29.10 17:57:46 QUEUE: vdl.0 (thread) response core/server.query
29.10 17:57:46 TIME: core/server.query : 1.93 ms
29.10 17:57:46 NET: vdl.0 (thread) request core/user.isOnlineID { id => 113, _type => core/user.isOnlineID }
29.10 17:57:46 QUEUE: vdl.0 (thread) response core/user.isOnlineID
29.10 17:57:46 TIME: core/user.isOnlineID : 0.06 ms
29.10 17:57:46 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 113, _type => core/cache.get }
29.10 17:57:46 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
29.10 17:57:46 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
29.10 17:57:46 STATS: cache [user], database [95 calls, 0 reads, 0 writes]
29.10 17:57:46 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
29.10 17:57:46 READDB: SELECT * FROM Users WHERE ID = 113
29.10 17:57:46 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 2.26 ms]
29.10 17:57:46 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
29.10 17:57:46 QUEUE: vdl.0 (thread) response core/cache.get
29.10 17:57:46 TIME: core/cache.get : 2.36 ms
29.10 17:57:46 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 113, _type => core/cache.get }
29.10 17:57:46 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
29.10 17:57:46 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
29.10 17:57:46 STATS: cache [questdata], database [95 calls, 0 reads, 0 writes]
29.10 17:57:46 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
29.10 17:57:46 READDB: SELECT * FROM UserQuests WHERE ID = 113
29.10 17:57:46 QUEUE: vdl.0 (thread) response core/cache.get
29.10 17:57:46 TIME: core/cache.get : 2.49 ms
29.10 17:57:46 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 113, _type => core/user.loginPost, ipAddr => 172.16.20.203 }
29.10 17:57:46 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
29.10 17:57:46 TIME: core/user.loginPost : 0.06 ms
29.10 17:57:51 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 113, _type => core/cache.update }
29.10 17:57:51 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
29.10 17:57:51 TIME: core/cache.update : 0.1 ms
29.10 17:57:52 WRITEDB: UPDATE Users SET name = E'uid113', deleted = E'false', email = E'', networktype = E'  ', password = E'uid113', isbanned = E'false', regdate = E'2016-10-29 17:12:53.911759+03', language = E'en', networkid = E'', params = E'{"info":{"city":null,"year":null,"email":null},"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1477750380,"lastLoginDate":303,"lastLoadDate":1030},"effects":{"list":[]}}' WHERE ID = 113
29.10 17:58:04 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:58:04 DB: SELECT * FROM tournament
29.10 17:58:04 STATS: cache [tournament], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
29.10 17:58:04 STATS: cache [tournament], segments [1 calls, 0 hits, 0 misses]
29.10 17:58:04 STATS: cache [tournament], database [113 calls, 0 reads, 0 writes]
29.10 17:58:04 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
29.10 17:58:04 READDB: SELECT * FROM Tournament WHERE ID = 1
29.10 17:58:04 DB: SELECT name FROM users WHERE id = 107
29.10 17:58:04 DB: SELECT name FROM users WHERE id = 113
29.10 17:58:04 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid107, id => 107 },{ name => uid113, id => 113 }], battleActive => null, rounddate => 2016-29-10 17:59, startdate => 2016-29-10 17:59 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:58:04 TIME: vdl/cache.tournament.getAvailableTournament : 3.27 ms
29.10 17:58:11 TIMER: Clans cache...
29.10 17:58:11 TIMER: Clans cache: 0ms
29.10 17:58:11 TIMER: Check tournament...
29.10 17:58:11 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:58' OR rounddate = '2016-29-10 17:58' AND status <> 'finished'
29.10 17:58:11 TIMER: Check tournament: 2ms
29.10 17:58:14 BLOCKREMOVE: tournament 1 removed
29.10 17:58:49 NET: vdl.0 (thread) request vdl/cache.tournament.getAvailableTournament { _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:58:49 DB: SELECT * FROM tournament
29.10 17:58:49 READDB: SELECT * FROM Tournament WHERE ID = 1
29.10 17:58:49 DB: SELECT name FROM users WHERE id = 107
29.10 17:58:49 DB: SELECT name FROM users WHERE id = 113
29.10 17:58:49 QUEUE: vdl.0 (thread) response vdl/cache.tournament.getAvailableTournament { list => [{ name => test, winner => -1, battleFinished => null, round => 1, id => 1, status => starting, userList => [{ name => uid107, id => 107 },{ name => uid113, id => 113 }], battleActive => null, rounddate => 2016-29-10 17:59, startdate => 2016-29-10 17:59 }], count => 1, errorCode => ok, _type => vdl/cache.tournament.getAvailableTournament }
29.10 17:58:49 TIME: vdl/cache.tournament.getAvailableTournament : 2.26 ms
29.10 17:58:59 BLOCKREMOVE: tournament 1 removed
29.10 17:59:11 TIMER: Clans cache...
29.10 17:59:11 TIMER: Clans cache: 0ms
29.10 17:59:11 TIMER: Check tournament...
29.10 17:59:11 DB: SELECT * FROM tournament WHERE startdate = '2016-29-10 17:59' OR rounddate = '2016-29-10 17:59' AND status <> 'finished'
29.10 17:59:11 STATS: cache [tournament], get [3 calls, 0 cache hits, 2 cache misses, 0 same version, 0 not found]
29.10 17:59:11 STATS: cache [tournament], segments [3 calls, 0 hits, 2 misses]
29.10 17:59:11 STATS: cache [tournament], database [180 calls, 2 reads, 0 writes]
29.10 17:59:11 STATS: cache [tournament], lock [0 calls, 0 attempts, 0 failures]
29.10 17:59:11 READDB: SELECT * FROM Tournament WHERE ID = 1
29.10 17:59:11 DB: SELECT nextval('Battle_id_seq') AS id
29.10 17:59:11 READDB: SELECT ID FROM Battle WHERE ID = 104
29.10 17:59:11 READDB: INSERT INTO Battle (ID) VALUES (104)
29.10 17:59:11 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
29.10 17:59:11 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
29.10 17:59:11 STATS: cache [battle], database [181 calls, 0 reads, 0 writes]
29.10 17:59:11 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
29.10 17:59:11 READDB: SELECT * FROM Battle WHERE ID = 104
29.10 17:59:11 DB: SELECT name FROM users WHERE id=113
29.10 17:59:11 DB: SELECT name FROM users WHERE id=107
29.10 17:59:11 QUEUE: vdl.0 (thread) response tournament.enemyEvent { data => { name => uid113, tournamentId => 1, enemy.id => 107, enemy.name => uid107, round => 1, roundDate => 2016-29-10 17:59, id => 113, enemy.num => 2, battleId => 104, player => 1 }, _isNotify => true, id => 113, _type => tournament.enemyEvent }
29.10 17:59:13 TRACE: Check tournament timer exception:
29.10 17:59:13 TRACE: C Stack Overflow

29.10 17:59:13 TIMER: Check tournament: 1458ms
29.10 17:59:16 WRITEDB: UPDATE Battle SET secondid = E'107', turnid = E'113', finished = E'false', firstid = E'113', params = E'{}', avaliable = E'false' WHERE ID = 104
29.10 17:59:21 BLOCKREMOVE: tournament 1 removed
