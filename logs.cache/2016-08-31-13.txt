31.08 13:55:02 TIMER: Starting timer...
31.08 13:55:02 TIMER: Timer running...
31.08 13:55:02 DB: SELECT * FROM GameVars
31.08 13:55:02 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 13:55:02 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 13:55:02 DB: SELECT * FROM Shops WHERE ID = 1
31.08 13:55:02 TEMP: load ./tmp/quest_daily_ids
31.08 13:55:02 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
31.08 13:55:02 TEMP: save ./tmp/quest_daily_ids
31.08 13:55:02 NET: ??? request core/server.login { host => 172.16.35.21, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.21, externalPort => 2010 }
31.08 13:55:02 QUEUE: vdl.0 (thread) response server.login
31.08 13:55:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
31.08 13:55:02 DB: SELECT * FROM LocalizationStrings
31.08 13:55:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 13:55:02 TIME: core/server.query : 65.13 ms
31.08 13:55:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
31.08 13:55:02 DB: SELECT * FROM GameVars
31.08 13:55:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 13:55:02 TIME: core/server.query : 0.74 ms
31.08 13:55:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
31.08 13:55:02 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
31.08 13:55:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 13:55:02 TIME: core/server.query : 1.4 ms
31.08 13:55:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
31.08 13:55:02 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
31.08 13:55:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 13:55:02 TIME: core/server.query : 1.66 ms
31.08 13:55:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
31.08 13:55:02 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
31.08 13:55:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 13:55:02 TIME: core/server.query : 1.05 ms
31.08 13:55:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
31.08 13:55:02 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
31.08 13:55:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 13:55:02 TIME: core/server.query : 16.83 ms
31.08 13:55:02 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
31.08 13:55:02 QUEUE: vdl.0 (thread) response core/quest.getDaily
31.08 13:55:02 TIME: core/quest.getDaily : 0.03 ms
31.08 13:55:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
31.08 13:55:02 DB: SELECT * FROM UserAttributeTypes
31.08 13:55:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 13:55:02 TIME: core/server.query : 17.64 ms
31.08 13:55:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
31.08 13:55:02 DB: SELECT * FROM UserVariableTypes
31.08 13:55:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 13:55:02 TIME: core/server.query : 1.52 ms
31.08 13:55:02 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
31.08 13:55:02 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
31.08 13:55:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 13:55:02 TIME: core/server.query : 8.72 ms
31.08 13:55:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
31.08 13:55:02 DB: SELECT * FROM ItemGroups
31.08 13:55:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 13:55:02 TIME: core/server.query : 0.65 ms
31.08 13:55:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
31.08 13:55:02 DB: SELECT * FROM Bundles ORDER BY ID
31.08 13:55:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 13:55:02 TIME: core/server.query : 11.35 ms
31.08 13:55:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
31.08 13:55:02 DB: SELECT * FROM BundleItems ORDER BY ID
31.08 13:55:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 13:55:02 TIME: core/server.query : 0.53 ms
31.08 13:55:02 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
31.08 13:55:02 QUEUE: vdl.0 (thread) response core/shop.getList
31.08 13:55:02 TIME: core/shop.getList : 0.02 ms
31.08 13:55:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
31.08 13:55:02 DB: SELECT * FROM EffectAttributeTypes
31.08 13:55:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 13:55:02 TIME: core/server.query : 0.69 ms
31.08 13:55:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
31.08 13:55:02 DB: SELECT * FROM Effects
31.08 13:55:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 13:55:02 TIME: core/server.query : 0.54 ms
31.08 13:55:02 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
31.08 13:55:02 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
31.08 13:55:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 13:55:02 TIME: core/server.query : 0.9 ms
31.08 13:55:02 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
31.08 13:55:02 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
31.08 13:55:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 13:55:02 TIME: core/server.query : 0.64 ms
31.08 13:55:02 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
31.08 13:55:02 DB: SELECT * FROM Badges
31.08 13:55:02 QUEUE: vdl.0 (thread) response core/server.query
31.08 13:55:02 TIME: core/server.query : 6.28 ms
31.08 13:55:02 TIMER: Clans cache...
31.08 13:55:02 TIMER: Clans cache: 0ms
31.08 13:55:02 TIMER: Clans cache...
31.08 13:55:02 TIMER: Clans cache: 0ms
31.08 13:55:02 TIMER: Clans cache...
31.08 13:55:02 TIMER: Clans cache: 0ms
31.08 13:55:02 TIMER: Clans cache...
31.08 13:55:02 TIMER: Clans cache: 0ms
31.08 13:55:02 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 0, 0)
31.08 13:55:02 TIMER: Clans cache...
31.08 13:55:02 TIMER: Clans cache: 0ms
31.08 13:55:02 TIMER: Clans cache...
31.08 13:55:02 TIMER: Clans cache: 0ms
31.08 13:55:02 TIMER: Clans cache...
31.08 13:55:02 TIMER: Clans cache: 0ms
31.08 13:55:02 TIMER: Clans cache...
31.08 13:55:02 TIMER: Clans cache: 0ms
