01.08 12:14:22 TIMER: Starting timer...
01.08 12:14:22 TIMER: Timer running...
01.08 12:14:22 DB: SELECT * FROM GameVars
01.08 12:14:22 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.08 12:14:22 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.08 12:14:22 DB: SELECT * FROM Shops WHERE ID = 1
01.08 12:14:22 TEMP: load ./tmp/quest_daily_ids
01.08 12:14:22 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.08 12:14:22 TEMP: save ./tmp/quest_daily_ids
01.08 12:14:22 NET: ??? request core/server.login { host => 192.168.10.204, name => testProject.0, port => 2010, type => game, _type => core/server.login, externalHost => 192.168.10.204, externalPort => 2010 }
01.08 12:14:22 QUEUE: testProject.0 (thread) response server.login
01.08 12:14:22 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.08 12:14:22 DB: SELECT * FROM LocalizationStrings
01.08 12:14:22 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:14:22 TIME: core/server.query : 6.46 ms
01.08 12:14:22 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.08 12:14:22 DB: SELECT * FROM GameVars
01.08 12:14:22 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:14:22 TIME: core/server.query : 0.52 ms
01.08 12:14:22 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.08 12:14:22 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.08 12:14:22 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:14:22 TIME: core/server.query : 0.66 ms
01.08 12:14:22 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.08 12:14:22 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.08 12:14:22 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:14:22 TIME: core/server.query : 0.4 ms
01.08 12:14:22 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.08 12:14:22 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.08 12:14:22 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:14:22 TIME: core/server.query : 0.45 ms
01.08 12:14:22 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.08 12:14:22 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.08 12:14:22 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:14:22 TIME: core/server.query : 0.93 ms
01.08 12:14:22 NET: testProject.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.08 12:14:22 QUEUE: testProject.0 (thread) response core/quest.getDaily
01.08 12:14:22 TIME: core/quest.getDaily : 0.02 ms
01.08 12:14:22 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.08 12:14:22 DB: SELECT * FROM UserAttributeTypes
01.08 12:14:22 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:14:22 TIME: core/server.query : 0.33 ms
01.08 12:14:22 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.08 12:14:22 DB: SELECT * FROM UserVariableTypes
01.08 12:14:22 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:14:22 TIME: core/server.query : 0.3 ms
01.08 12:14:22 NET: testProject.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.01.08 12:14:59 TIMER: Starting timer...
01.08 12:14:59 TIMER: Timer running...
01.08 12:14:59 DB: SELECT * FROM GameVars
01.08 12:14:59 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.08 12:14:59 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.08 12:14:59 DB: SELECT * FROM Shops WHERE ID = 1
01.08 12:14:59 TEMP: load ./tmp/quest_daily_ids
01.08 12:14:59 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.08 12:14:59 TEMP: save ./tmp/quest_daily_ids
01.08 12:14:59 NET: ??? request core/server.login { host => 192.168.10.204, name => testProject.0, port => 2010, type => game, _type => core/server.login, externalHost => 192.168.10.204, externalPort => 2010 }
01.08 12:14:59 QUEUE: testProject.0 (thread) response server.login
01.08 12:14:59 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.08 12:14:59 DB: SELECT * FROM LocalizationStrings
01.08 12:14:59 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:14:59 TIME: core/server.query : 5.75 ms
01.08 12:14:59 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.08 12:14:59 DB: SELECT * FROM GameVars
01.08 12:14:59 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:14:59 TIME: core/server.query : 0.51 ms
01.08 12:14:59 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.08 12:14:59 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.08 12:14:59 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:14:59 TIME: core/server.query : 0.62 ms
01.08 12:14:59 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.08 12:14:59 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.08 12:14:59 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:14:59 TIME: core/server.query : 0.41 ms
01.08 12:14:59 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.08 12:14:59 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.08 12:14:59 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:14:59 TIME: core/server.query : 0.48 ms
01.08 12:14:59 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.08 12:14:59 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.08 12:14:59 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:14:59 TIME: core/server.query : 0.76 ms
01.08 12:14:59 NET: testProject.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.08 12:14:59 QUEUE: testProject.0 (thread) response core/quest.getDaily
01.08 12:14:59 TIME: core/quest.getDaily : 0.02 ms
01.08 12:14:59 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.08 12:14:59 DB: SELECT * FROM UserAttributeTypes
01.08 12:14:59 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:14:59 TIME: core/server.query : 0.3 ms
01.08 12:14:59 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.08 12:14:59 DB: SELECT * FROM UserVariableTypes
01.08 12:14:59 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:14:59 TIME: core/server.query : 0.29 ms
01.08 12:14:59 NET: testProject.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i01.08 12:17:13 TIMER: Starting timer...
01.08 12:17:13 TIMER: Timer running...
01.08 12:17:13 DB: SELECT * FROM GameVars
01.08 12:17:13 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.08 12:17:13 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.08 12:17:13 DB: SELECT * FROM Shops WHERE ID = 1
01.08 12:17:13 TEMP: load ./tmp/quest_daily_ids
01.08 12:17:13 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.08 12:17:13 TEMP: save ./tmp/quest_daily_ids
01.08 12:17:13 NET: ??? request core/server.login { host => 192.168.10.204, name => testProject.0, port => 2010, type => game, _type => core/server.login, externalHost => 192.168.10.204, externalPort => 2010 }
01.08 12:17:13 QUEUE: testProject.0 (thread) response server.login
01.08 12:17:13 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.08 12:17:13 DB: SELECT * FROM LocalizationStrings
01.08 12:17:13 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:17:13 TIME: core/server.query : 6.71 ms
01.08 12:17:13 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.08 12:17:13 DB: SELECT * FROM GameVars
01.08 12:17:13 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:17:13 TIME: core/server.query : 0.49 ms
01.08 12:17:13 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.08 12:17:13 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.08 12:17:13 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:17:13 TIME: core/server.query : 0.85 ms
01.08 12:17:13 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.08 12:17:13 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.08 12:17:13 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:17:13 TIME: core/server.query : 0.39 ms
01.08 12:17:13 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.08 12:17:13 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.08 12:17:13 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:17:13 TIME: core/server.query : 0.68 ms
01.08 12:17:13 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.08 12:17:13 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.08 12:17:13 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:17:13 TIME: core/server.query : 0.86 ms
01.08 12:17:13 NET: testProject.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.08 12:17:13 QUEUE: testProject.0 (thread) response core/quest.getDaily
01.08 12:17:13 TIME: core/quest.getDaily : 0.03 ms
01.08 12:17:13 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.08 12:17:13 DB: SELECT * FROM UserAttributeTypes
01.08 12:17:13 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:17:13 TIME: core/server.query : 0.35 ms
01.08 12:17:13 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.08 12:17:13 DB: SELECT * FROM UserVariableTypes
01.08 12:17:13 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:17:13 TIME: core/server.query : 0.78 ms
01.08 12:17:13 NET: testProject.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON 01.08 12:18:56 TIMER: Starting timer...
01.08 12:18:56 TIMER: Timer running...
01.08 12:18:56 DB: SELECT * FROM GameVars
01.08 12:18:56 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.08 12:18:56 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.08 12:18:56 DB: SELECT * FROM Shops WHERE ID = 1
01.08 12:18:56 TEMP: load ./tmp/quest_daily_ids
01.08 12:18:56 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
01.08 12:18:56 TEMP: save ./tmp/quest_daily_ids
01.08 12:18:56 NET: ??? request core/server.login { host => 192.168.10.204, name => testProject.0, port => 2010, type => game, _type => core/server.login, externalHost => 192.168.10.204, externalPort => 2010 }
01.08 12:18:56 QUEUE: testProject.0 (thread) response server.login
01.08 12:18:56 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
01.08 12:18:56 DB: SELECT * FROM LocalizationStrings
01.08 12:18:56 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:18:56 TIME: core/server.query : 8.08 ms
01.08 12:18:56 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
01.08 12:18:56 DB: SELECT * FROM GameVars
01.08 12:18:56 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:18:56 TIME: core/server.query : 0.54 ms
01.08 12:18:56 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
01.08 12:18:56 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
01.08 12:18:56 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:18:56 TIME: core/server.query : 0.67 ms
01.08 12:18:56 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
01.08 12:18:56 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
01.08 12:18:56 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:18:56 TIME: core/server.query : 0.43 ms
01.08 12:18:56 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
01.08 12:18:56 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
01.08 12:18:56 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:18:56 TIME: core/server.query : 0.56 ms
01.08 12:18:56 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
01.08 12:18:56 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
01.08 12:18:56 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:18:56 TIME: core/server.query : 0.89 ms
01.08 12:18:56 NET: testProject.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
01.08 12:18:56 QUEUE: testProject.0 (thread) response core/quest.getDaily
01.08 12:18:56 TIME: core/quest.getDaily : 0.03 ms
01.08 12:18:56 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
01.08 12:18:56 DB: SELECT * FROM UserAttributeTypes
01.08 12:18:56 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:18:56 TIME: core/server.query : 0.39 ms
01.08 12:18:56 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
01.08 12:18:56 DB: SELECT * FROM UserVariableTypes
01.08 12:18:56 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:18:56 TIME: core/server.query : 0.44 ms
01.08 12:18:56 NET: testProject.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
01.08 12:18:56 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
01.08 12:18:56 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:18:56 TIME: core/server.query : 0.93 ms
01.08 12:18:56 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
01.08 12:18:56 DB: SELECT * FROM ItemGroups
01.08 12:18:56 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:18:56 TIME: core/server.query : 0.37 ms
01.08 12:18:56 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
01.08 12:18:56 DB: SELECT * FROM Bundles ORDER BY ID
01.08 12:18:56 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:18:56 TIME: core/server.query : 0.39 ms
01.08 12:18:56 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
01.08 12:18:56 DB: SELECT * FROM BundleItems ORDER BY ID
01.08 12:18:56 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:18:56 TIME: core/server.query : 0.67 ms
01.08 12:18:56 NET: testProject.0 (thread) request core/shop.getList { _type => core/shop.getList }
01.08 12:18:56 QUEUE: testProject.0 (thread) response core/shop.getList
01.08 12:18:56 TIME: core/shop.getList : 0.03 ms
01.08 12:18:56 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
01.08 12:18:56 DB: SELECT * FROM EffectAttributeTypes
01.08 12:18:56 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:18:56 TIME: core/server.query : 0.31 ms
01.08 12:18:56 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
01.08 12:18:56 DB: SELECT * FROM Effects
01.08 12:18:56 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:18:56 TIME: core/server.query : 0.62 ms
01.08 12:18:56 NET: testProject.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
01.08 12:18:56 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
01.08 12:18:56 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:18:56 TIME: core/server.query : 0.62 ms
01.08 12:18:56 NET: testProject.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
01.08 12:18:56 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
01.08 12:18:56 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:18:56 TIME: core/server.query : 0.69 ms
01.08 12:18:56 NET: testProject.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
01.08 12:18:56 DB: SELECT * FROM Badges
01.08 12:18:56 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:18:56 TIME: core/server.query : 0.29 ms
01.08 12:19:55 NET: testProject.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'testname' AND Password = E'', _type => core/server.query }
01.08 12:19:55 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'testname' AND Password = E''
01.08 12:19:55 QUEUE: testProject.0 (thread) response core/server.query
01.08 12:19:55 TIME: core/server.query : 84.54 ms
