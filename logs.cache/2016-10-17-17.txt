17.10 17:20:06 NET: vdl.0 (thread) request core/server.query { q => SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36', _type => core/server.query }
17.10 17:20:06 DB: SELECT ID, Name, NetworkID, IsBanned FROM Users WHERE Name = E'uid36' AND Password = E'uid36'
17.10 17:20:06 QUEUE: vdl.0 (thread) response core/server.query
17.10 17:20:06 TIME: core/server.query : 1.54 ms
17.10 17:20:06 NET: vdl.0 (thread) request core/user.isOnlineID { id => 36, _type => core/user.isOnlineID }
17.10 17:20:06 QUEUE: vdl.0 (thread) response core/user.isOnlineID
17.10 17:20:06 TIME: core/user.isOnlineID : 0.03 ms
17.10 17:20:06 NET: vdl.0 (thread) request core/cache.get { type => user, v => -1, id => 36, _type => core/cache.get }
17.10 17:20:06 STATS: cache [user], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
17.10 17:20:06 STATS: cache [user], segments [1 calls, 0 hits, 0 misses]
17.10 17:20:06 STATS: cache [user], database [1632 calls, 0 reads, 0 writes]
17.10 17:20:06 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
17.10 17:20:06 READDB: SELECT * FROM Users WHERE ID = 36
17.10 17:20:06 STATS: cache manager [1], get [1 calls, total 0 sec spent, avg 2.25 ms]
17.10 17:20:06 STATS: cache manager [1], update [0 calls, total 0 sec spent, avg -21474836.48 ms]
17.10 17:20:06 QUEUE: vdl.0 (thread) response core/cache.get
17.10 17:20:06 TIME: core/cache.get : 2.38 ms
17.10 17:20:06 NET: vdl.0 (thread) request core/cache.get { type => questdata, v => -1, id => 36, _type => core/cache.get }
17.10 17:20:06 STATS: cache [questdata], get [0 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
17.10 17:20:06 STATS: cache [questdata], segments [1 calls, 0 hits, 0 misses]
17.10 17:20:06 STATS: cache [questdata], database [1632 calls, 0 reads, 0 writes]
17.10 17:20:06 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
17.10 17:20:06 READDB: SELECT * FROM UserQuests WHERE ID = 36
17.10 17:20:06 QUEUE: vdl.0 (thread) response core/cache.get
17.10 17:20:06 TIME: core/cache.get : 0.9 ms
17.10 17:20:06 NET: vdl.0 (thread) request core/user.loginPost { lang => en, networkid => , platform => web, networktype =>   , id => 36, _type => core/user.loginPost, ipAddr => 172.16.10.1 }
17.10 17:20:06 QUEUE: vdl.0 (thread) response core/user.loginPost { _type => core/user.loginPost }
17.10 17:20:06 TIME: core/user.loginPost : 0.08 ms
17.10 17:20:14 NET: vdl.0 (thread) request core/cache.update { diff => {language => en}, type => user, unlock => false, id => 36, _type => core/cache.update }
17.10 17:20:14 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 17:20:14 TIME: core/cache.update : 0.07 ms
17.10 17:20:15 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476702920,"lastLoginDate":291,"lastLoadDate":1018},"effects":{"list":[]}}' WHERE ID = 36
17.10 17:20:54 TIMER: Clans cache...
17.10 17:20:54 TIMER: Clans cache: 0ms
17.10 17:20:54 TIMER: Check tournament...
17.10 17:20:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:20' AND status = 'starting'
17.10 17:20:54 TIMER: Check tournament: 0ms
17.10 17:20:54 TIMER: Clans cache...
17.10 17:20:54 TIMER: Clans cache: 0ms
17.10 17:20:54 TIMER: Check tournament...
17.10 17:20:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:21' AND status = 'starting'
17.10 17:20:54 TIMER: Check tournament: 0ms
17.10 17:20:54 TIMER: Clans cache...
17.10 17:20:54 TIMER: Clans cache: 0ms
17.10 17:20:54 TIMER: Check tournament...
17.10 17:20:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:22' AND status = 'starting'
17.10 17:20:54 TIMER: Check tournament: 0ms
17.10 17:20:54 NET: vdl.0 (thread) request core/server.query { q => SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true, _type => core/server.query }
17.10 17:20:54 DB: SELECT id FROM battle WHERE firstid=36 OR secondid=36 AND finished <> true
17.10 17:20:54 QUEUE: vdl.0 (thread) response core/server.query { list => {}, errorCode => ok, _type => core/server.query }
17.10 17:20:54 TIME: core/server.query : 1.12 ms
17.10 17:20:54 NET: vdl.0 (thread) request vdl/cache.battle.infoRoom { roomId => 0, _type => vdl/cache.battle.infoRoom }
17.10 17:20:54 STATS: cache [battle], get [1 calls, 0 cache hits, 0 cache misses, 0 same version, 0 not found]
17.10 17:20:54 STATS: cache [battle], segments [1 calls, 0 hits, 0 misses]
17.10 17:20:54 STATS: cache [battle], database [1860 calls, 0 reads, 0 writes]
17.10 17:20:54 STATS: cache [battle], lock [0 calls, 0 attempts, 0 failures]
17.10 17:20:54 READDB: SELECT * FROM Battle WHERE ID = 0
17.10 17:20:54 TRACE: vdl/cache.battle.infoRoom : Invalid field access : get
17.10 17:20:54 TRACE: vdl/cache.battle.infoRoom : 
Called from modules/VDLCache.hx line 125
Called from modules/VDLCache.hx line 118
Called from modules/VDLCache.hx line 79
Called from snipe/cache/CacheServer.hx line 487
17.10 17:20:54 QUEUE: vdl.0 (thread) response vdl/cache.battle.infoRoom { errorCode => _requestException, _type => vdl/cache.battle.infoRoom }
17.10 17:20:54 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => user, unlock => true, id => 36, _type => core/cache.update }
17.10 17:20:54 STATS: cache [user], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
17.10 17:20:54 STATS: cache [user], segments [4 calls, 1 hits, 2 misses]
17.10 17:20:54 STATS: cache [user], database [1860 calls, 1 reads, 1 writes]
17.10 17:20:54 STATS: cache [user], lock [1 calls, 1 attempts, 0 failures]
17.10 17:20:54 STATS: cache manager [1], get [2 calls, total 0 sec spent, avg 1.54 ms]
17.10 17:20:54 STATS: cache manager [1], update [2 calls, total 0 sec spent, avg 0.09 ms]
17.10 17:20:54 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 2, _type => core/cache.update }
17.10 17:20:54 TIME: core/cache.update : 0.27 ms
17.10 17:20:54 NET: vdl.0 (thread) request core/cache.update { diff => {}, type => questdata, unlock => true, id => 36, _type => core/cache.update }
17.10 17:20:54 STATS: cache [questdata], get [1 calls, 0 cache hits, 1 cache misses, 0 same version, 0 not found]
17.10 17:20:54 STATS: cache [questdata], segments [3 calls, 0 hits, 2 misses]
17.10 17:20:54 STATS: cache [questdata], database [1860 calls, 1 reads, 0 writes]
17.10 17:20:54 STATS: cache [questdata], lock [1 calls, 1 attempts, 0 failures]
17.10 17:20:54 QUEUE: vdl.0 (thread) response core/cache.update { errorCode => ok, version => 1, _type => core/cache.update }
17.10 17:20:54 TIME: core/cache.update : 0.2 ms
17.10 17:20:54 NET: vdl.0 (thread) request core/user.logoutPost { networkid => , networktype =>   , id => 36, _type => core/user.logoutPost }
17.10 17:20:54 QUEUE: vdl.0 (thread) response core/user.logoutPost { errorCode => ok, _type => core/user.logoutPost }
17.10 17:20:54 TIME: core/user.logoutPost : 0.06 ms
17.10 17:20:54 WRITEDB: UPDATE Users SET name = E'uid36', deleted = E'false', email = E'', networktype = E'  ', password = E'uid36', isbanned = E'false', regdate = E'2016-10-14 18:14:45.120358+03', language = E'en', networkid = E'', params = E'{"inventory":{"list":[]},"vars":{},"attrs":{"_lastTime.24hr":1476702920,"lastLoginDate":291,"lastLoadDate":1018},"effects":{"list":[]}}' WHERE ID = 36
17.10 17:20:54 WRITEDB: UPDATE UserQuests SET params = E'oy6:questsoy4:listahgg' WHERE ID = 36
17.10 17:20:54 TIMER: Clans cache...
17.10 17:20:54 TIMER: Clans cache: 0ms
17.10 17:20:54 TIMER: Check tournament...
17.10 17:20:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:23' AND status = 'starting'
17.10 17:20:54 TIMER: Check tournament: 0ms
17.10 17:24:04 BLOCKREMOVE: user 36 removed
17.10 17:24:04 BLOCKREMOVE: questdata 36 removed
17.10 17:24:54 TIMER: Clans cache...
17.10 17:24:54 TIMER: Clans cache: 0ms
17.10 17:24:54 TIMER: Check tournament...
17.10 17:24:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:24' AND status = 'starting'
17.10 17:24:54 TIMER: Check tournament: 0ms
17.10 17:24:54 TIMER: Clans cache...
17.10 17:24:54 TIMER: Clans cache: 0ms
17.10 17:24:54 TIMER: Check tournament...
17.10 17:24:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:25' AND status = 'starting'
17.10 17:24:54 TIMER: Check tournament: 0ms
17.10 17:24:54 TIMER: Clans cache...
17.10 17:24:54 TIMER: Clans cache: 0ms
17.10 17:24:54 TIMER: Check tournament...
17.10 17:24:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:26' AND status = 'starting'
17.10 17:24:54 TIMER: Check tournament: 0ms
17.10 17:24:54 TIMER: Clans cache...
17.10 17:24:54 TIMER: Clans cache: 0ms
17.10 17:24:54 TIMER: Check tournament...
17.10 17:24:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:27' AND status = 'starting'
17.10 17:24:54 TIMER: Check tournament: 0ms
17.10 17:24:54 TIMER: Clans cache...
17.10 17:24:54 TIMER: Clans cache: 0ms
17.10 17:24:54 TIMER: Check tournament...
17.10 17:24:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:28' AND status = 'starting'
17.10 17:24:54 TIMER: Check tournament: 0ms
17.10 17:24:54 TIMER: Clans cache...
17.10 17:24:54 TIMER: Clans cache: 0ms
17.10 17:24:54 TIMER: Check tournament...
17.10 17:24:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:29' AND status = 'starting'
17.10 17:24:54 TIMER: Check tournament: 0ms
17.10 17:24:54 TIMER: Clans cache...
17.10 17:24:54 TIMER: Clans cache: 0ms
17.10 17:24:54 TIMER: Check tournament...
17.10 17:24:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:30' AND status = 'starting'
17.10 17:24:54 TIMER: Check tournament: 0ms
17.10 17:24:54 TIMER: Clans cache...
17.10 17:24:54 TIMER: Clans cache: 0ms
17.10 17:24:54 TIMER: Check tournament...
17.10 17:24:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:31' AND status = 'starting'
17.10 17:24:54 TIMER: Check tournament: 0ms
17.10 17:24:54 TIMER: Clans cache...
17.10 17:24:54 TIMER: Clans cache: 0ms
17.10 17:24:54 TIMER: Check tournament...
17.10 17:24:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:32' AND status = 'starting'
17.10 17:24:54 TIMER: Check tournament: 0ms
17.10 17:24:54 TIMER: Clans cache...
17.10 17:24:54 TIMER: Clans cache: 0ms
17.10 17:24:54 TIMER: Check tournament...
17.10 17:24:54 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:33' AND status = 'starting'
17.10 17:24:54 TIMER: Check tournament: 0ms
17.10 17:55:20 TIMER: Starting timer...
17.10 17:55:20 TIMER: Timer running...
17.10 17:55:20 DB: SELECT * FROM GameVars
17.10 17:55:20 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd + '1day'::interval) AS TimeEnd FROM CalendarEvents ORDER BY ID
17.10 17:55:20 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
17.10 17:55:20 DB: SELECT * FROM Shops WHERE ID = 1
17.10 17:55:20 TEMP: load ./tmp/quest_daily_ids
17.10 17:55:20 DB: SELECT ID FROM QuestChains WHERE IsEnabled = 't' AND Params LIKE '%"isDaily":true%' ORDER BY ID
17.10 17:55:20 TEMP: save ./tmp/quest_daily_ids
17.10 17:55:20 NET: ??? request core/server.login { host => 172.16.35.23, name => vdl.0, port => 2010, type => game, _type => core/server.login, externalHost => 172.16.35.23, externalPort => 2010 }
17.10 17:55:20 QUEUE: vdl.0 (thread) response server.login
17.10 17:55:20 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM LocalizationStrings, _type => core/server.query }
17.10 17:55:20 DB: SELECT * FROM LocalizationStrings
17.10 17:55:20 QUEUE: vdl.0 (thread) response core/server.query
17.10 17:55:20 TIME: core/server.query : 11.47 ms
17.10 17:55:20 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM GameVars, _type => core/server.query }
17.10 17:55:20 DB: SELECT * FROM GameVars
17.10 17:55:20 QUEUE: vdl.0 (thread) response core/server.query
17.10 17:55:20 TIME: core/server.query : 0.68 ms
17.10 17:55:20 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestParameterTypes ORDER BY ID, _type => core/server.query }
17.10 17:55:20 DB: SELECT * FROM QuestParameterTypes ORDER BY ID
17.10 17:55:20 QUEUE: vdl.0 (thread) response core/server.query
17.10 17:55:20 TIME: core/server.query : 1.02 ms
17.10 17:55:20 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestConditionTypes ORDER BY ID, _type => core/server.query }
17.10 17:55:20 DB: SELECT * FROM QuestConditionTypes ORDER BY ID
17.10 17:55:20 QUEUE: vdl.0 (thread) response core/server.query
17.10 17:55:20 TIME: core/server.query : 0.75 ms
17.10 17:55:20 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM QuestChains WHERE IsEnabled = 't', _type => core/server.query }
17.10 17:55:20 DB: SELECT * FROM QuestChains WHERE IsEnabled = 't'
17.10 17:55:20 QUEUE: vdl.0 (thread) response core/server.query
17.10 17:55:20 TIME: core/server.query : 0.91 ms
17.10 17:55:20 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f'), _type => core/server.query }
17.10 17:55:20 DB: SELECT * FROM Quests WHERE ChainID NOT IN (SELECT ID FROM QuestChains WHERE IsEnabled = 'f')
17.10 17:55:20 QUEUE: vdl.0 (thread) response core/server.query
17.10 17:55:20 TIME: core/server.query : 1.18 ms
17.10 17:55:20 NET: vdl.0 (thread) request core/quest.getDaily { _type => core/quest.getDaily }
17.10 17:55:20 QUEUE: vdl.0 (thread) response core/quest.getDaily
17.10 17:55:20 TIME: core/quest.getDaily : 0.04 ms
17.10 17:55:20 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserAttributeTypes, _type => core/server.query }
17.10 17:55:20 DB: SELECT * FROM UserAttributeTypes
17.10 17:55:20 QUEUE: vdl.0 (thread) response core/server.query
17.10 17:55:20 TIME: core/server.query : 0.62 ms
17.10 17:55:20 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM UserVariableTypes, _type => core/server.query }
17.10 17:55:20 DB: SELECT * FROM UserVariableTypes
17.10 17:55:20 QUEUE: vdl.0 (thread) response core/server.query
17.10 17:55:20 TIME: core/server.query : 0.55 ms
17.10 17:55:20 NET: vdl.0 (thread) request core/server.query { q => SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID, _type => core/server.query }
17.10 17:55:20 DB: SELECT i.ID, i.GroupID, i.StringID, i.Name, i.Note, i.Params, i.TypeID, it.StringID AS Type, it.SlotID AS SlotID, ig.Name AS Group FROM Items AS i JOIN ItemTypes AS it ON i.TypeID = it.ID JOIN ItemGroups AS ig ON i.GroupID = ig.ID
17.10 17:55:20 QUEUE: vdl.0 (thread) response core/server.query
17.10 17:55:20 TIME: core/server.query : 1.46 ms
17.10 17:55:20 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM ItemGroups, _type => core/server.query }
17.10 17:55:20 DB: SELECT * FROM ItemGroups
17.10 17:55:20 QUEUE: vdl.0 (thread) response core/server.query
17.10 17:55:20 TIME: core/server.query : 0.53 ms
17.10 17:55:20 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Bundles ORDER BY ID, _type => core/server.query }
17.10 17:55:20 DB: SELECT * FROM Bundles ORDER BY ID
17.10 17:55:20 QUEUE: vdl.0 (thread) response core/server.query
17.10 17:55:20 TIME: core/server.query : 0.78 ms
17.10 17:55:20 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM BundleItems ORDER BY ID, _type => core/server.query }
17.10 17:55:20 DB: SELECT * FROM BundleItems ORDER BY ID
17.10 17:55:20 QUEUE: vdl.0 (thread) response core/server.query
17.10 17:55:20 TIME: core/server.query : 1.04 ms
17.10 17:55:20 NET: vdl.0 (thread) request core/shop.getList { _type => core/shop.getList }
17.10 17:55:20 QUEUE: vdl.0 (thread) response core/shop.getList
17.10 17:55:20 TIME: core/shop.getList : 0.06 ms
17.10 17:55:20 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM EffectAttributeTypes, _type => core/server.query }
17.10 17:55:20 DB: SELECT * FROM EffectAttributeTypes
17.10 17:55:20 QUEUE: vdl.0 (thread) response core/server.query
17.10 17:55:20 TIME: core/server.query : 1.1 ms
17.10 17:55:20 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Effects, _type => core/server.query }
17.10 17:55:20 DB: SELECT * FROM Effects
17.10 17:55:20 QUEUE: vdl.0 (thread) response core/server.query
17.10 17:55:20 TIME: core/server.query : 0.68 ms
17.10 17:55:20 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID, _type => core/server.query }
17.10 17:55:20 DB: SELECT *, date_part('epoch', DateStart) AS TimeStart, date_part('epoch', DateEnd) AS TimeEnd FROM CalendarEvents ORDER BY ID
17.10 17:55:20 QUEUE: vdl.0 (thread) response core/server.query
17.10 17:55:20 TIME: core/server.query : 1.08 ms
17.10 17:55:20 NET: vdl.0 (thread) request core/server.query { q => SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID, _type => core/server.query }
17.10 17:55:20 DB: SELECT *, date_part('epoch', Date) AS TimeStart FROM CalendarEventStages ORDER BY EventID, StageID
17.10 17:55:20 QUEUE: vdl.0 (thread) response core/server.query
17.10 17:55:20 TIME: core/server.query : 1.22 ms
17.10 17:55:20 NET: vdl.0 (thread) request core/server.query { q => SELECT * FROM Badges, _type => core/server.query }
17.10 17:55:20 DB: SELECT * FROM Badges
17.10 17:55:20 QUEUE: vdl.0 (thread) response core/server.query
17.10 17:55:20 TIME: core/server.query : 1.02 ms
17.10 17:55:20 TIMER: Clans cache...
17.10 17:55:20 TIMER: Clans cache: 0ms
17.10 17:55:20 TIMER: Check tournament...
17.10 17:55:20 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:56' AND status = 'starting'
17.10 17:55:20 TIMER: Check tournament: 1ms
17.10 17:55:20 TIMER: Clans cache...
17.10 17:55:20 TIMER: Clans cache: 0ms
17.10 17:55:20 TIMER: Check tournament...
17.10 17:55:20 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:57' AND status = 'starting'
17.10 17:55:20 TIMER: Check tournament: 1ms
17.10 17:55:20 TIMER: Clans cache...
17.10 17:55:20 TIMER: Clans cache: 0ms
17.10 17:55:20 TIMER: Check tournament...
17.10 17:55:20 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:58' AND status = 'starting'
17.10 17:55:20 TIMER: Check tournament: 1ms
17.10 17:55:20 TIMER: Clans cache...
17.10 17:55:20 TIMER: Clans cache: 0ms
17.10 17:55:20 TIMER: Check tournament...
17.10 17:55:20 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 17:59' AND status = 'starting'
17.10 17:55:20 TIMER: Check tournament: 1ms
17.10 17:55:20 PENDING: INSERT INTO LogUserOnlineCount (Date, Min, Max, Avg) VALUES (now(), 0, 0, 0)
17.10 17:55:20 TIMER: Clans cache...
17.10 17:55:20 TIMER: Clans cache: 0ms
17.10 17:55:20 TIMER: Check tournament...
17.10 17:55:20 DB: SELECT * FROM tournament WHERE startdate = '2016-17-10 18:00' AND status = 'starting'
17.10 17:55:20 TIMER: Check tournament: 2ms
